{"ast":null,"code":"/*! DataTables 2.1.8\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\nvar DataTable = function (selector, options) {\n  // Check if called with a window or jQuery object for DOM less applications\n  // This is for backwards compatibility\n  if (DataTable.factory(selector, options)) {\n    return DataTable;\n  }\n\n  // When creating with `new`, create a new DataTable, returning the API instance\n  if (this instanceof DataTable) {\n    return $(selector).DataTable(options);\n  } else {\n    // Argument switching\n    options = selector;\n  }\n  var _that = this;\n  var emptyInit = options === undefined;\n  var len = this.length;\n  if (emptyInit) {\n    options = {};\n  }\n\n  // Method to get DT API instance from jQuery object\n  this.api = function () {\n    return new _Api(this);\n  };\n  this.each(function () {\n    // For each initialisation we want to give it a clean initialisation\n    // object that can be bashed around\n    var o = {};\n    var oInit = len > 1 ?\n    // optimisation for single table case\n    _fnExtend(o, options, true) : options;\n    var i = 0,\n      iLen;\n    var sId = this.getAttribute('id');\n    var defaults = DataTable.defaults;\n    var $this = $(this);\n\n    /* Sanity check */\n    if (this.nodeName.toLowerCase() != 'table') {\n      _fnLog(null, 0, 'Non-table node initialisation (' + this.nodeName + ')', 2);\n      return;\n    }\n    $(this).trigger('options.dt', oInit);\n\n    /* Backwards compatibility for the defaults */\n    _fnCompatOpts(defaults);\n    _fnCompatCols(defaults.column);\n\n    /* Convert the camel-case defaults to Hungarian */\n    _fnCamelToHungarian(defaults, defaults, true);\n    _fnCamelToHungarian(defaults.column, defaults.column, true);\n\n    /* Setting up the initialisation object */\n    _fnCamelToHungarian(defaults, $.extend(oInit, $this.data()), true);\n\n    /* Check to see if we are re-initialising a table */\n    var allSettings = DataTable.settings;\n    for (i = 0, iLen = allSettings.length; i < iLen; i++) {\n      var s = allSettings[i];\n\n      /* Base check on table node */\n      if (s.nTable == this || s.nTHead && s.nTHead.parentNode == this || s.nTFoot && s.nTFoot.parentNode == this) {\n        var bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n        var bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n        if (emptyInit || bRetrieve) {\n          return s.oInstance;\n        } else if (bDestroy) {\n          new DataTable.Api(s).destroy();\n          break;\n        } else {\n          _fnLog(s, 0, 'Cannot reinitialise DataTable', 3);\n          return;\n        }\n      }\n\n      /* If the element we are initialising has the same ID as a table which was previously\n       * initialised, but the table nodes don't match (from before) then we destroy the old\n       * instance by simply deleting it. This is under the assumption that the table has been\n       * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n       */\n      if (s.sTableId == this.id) {\n        allSettings.splice(i, 1);\n        break;\n      }\n    }\n\n    /* Ensure the table has an ID - required for accessibility */\n    if (sId === null || sId === \"\") {\n      sId = \"DataTables_Table_\" + DataTable.ext._unique++;\n      this.id = sId;\n    }\n\n    /* Create the settings object for this table and set some of the default parameters */\n    var oSettings = $.extend(true, {}, DataTable.models.oSettings, {\n      \"sDestroyWidth\": $this[0].style.width,\n      \"sInstance\": sId,\n      \"sTableId\": sId,\n      colgroup: $('<colgroup>').prependTo(this),\n      fastData: function (row, column, type) {\n        return _fnGetCellData(oSettings, row, column, type);\n      }\n    });\n    oSettings.nTable = this;\n    oSettings.oInit = oInit;\n    allSettings.push(oSettings);\n\n    // Make a single API instance available for internal handling\n    oSettings.api = new _Api(oSettings);\n\n    // Need to add the instance after the instance after the settings object has been added\n    // to the settings array, so we can self reference the table instance if more than one\n    oSettings.oInstance = _that.length === 1 ? _that : $this.dataTable();\n\n    // Backwards compatibility, before we apply all the defaults\n    _fnCompatOpts(oInit);\n\n    // If the length menu is given, but the init display length is not, use the length menu\n    if (oInit.aLengthMenu && !oInit.iDisplayLength) {\n      oInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0][0] : $.isPlainObject(oInit.aLengthMenu[0]) ? oInit.aLengthMenu[0].value : oInit.aLengthMenu[0];\n    }\n\n    // Apply the defaults and init options to make a single init object will all\n    // options defined from defaults and instance options.\n    oInit = _fnExtend($.extend(true, {}, defaults), oInit);\n\n    // Map the initialisation options onto the settings object\n    _fnMap(oSettings.oFeatures, oInit, [\"bPaginate\", \"bLengthChange\", \"bFilter\", \"bSort\", \"bSortMulti\", \"bInfo\", \"bProcessing\", \"bAutoWidth\", \"bSortClasses\", \"bServerSide\", \"bDeferRender\"]);\n    _fnMap(oSettings, oInit, [\"ajax\", \"fnFormatNumber\", \"sServerMethod\", \"aaSorting\", \"aaSortingFixed\", \"aLengthMenu\", \"sPaginationType\", \"iStateDuration\", \"bSortCellsTop\", \"iTabIndex\", \"sDom\", \"fnStateLoadCallback\", \"fnStateSaveCallback\", \"renderer\", \"searchDelay\", \"rowId\", \"caption\", \"layout\", \"orderDescReverse\", \"typeDetect\", [\"iCookieDuration\", \"iStateDuration\"],\n    // backwards compat\n    [\"oSearch\", \"oPreviousSearch\"], [\"aoSearchCols\", \"aoPreSearchCols\"], [\"iDisplayLength\", \"_iDisplayLength\"]]);\n    _fnMap(oSettings.oScroll, oInit, [[\"sScrollX\", \"sX\"], [\"sScrollXInner\", \"sXInner\"], [\"sScrollY\", \"sY\"], [\"bScrollCollapse\", \"bCollapse\"]]);\n    _fnMap(oSettings.oLanguage, oInit, \"fnInfoCallback\");\n\n    /* Callback functions which are array driven */\n    _fnCallbackReg(oSettings, 'aoDrawCallback', oInit.fnDrawCallback);\n    _fnCallbackReg(oSettings, 'aoStateSaveParams', oInit.fnStateSaveParams);\n    _fnCallbackReg(oSettings, 'aoStateLoadParams', oInit.fnStateLoadParams);\n    _fnCallbackReg(oSettings, 'aoStateLoaded', oInit.fnStateLoaded);\n    _fnCallbackReg(oSettings, 'aoRowCallback', oInit.fnRowCallback);\n    _fnCallbackReg(oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow);\n    _fnCallbackReg(oSettings, 'aoHeaderCallback', oInit.fnHeaderCallback);\n    _fnCallbackReg(oSettings, 'aoFooterCallback', oInit.fnFooterCallback);\n    _fnCallbackReg(oSettings, 'aoInitComplete', oInit.fnInitComplete);\n    _fnCallbackReg(oSettings, 'aoPreDrawCallback', oInit.fnPreDrawCallback);\n    oSettings.rowIdFn = _fnGetObjectDataFn(oInit.rowId);\n\n    /* Browser support detection */\n    _fnBrowserDetect(oSettings);\n    var oClasses = oSettings.oClasses;\n    $.extend(oClasses, DataTable.ext.classes, oInit.oClasses);\n    $this.addClass(oClasses.table);\n    if (!oSettings.oFeatures.bPaginate) {\n      oInit.iDisplayStart = 0;\n    }\n    if (oSettings.iInitDisplayStart === undefined) {\n      /* Display start point, taking into account the save saving */\n      oSettings.iInitDisplayStart = oInit.iDisplayStart;\n      oSettings._iDisplayStart = oInit.iDisplayStart;\n    }\n    var defer = oInit.iDeferLoading;\n    if (defer !== null) {\n      oSettings.deferLoading = true;\n      var tmp = Array.isArray(defer);\n      oSettings._iRecordsDisplay = tmp ? defer[0] : defer;\n      oSettings._iRecordsTotal = tmp ? defer[1] : defer;\n    }\n\n    /*\n     * Columns\n     * See if we should load columns automatically or use defined ones\n     */\n    var columnsInit = [];\n    var thead = this.getElementsByTagName('thead');\n    var initHeaderLayout = _fnDetectHeader(oSettings, thead[0]);\n\n    // If we don't have a columns array, then generate one with nulls\n    if (oInit.aoColumns) {\n      columnsInit = oInit.aoColumns;\n    } else if (initHeaderLayout.length) {\n      for (i = 0, iLen = initHeaderLayout[0].length; i < iLen; i++) {\n        columnsInit.push(null);\n      }\n    }\n\n    // Add the columns\n    for (i = 0, iLen = columnsInit.length; i < iLen; i++) {\n      _fnAddColumn(oSettings);\n    }\n\n    // Apply the column definitions\n    _fnApplyColumnDefs(oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n      _fnColumnOptions(oSettings, iCol, oDef);\n    });\n\n    /* HTML5 attribute detection - build an mData object automatically if the\n     * attributes are found\n     */\n    var rowOne = $this.children('tbody').find('tr').eq(0);\n    if (rowOne.length) {\n      var a = function (cell, name) {\n        return cell.getAttribute('data-' + name) !== null ? name : null;\n      };\n      $(rowOne[0]).children('th, td').each(function (i, cell) {\n        var col = oSettings.aoColumns[i];\n        if (!col) {\n          _fnLog(oSettings, 0, 'Incorrect column count', 18);\n        }\n        if (col.mData === i) {\n          var sort = a(cell, 'sort') || a(cell, 'order');\n          var filter = a(cell, 'filter') || a(cell, 'search');\n          if (sort !== null || filter !== null) {\n            col.mData = {\n              _: i + '.display',\n              sort: sort !== null ? i + '.@data-' + sort : undefined,\n              type: sort !== null ? i + '.@data-' + sort : undefined,\n              filter: filter !== null ? i + '.@data-' + filter : undefined\n            };\n            col._isArrayHost = true;\n            _fnColumnOptions(oSettings, i);\n          }\n        }\n      });\n    }\n\n    // Must be done after everything which can be overridden by the state saving!\n    _fnCallbackReg(oSettings, 'aoDrawCallback', _fnSaveState);\n    var features = oSettings.oFeatures;\n    if (oInit.bStateSave) {\n      features.bStateSave = true;\n    }\n\n    // If aaSorting is not defined, then we use the first indicator in asSorting\n    // in case that has been altered, so the default sort reflects that option\n    if (oInit.aaSorting === undefined) {\n      var sorting = oSettings.aaSorting;\n      for (i = 0, iLen = sorting.length; i < iLen; i++) {\n        sorting[i][1] = oSettings.aoColumns[i].asSorting[0];\n      }\n    }\n\n    // Do a first pass on the sorting classes (allows any size changes to be taken into\n    // account, and also will apply sorting disabled classes if disabled\n    _fnSortingClasses(oSettings);\n    _fnCallbackReg(oSettings, 'aoDrawCallback', function () {\n      if (oSettings.bSorted || _fnDataSource(oSettings) === 'ssp' || features.bDeferRender) {\n        _fnSortingClasses(oSettings);\n      }\n    });\n\n    /*\n     * Table HTML init\n     * Cache the header, body and footer as required, creating them if needed\n     */\n    var caption = $this.children('caption');\n    if (oSettings.caption) {\n      if (caption.length === 0) {\n        caption = $('<caption/>').appendTo($this);\n      }\n      caption.html(oSettings.caption);\n    }\n\n    // Store the caption side, so we can remove the element from the document\n    // when creating the element\n    if (caption.length) {\n      caption[0]._captionSide = caption.css('caption-side');\n      oSettings.captionNode = caption[0];\n    }\n    if (thead.length === 0) {\n      thead = $('<thead/>').appendTo($this);\n    }\n    oSettings.nTHead = thead[0];\n    $('tr', thead).addClass(oClasses.thead.row);\n    var tbody = $this.children('tbody');\n    if (tbody.length === 0) {\n      tbody = $('<tbody/>').insertAfter(thead);\n    }\n    oSettings.nTBody = tbody[0];\n    var tfoot = $this.children('tfoot');\n    if (tfoot.length === 0) {\n      // If we are a scrolling table, and no footer has been given, then we need to create\n      // a tfoot element for the caption element to be appended to\n      tfoot = $('<tfoot/>').appendTo($this);\n    }\n    oSettings.nTFoot = tfoot[0];\n    $('tr', tfoot).addClass(oClasses.tfoot.row);\n\n    // Copy the data index array\n    oSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\n    // Initialisation complete - table can be drawn\n    oSettings.bInitialised = true;\n\n    // Language definitions\n    var oLanguage = oSettings.oLanguage;\n    $.extend(true, oLanguage, oInit.oLanguage);\n    if (oLanguage.sUrl) {\n      // Get the language definitions from a file\n      $.ajax({\n        dataType: 'json',\n        url: oLanguage.sUrl,\n        success: function (json) {\n          _fnCamelToHungarian(defaults.oLanguage, json);\n          $.extend(true, oLanguage, json, oSettings.oInit.oLanguage);\n          _fnCallbackFire(oSettings, null, 'i18n', [oSettings], true);\n          _fnInitialise(oSettings);\n        },\n        error: function () {\n          // Error occurred loading language file\n          _fnLog(oSettings, 0, 'i18n file loading error', 21);\n\n          // Continue on as best we can\n          _fnInitialise(oSettings);\n        }\n      });\n    } else {\n      _fnCallbackFire(oSettings, null, 'i18n', [oSettings], true);\n      _fnInitialise(oSettings);\n    }\n  });\n  _that = null;\n  return this;\n};\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n  /**\n   * Buttons. For use with the Buttons extension for DataTables. This is\n   * defined here so other extensions can define buttons regardless of load\n   * order. It is _not_ used by DataTables core.\n   *\n   *  @type object\n   *  @default {}\n   */\n  buttons: {},\n  /**\n   * Element class names\n   *\n   *  @type object\n   *  @default {}\n   */\n  classes: {},\n  /**\n   * DataTables build type (expanded by the download builder)\n   *\n   *  @type string\n   */\n  builder: \"-source-\",\n  /**\n   * Error reporting.\n   * \n   * How should DataTables report an error. Can take the value 'alert',\n   * 'throw', 'none' or a function.\n   *\n   *  @type string|function\n   *  @default alert\n   */\n  errMode: \"alert\",\n  /**\n   * Legacy so v1 plug-ins don't throw js errors on load\n   */\n  feature: [],\n  /**\n   * Feature plug-ins.\n   * \n   * This is an object of callbacks which provide the features for DataTables\n   * to be initialised via the `layout` option.\n   */\n  features: {},\n  /**\n   * Row searching.\n   * \n   * This method of searching is complimentary to the default type based\n   * searching, and a lot more comprehensive as it allows you complete control\n   * over the searching logic. Each element in this array is a function\n   * (parameters described below) that is called for every row in the table,\n   * and your logic decides if it should be included in the searching data set\n   * or not.\n   *\n   * Searching functions have the following input parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{array|object}` Data for the row to be processed (same as the\n   *    original format that was passed in as the data source, or an array\n   *    from a DOM data source\n   * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n   *    can be useful to retrieve the `TR` element if you need DOM interaction.\n   *\n   * And the following return is expected:\n   *\n   * * {boolean} Include the row in the searched result set (true) or not\n   *   (false)\n   *\n   * Note that as with the main search ability in DataTables, technically this\n   * is \"filtering\", since it is subtractive. However, for consistency in\n   * naming we call it searching here.\n   *\n   *  @type array\n   *  @default []\n   *\n   *  @example\n   *    // The following example shows custom search being applied to the\n   *    // fourth column (i.e. the data[3] index) based on two input values\n   *    // from the end-user, matching the data in a certain range.\n   *    $.fn.dataTable.ext.search.push(\n   *      function( settings, data, dataIndex ) {\n   *        var min = document.getElementById('min').value * 1;\n   *        var max = document.getElementById('max').value * 1;\n   *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n   *\n   *        if ( min == \"\" && max == \"\" ) {\n   *          return true;\n   *        }\n   *        else if ( min == \"\" && version < max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && \"\" == max ) {\n   *          return true;\n   *        }\n   *        else if ( min < version && version < max ) {\n   *          return true;\n   *        }\n   *        return false;\n   *      }\n   *    );\n   */\n  search: [],\n  /**\n   * Selector extensions\n   *\n   * The `selector` option can be used to extend the options available for the\n   * selector modifier options (`selector-modifier` object data type) that\n   * each of the three built in selector types offer (row, column and cell +\n   * their plural counterparts). For example the Select extension uses this\n   * mechanism to provide an option to select only rows, columns and cells\n   * that have been marked as selected by the end user (`{selected: true}`),\n   * which can be used in conjunction with the existing built in selector\n   * options.\n   *\n   * Each property is an array to which functions can be pushed. The functions\n   * take three attributes:\n   *\n   * * Settings object for the host table\n   * * Options object (`selector-modifier` object type)\n   * * Array of selected item indexes\n   *\n   * The return is an array of the resulting item indexes after the custom\n   * selector has been applied.\n   *\n   *  @type object\n   */\n  selector: {\n    cell: [],\n    column: [],\n    row: []\n  },\n  /**\n   * Legacy configuration options. Enable and disable legacy options that\n   * are available in DataTables.\n   *\n   *  @type object\n   */\n  legacy: {\n    /**\n     * Enable / disable DataTables 1.9 compatible server-side processing\n     * requests\n     *\n     *  @type boolean\n     *  @default null\n     */\n    ajax: null\n  },\n  /**\n   * Pagination plug-in methods.\n   * \n   * Each entry in this object is a function and defines which buttons should\n   * be shown by the pagination rendering method that is used for the table:\n   * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n   * buttons are displayed in the document, while the functions here tell it\n   * what buttons to display. This is done by returning an array of button\n   * descriptions (what each button will do).\n   *\n   * Pagination types (the four built in options and any additional plug-in\n   * options defined here) can be used through the `paginationType`\n   * initialisation parameter.\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{int} page` The current page index\n   * 2. `{int} pages` The number of pages in the table\n   *\n   * Each function is expected to return an array where each element of the\n   * array can be one of:\n   *\n   * * `first` - Jump to first page when activated\n   * * `last` - Jump to last page when activated\n   * * `previous` - Show previous page when activated\n   * * `next` - Show next page when activated\n   * * `{int}` - Show page of the index given\n   * * `{array}` - A nested array containing the above elements to add a\n   *   containing 'DIV' element (might be useful for styling).\n   *\n   * Note that DataTables v1.9- used this object slightly differently whereby\n   * an object with two functions would be defined for each plug-in. That\n   * ability is still supported by DataTables 1.10+ to provide backwards\n   * compatibility, but this option of use is now decremented and no longer\n   * documented in DataTables 1.10+.\n   *\n   *  @type object\n   *  @default {}\n   *\n   *  @example\n   *    // Show previous, next and current page buttons only\n   *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n   *      return [ 'previous', page, 'next' ];\n   *    };\n   */\n  pager: {},\n  renderer: {\n    pageButton: {},\n    header: {}\n  },\n  /**\n   * Ordering plug-ins - custom data source\n   * \n   * The extension options for ordering of data available here is complimentary\n   * to the default type based ordering that DataTables typically uses. It\n   * allows much greater control over the the data that is being used to\n   * order a column, but is necessarily therefore more complex.\n   * \n   * This type of ordering is useful if you want to do ordering based on data\n   * live from the DOM (for example the contents of an 'input' element) rather\n   * than just the static string that DataTables knows of.\n   * \n   * The way these plug-ins work is that you create an array of the values you\n   * wish to be ordering for the column in question and then return that\n   * array. The data in the array much be in the index order of the rows in\n   * the table (not the currently ordering order!). Which order data gathering\n   * function is run here depends on the `dt-init columns.orderDataType`\n   * parameter that is used for the column (if any).\n   *\n   * The functions defined take two parameters:\n   *\n   * 1. `{object}` DataTables settings object: see\n   *    {@link DataTable.models.oSettings}\n   * 2. `{int}` Target column index\n   *\n   * Each function is expected to return an array:\n   *\n   * * `{array}` Data for the column to be ordering upon\n   *\n   *  @type array\n   *\n   *  @example\n   *    // Ordering using `input` node values\n   *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n   *    {\n   *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n   *        return $('input', td).val();\n   *      } );\n   *    }\n   */\n  order: {},\n  /**\n   * Type based plug-ins.\n   *\n   * Each column in DataTables has a type assigned to it, either by automatic\n   * detection or by direct assignment using the `type` option for the column.\n   * The type of a column will effect how it is ordering and search (plug-ins\n   * can also make use of the column type if required).\n   *\n   * @namespace\n   */\n  type: {\n    /**\n     * Automatic column class assignment\n     */\n    className: {},\n    /**\n     * Type detection functions.\n     *\n     * The functions defined in this object are used to automatically detect\n     * a column's type, making initialisation of DataTables super easy, even\n     * when complex data is in the table.\n     *\n     * The functions defined take two parameters:\n     *\n        *  1. `{*}` Data from the column cell to be analysed\n        *  2. `{settings}` DataTables settings object. This can be used to\n        *     perform context specific type detection - for example detection\n        *     based on language settings such as using a comma for a decimal\n        *     place. Generally speaking the options from the settings will not\n        *     be required\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Data type detected, or null if unknown (and thus\n     *   pass it on to the other type detection functions.\n     *\n     *  @type array\n     *\n     *  @example\n     *    // Currency type detection plug-in:\n     *    $.fn.dataTable.ext.type.detect.push(\n     *      function ( data, settings ) {\n     *        // Check the numeric part\n     *        if ( ! data.substring(1).match(/[0-9]/) ) {\n     *          return null;\n     *        }\n     *\n     *        // Check prefixed by currency\n     *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n     *          return 'currency';\n     *        }\n     *        return null;\n     *      }\n     *    );\n     */\n    detect: [],\n    /**\n     * Automatic renderer assignment\n     */\n    render: {},\n    /**\n     * Type based search formatting.\n     *\n     * The type based searching functions can be used to pre-format the\n     * data to be search on. For example, it can be used to strip HTML\n     * tags or to de-format telephone numbers for numeric only searching.\n     *\n     * Note that is a search is not defined for a column of a given type,\n     * no search formatting will be performed.\n     * \n     * Pre-processing of searching data plug-ins - When you assign the sType\n     * for a column (or have it automatically detected for you by DataTables\n     * or a type detection plug-in), you will typically be using this for\n     * custom sorting, but it can also be used to provide custom searching\n     * by allowing you to pre-processing the data and returning the data in\n     * the format that should be searched upon. This is done by adding\n     * functions this object with a parameter name which matches the sType\n     * for that target column. This is the corollary of <i>afnSortData</i>\n     * for searching data.\n     *\n     * The functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for searching\n     *\n     * Each function is expected to return:\n     *\n     * * `{string|null}` Formatted string that will be used for the searching.\n     *\n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n     *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n     *    }\n     */\n    search: {},\n    /**\n     * Type based ordering.\n     *\n     * The column type tells DataTables what ordering to apply to the table\n     * when a column is sorted upon. The order for each type that is defined,\n     * is defined by the functions available in this object.\n     *\n     * Each ordering option can be described by three properties added to\n     * this object:\n     *\n     * * `{type}-pre` - Pre-formatting function\n     * * `{type}-asc` - Ascending order function\n     * * `{type}-desc` - Descending order function\n     *\n     * All three can be used together, only `{type}-pre` or only\n     * `{type}-asc` and `{type}-desc` together. It is generally recommended\n     * that only `{type}-pre` is used, as this provides the optimal\n     * implementation in terms of speed, although the others are provided\n     * for compatibility with existing Javascript sort functions.\n     *\n     * `{type}-pre`: Functions defined take a single parameter:\n     *\n        *  1. `{*}` Data from the column cell to be prepared for ordering\n     *\n     * And return:\n     *\n     * * `{*}` Data to be sorted upon\n     *\n     * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n     * functions, taking two parameters:\n     *\n        *  1. `{*}` Data to compare to the second parameter\n        *  2. `{*}` Data to compare to the first parameter\n     *\n     * And returning:\n     *\n     * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n     *   than the second parameter, ===0 if the two parameters are equal and\n     *   >0 if the first parameter should be sorted height than the second\n     *   parameter.\n     * \n     *  @type object\n     *  @default {}\n     *\n     *  @example\n     *    // Numeric ordering of formatted numbers with a pre-formatter\n     *    $.extend( $.fn.dataTable.ext.type.order, {\n     *      \"string-pre\": function(x) {\n     *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n     *        return parseFloat( a );\n     *      }\n     *    } );\n     *\n     *  @example\n     *    // Case-sensitive string ordering, with no pre-formatting method\n     *    $.extend( $.fn.dataTable.ext.order, {\n     *      \"string-case-asc\": function(x,y) {\n     *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n     *      },\n     *      \"string-case-desc\": function(x,y) {\n     *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n     *      }\n     *    } );\n     */\n    order: {}\n  },\n  /**\n   * Unique DataTables instance counter\n   *\n   * @type int\n   * @private\n   */\n  _unique: 0,\n  //\n  // Depreciated\n  // The following properties are retained for backwards compatibility only.\n  // The should not be used in new projects and will be removed in a future\n  // version\n  //\n\n  /**\n   * Version check function.\n   *  @type function\n   *  @depreciated Since 1.10\n   */\n  fnVersionCheck: DataTable.fnVersionCheck,\n  /**\n   * Index for what 'this' index API functions should use\n   *  @type int\n   *  @deprecated Since v1.10\n   */\n  iApiIndex: 0,\n  /**\n   * Software version\n   *  @type string\n   *  @deprecated Since v1.10\n   */\n  sVersion: DataTable.version\n};\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend(_ext, {\n  afnFiltering: _ext.search,\n  aTypes: _ext.type.detect,\n  ofnSearch: _ext.type.search,\n  oSort: _ext.type.order,\n  afnSortData: _ext.order,\n  aoFeatures: _ext.feature,\n  oStdClasses: _ext.classes,\n  oPagination: _ext.pager\n});\n$.extend(DataTable.ext.classes, {\n  container: 'dt-container',\n  empty: {\n    row: 'dt-empty'\n  },\n  info: {\n    container: 'dt-info'\n  },\n  layout: {\n    row: 'dt-layout-row',\n    cell: 'dt-layout-cell',\n    tableRow: 'dt-layout-table',\n    tableCell: '',\n    start: 'dt-layout-start',\n    end: 'dt-layout-end',\n    full: 'dt-layout-full'\n  },\n  length: {\n    container: 'dt-length',\n    select: 'dt-input'\n  },\n  order: {\n    canAsc: 'dt-orderable-asc',\n    canDesc: 'dt-orderable-desc',\n    isAsc: 'dt-ordering-asc',\n    isDesc: 'dt-ordering-desc',\n    none: 'dt-orderable-none',\n    position: 'sorting_'\n  },\n  processing: {\n    container: 'dt-processing'\n  },\n  scrolling: {\n    body: 'dt-scroll-body',\n    container: 'dt-scroll',\n    footer: {\n      self: 'dt-scroll-foot',\n      inner: 'dt-scroll-footInner'\n    },\n    header: {\n      self: 'dt-scroll-head',\n      inner: 'dt-scroll-headInner'\n    }\n  },\n  search: {\n    container: 'dt-search',\n    input: 'dt-input'\n  },\n  table: 'dataTable',\n  tbody: {\n    cell: '',\n    row: ''\n  },\n  thead: {\n    cell: '',\n    row: ''\n  },\n  tfoot: {\n    cell: '',\n    row: ''\n  },\n  paging: {\n    active: 'current',\n    button: 'dt-paging-button',\n    container: 'dt-paging',\n    disabled: 'disabled',\n    nav: ''\n  }\n});\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<([^>]*>)/g;\nvar _max_str_len = Math.pow(2, 28);\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp('(\\\\' + ['/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-'].join('|\\\\') + ')', 'g');\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\nvar _empty = function (d) {\n  return !d || d === true || d === '-' ? true : false;\n};\nvar _intVal = function (s) {\n  var integer = parseInt(s, 10);\n  return !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function (num, decimalPoint) {\n  // Cache created regular expressions for speed as this function is called often\n  if (!_re_dic[decimalPoint]) {\n    _re_dic[decimalPoint] = new RegExp(_fnEscapeRegex(decimalPoint), 'g');\n  }\n  return typeof num === 'string' && decimalPoint !== '.' ? num.replace(/\\./g, '').replace(_re_dic[decimalPoint], '.') : num;\n};\nvar _isNumber = function (d, decimalPoint, formatted, allowEmpty) {\n  var type = typeof d;\n  var strType = type === 'string';\n  if (type === 'number' || type === 'bigint') {\n    return true;\n  }\n\n  // If empty return immediately so there must be a number if it is a\n  // formatted string (this stops the string \"k\", or \"kr\", etc being detected\n  // as a formatted number for currency\n  if (allowEmpty && _empty(d)) {\n    return true;\n  }\n  if (decimalPoint && strType) {\n    d = _numToDecimal(d, decimalPoint);\n  }\n  if (formatted && strType) {\n    d = d.replace(_re_formatted_numeric, '');\n  }\n  return !isNaN(parseFloat(d)) && isFinite(d);\n};\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function (d) {\n  return _empty(d) || typeof d === 'string';\n};\n\n// Is a string a number surrounded by HTML?\nvar _htmlNumeric = function (d, decimalPoint, formatted, allowEmpty) {\n  if (allowEmpty && _empty(d)) {\n    return true;\n  }\n\n  // input and select strings mean that this isn't just a number\n  if (typeof d === 'string' && d.match(/<(input|select)/i)) {\n    return null;\n  }\n  var html = _isHtml(d);\n  return !html ? null : _isNumber(_stripHtml(d), decimalPoint, formatted, allowEmpty) ? true : null;\n};\nvar _pluck = function (a, prop, prop2) {\n  var out = [];\n  var i = 0,\n    ien = a.length;\n\n  // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[i] && a[i][prop]) {\n        out.push(a[i][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[i]) {\n        out.push(a[i][prop]);\n      }\n    }\n  }\n  return out;\n};\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function (a, order, prop, prop2) {\n  var out = [];\n  var i = 0,\n    ien = order.length;\n\n  // Could have the test in the loop for slightly smaller code, but speed\n  // is essential here\n  if (prop2 !== undefined) {\n    for (; i < ien; i++) {\n      if (a[order[i]] && a[order[i]][prop]) {\n        out.push(a[order[i]][prop][prop2]);\n      }\n    }\n  } else {\n    for (; i < ien; i++) {\n      if (a[order[i]]) {\n        out.push(a[order[i]][prop]);\n      }\n    }\n  }\n  return out;\n};\nvar _range = function (len, start) {\n  var out = [];\n  var end;\n  if (start === undefined) {\n    start = 0;\n    end = len;\n  } else {\n    end = start;\n    start = len;\n  }\n  for (var i = start; i < end; i++) {\n    out.push(i);\n  }\n  return out;\n};\nvar _removeEmpty = function (a) {\n  var out = [];\n  for (var i = 0, ien = a.length; i < ien; i++) {\n    if (a[i]) {\n      // careful - will remove all falsy values!\n      out.push(a[i]);\n    }\n  }\n  return out;\n};\n\n// Replaceable function in api.util\nvar _stripHtml = function (input) {\n  if (!input || typeof input !== 'string') {\n    return input;\n  }\n\n  // Irrelevant check to workaround CodeQL's false positive on the regex\n  if (input.length > _max_str_len) {\n    throw new Error('Exceeded max str len');\n  }\n  var previous;\n  input = input.replace(_re_html, ''); // Complete tags\n\n  // Safety for incomplete script tag - use do / while to ensure that\n  // we get all instances\n  do {\n    previous = input;\n    input = input.replace(/<script/i, '');\n  } while (input !== previous);\n  return previous;\n};\n\n// Replaceable function in api.util\nvar _escapeHtml = function (d) {\n  if (Array.isArray(d)) {\n    d = d.join(',');\n  }\n  return typeof d === 'string' ? d.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;') : d;\n};\n\n// Remove diacritics from a string by decomposing it and then removing\n// non-ascii characters\nvar _normalize = function (str, both) {\n  if (typeof str !== 'string') {\n    return str;\n  }\n\n  // It is faster to just run `normalize` than it is to check if\n  // we need to with a regex! (Check as it isn't available in old\n  // Safari)\n  var res = str.normalize ? str.normalize(\"NFD\") : str;\n\n  // Equally, here we check if a regex is needed or not\n  return res.length !== str.length ? (both === true ? str + ' ' : '') + res.replace(/[\\u0300-\\u036f]/g, \"\") : res;\n};\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function (src) {\n  if (src.length < 2) {\n    return true;\n  }\n  var sorted = src.slice().sort();\n  var last = sorted[0];\n  for (var i = 1, ien = sorted.length; i < ien; i++) {\n    if (sorted[i] === last) {\n      return false;\n    }\n    last = sorted[i];\n  }\n  return true;\n};\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function (src) {\n  if (Array.from && Set) {\n    return Array.from(new Set(src));\n  }\n  if (_areAllUnique(src)) {\n    return src.slice();\n  }\n\n  // A faster unique method is to use object keys to identify used values,\n  // but this doesn't work with arrays or objects, which we must also\n  // consider. See jsperf.app/compare-array-unique-versions/4 for more\n  // information.\n  var out = [],\n    val,\n    i,\n    ien = src.length,\n    j,\n    k = 0;\n  again: for (i = 0; i < ien; i++) {\n    val = src[i];\n    for (j = 0; j < k; j++) {\n      if (out[j] === val) {\n        continue again;\n      }\n    }\n    out.push(val);\n    k++;\n  }\n  return out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n  if (Array.isArray(val)) {\n    for (var i = 0; i < val.length; i++) {\n      _flatten(out, val[i]);\n    }\n  } else {\n    out.push(val);\n  }\n  return out;\n};\n\n// Similar to jQuery's addClass, but use classList.add\nfunction _addClass(el, name) {\n  if (name) {\n    name.split(' ').forEach(function (n) {\n      if (n) {\n        // `add` does deduplication, so no need to check `contains`\n        el.classList.add(n);\n      }\n    });\n  }\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n  /**\n   * Return a string with diacritic characters decomposed\n   * @param {*} mixed Function or string to normalize\n   * @param {*} both Return original string and the normalized string\n   * @returns String or undefined\n   */\n  diacritics: function (mixed, both) {\n    var type = typeof mixed;\n    if (type !== 'function') {\n      return _normalize(mixed, both);\n    }\n    _normalize = mixed;\n  },\n  /**\n   * Debounce a function\n   *\n   * @param {function} fn Function to be called\n   * @param {integer} freq Call frequency in mS\n   * @return {function} Wrapped function\n   */\n  debounce: function (fn, timeout) {\n    var timer;\n    return function () {\n      var that = this;\n      var args = arguments;\n      clearTimeout(timer);\n      timer = setTimeout(function () {\n        fn.apply(that, args);\n      }, timeout || 250);\n    };\n  },\n  /**\n   * Throttle the calls to a function. Arguments and context are maintained\n   * for the throttled function.\n   *\n   * @param {function} fn Function to be called\n   * @param {integer} freq Call frequency in mS\n   * @return {function} Wrapped function\n   */\n  throttle: function (fn, freq) {\n    var frequency = freq !== undefined ? freq : 200,\n      last,\n      timer;\n    return function () {\n      var that = this,\n        now = +new Date(),\n        args = arguments;\n      if (last && now < last + frequency) {\n        clearTimeout(timer);\n        timer = setTimeout(function () {\n          last = undefined;\n          fn.apply(that, args);\n        }, frequency);\n      } else {\n        last = now;\n        fn.apply(that, args);\n      }\n    };\n  },\n  /**\n   * Escape a string such that it can be used in a regular expression\n   *\n   *  @param {string} val string to escape\n   *  @returns {string} escaped string\n   */\n  escapeRegex: function (val) {\n    return val.replace(_re_escape_regex, '\\\\$1');\n  },\n  /**\n   * Create a function that will write to a nested object or array\n   * @param {*} source JSON notation string\n   * @returns Write function\n   */\n  set: function (source) {\n    if ($.isPlainObject(source)) {\n      /* Unlike get, only the underscore (global) option is used for for\n       * setting data since we don't know the type here. This is why an object\n       * option is not documented for `mData` (which is read/write), but it is\n       * for `mRender` which is read only.\n       */\n      return DataTable.util.set(source._);\n    } else if (source === null) {\n      // Nothing to do when the data source is null\n      return function () {};\n    } else if (typeof source === 'function') {\n      return function (data, val, meta) {\n        source(data, 'set', val, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      // Like the get, we need to get data from a nested object\n      var setData = function (data, val, src) {\n        var a = _fnSplitObjNotation(src),\n          b;\n        var aLast = a[a.length - 1];\n        var arrayNotation, funcNotation, o, innerSrc;\n        for (var i = 0, iLen = a.length - 1; i < iLen; i++) {\n          // Protect against prototype pollution\n          if (a[i] === '__proto__' || a[i] === 'constructor') {\n            throw new Error('Cannot set prototype values');\n          }\n\n          // Check if we are dealing with an array notation request\n          arrayNotation = a[i].match(__reArray);\n          funcNotation = a[i].match(__reFn);\n          if (arrayNotation) {\n            a[i] = a[i].replace(__reArray, '');\n            data[a[i]] = [];\n\n            // Get the remainder of the nested object to set so we can recurse\n            b = a.slice();\n            b.splice(0, i + 1);\n            innerSrc = b.join('.');\n\n            // Traverse each entry in the array setting the properties requested\n            if (Array.isArray(val)) {\n              for (var j = 0, jLen = val.length; j < jLen; j++) {\n                o = {};\n                setData(o, val[j], innerSrc);\n                data[a[i]].push(o);\n              }\n            } else {\n              // We've been asked to save data to an array, but it\n              // isn't array data to be saved. Best that can be done\n              // is to just save the value.\n              data[a[i]] = val;\n            }\n\n            // The inner call to setData has already traversed through the remainder\n            // of the source and has set the data, thus we can exit here\n            return;\n          } else if (funcNotation) {\n            // Function call\n            a[i] = a[i].replace(__reFn, '');\n            data = data[a[i]](val);\n          }\n\n          // If the nested object doesn't currently exist - since we are\n          // trying to set the value - create it\n          if (data[a[i]] === null || data[a[i]] === undefined) {\n            data[a[i]] = {};\n          }\n          data = data[a[i]];\n        }\n\n        // Last item in the input - i.e, the actual set\n        if (aLast.match(__reFn)) {\n          // Function call\n          data = data[aLast.replace(__reFn, '')](val);\n        } else {\n          // If array notation is used, we just want to strip it and use the property name\n          // and assign the value. If it isn't used, then we get the result we want anyway\n          data[aLast.replace(__reArray, '')] = val;\n        }\n      };\n      return function (data, val) {\n        // meta is also passed in, but not used\n        return setData(data, val, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data, val) {\n        // meta is also passed in, but not used\n        data[source] = val;\n      };\n    }\n  },\n  /**\n   * Create a function that will read nested objects from arrays, based on JSON notation\n   * @param {*} source JSON notation string\n   * @returns Value read\n   */\n  get: function (source) {\n    if ($.isPlainObject(source)) {\n      // Build an object of get functions, and wrap them in a single call\n      var o = {};\n      $.each(source, function (key, val) {\n        if (val) {\n          o[key] = DataTable.util.get(val);\n        }\n      });\n      return function (data, type, row, meta) {\n        var t = o[type] || o._;\n        return t !== undefined ? t(data, type, row, meta) : data;\n      };\n    } else if (source === null) {\n      // Give an empty string for rendering / sorting etc\n      return function (data) {\n        // type, row and meta also passed, but not used\n        return data;\n      };\n    } else if (typeof source === 'function') {\n      return function (data, type, row, meta) {\n        return source(data, type, row, meta);\n      };\n    } else if (typeof source === 'string' && (source.indexOf('.') !== -1 || source.indexOf('[') !== -1 || source.indexOf('(') !== -1)) {\n      /* If there is a . in the source string then the data source is in a\n       * nested object so we loop over the data for each level to get the next\n       * level down. On each loop we test for undefined, and if found immediately\n       * return. This allows entire objects to be missing and sDefaultContent to\n       * be used if defined, rather than throwing an error\n       */\n      var fetchData = function (data, type, src) {\n        var arrayNotation, funcNotation, out, innerSrc;\n        if (src !== \"\") {\n          var a = _fnSplitObjNotation(src);\n          for (var i = 0, iLen = a.length; i < iLen; i++) {\n            // Check if we are dealing with special notation\n            arrayNotation = a[i].match(__reArray);\n            funcNotation = a[i].match(__reFn);\n            if (arrayNotation) {\n              // Array notation\n              a[i] = a[i].replace(__reArray, '');\n\n              // Condition allows simply [] to be passed in\n              if (a[i] !== \"\") {\n                data = data[a[i]];\n              }\n              out = [];\n\n              // Get the remainder of the nested object to get\n              a.splice(0, i + 1);\n              innerSrc = a.join('.');\n\n              // Traverse each entry in the array getting the properties requested\n              if (Array.isArray(data)) {\n                for (var j = 0, jLen = data.length; j < jLen; j++) {\n                  out.push(fetchData(data[j], type, innerSrc));\n                }\n              }\n\n              // If a string is given in between the array notation indicators, that\n              // is used to join the strings together, otherwise an array is returned\n              var join = arrayNotation[0].substring(1, arrayNotation[0].length - 1);\n              data = join === \"\" ? out : out.join(join);\n\n              // The inner call to fetchData has already traversed through the remainder\n              // of the source requested, so we exit from the loop\n              break;\n            } else if (funcNotation) {\n              // Function call\n              a[i] = a[i].replace(__reFn, '');\n              data = data[a[i]]();\n              continue;\n            }\n            if (data === null || data[a[i]] === null) {\n              return null;\n            } else if (data === undefined || data[a[i]] === undefined) {\n              return undefined;\n            }\n            data = data[a[i]];\n          }\n        }\n        return data;\n      };\n      return function (data, type) {\n        // row and meta also passed, but not used\n        return fetchData(data, type, source);\n      };\n    } else {\n      // Array or flat object mapping\n      return function (data) {\n        // row and meta also passed, but not used\n        return data[source];\n      };\n    }\n  },\n  stripHtml: function (mixed) {\n    var type = typeof mixed;\n    if (type === 'function') {\n      _stripHtml = mixed;\n      return;\n    } else if (type === 'string') {\n      return _stripHtml(mixed);\n    }\n    return mixed;\n  },\n  escapeHtml: function (mixed) {\n    var type = typeof mixed;\n    if (type === 'function') {\n      _escapeHtml = mixed;\n      return;\n    } else if (type === 'string' || Array.isArray(mixed)) {\n      return _escapeHtml(mixed);\n    }\n    return mixed;\n  },\n  unique: _unique\n};\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap(o) {\n  var hungarian = 'a aa ai ao as b fn i m o s ',\n    match,\n    newKey,\n    map = {};\n  $.each(o, function (key) {\n    match = key.match(/^([^A-Z]+?)([A-Z])/);\n    if (match && hungarian.indexOf(match[1] + ' ') !== -1) {\n      newKey = key.replace(match[0], match[2].toLowerCase());\n      map[newKey] = key;\n      if (match[1] === 'o') {\n        _fnHungarianMap(o[key]);\n      }\n    }\n  });\n  o._hungarianMap = map;\n}\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian(src, user, force) {\n  if (!src._hungarianMap) {\n    _fnHungarianMap(src);\n  }\n  var hungarianKey;\n  $.each(user, function (key) {\n    hungarianKey = src._hungarianMap[key];\n    if (hungarianKey !== undefined && (force || user[hungarianKey] === undefined)) {\n      // For objects, we need to buzz down into the object to copy parameters\n      if (hungarianKey.charAt(0) === 'o') {\n        // Copy the camelCase options over to the hungarian\n        if (!user[hungarianKey]) {\n          user[hungarianKey] = {};\n        }\n        $.extend(true, user[hungarianKey], user[key]);\n        _fnCamelToHungarian(src[hungarianKey], user[hungarianKey], force);\n      } else {\n        user[hungarianKey] = user[key];\n      }\n    }\n  });\n}\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function (o, knew, old) {\n  if (o[knew] !== undefined) {\n    o[old] = o[knew];\n  }\n};\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts(init) {\n  _fnCompatMap(init, 'ordering', 'bSort');\n  _fnCompatMap(init, 'orderMulti', 'bSortMulti');\n  _fnCompatMap(init, 'orderClasses', 'bSortClasses');\n  _fnCompatMap(init, 'orderCellsTop', 'bSortCellsTop');\n  _fnCompatMap(init, 'order', 'aaSorting');\n  _fnCompatMap(init, 'orderFixed', 'aaSortingFixed');\n  _fnCompatMap(init, 'paging', 'bPaginate');\n  _fnCompatMap(init, 'pagingType', 'sPaginationType');\n  _fnCompatMap(init, 'pageLength', 'iDisplayLength');\n  _fnCompatMap(init, 'searching', 'bFilter');\n\n  // Boolean initialisation of x-scrolling\n  if (typeof init.sScrollX === 'boolean') {\n    init.sScrollX = init.sScrollX ? '100%' : '';\n  }\n  if (typeof init.scrollX === 'boolean') {\n    init.scrollX = init.scrollX ? '100%' : '';\n  }\n\n  // Column search objects are in an array, so it needs to be converted\n  // element by element\n  var searchCols = init.aoSearchCols;\n  if (searchCols) {\n    for (var i = 0, ien = searchCols.length; i < ien; i++) {\n      if (searchCols[i]) {\n        _fnCamelToHungarian(DataTable.models.oSearch, searchCols[i]);\n      }\n    }\n  }\n\n  // Enable search delay if server-side processing is enabled\n  if (init.serverSide && !init.searchDelay) {\n    init.searchDelay = 400;\n  }\n}\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols(init) {\n  _fnCompatMap(init, 'orderable', 'bSortable');\n  _fnCompatMap(init, 'orderData', 'aDataSort');\n  _fnCompatMap(init, 'orderSequence', 'asSorting');\n  _fnCompatMap(init, 'orderDataType', 'sortDataType');\n\n  // orderData can be given as an integer\n  var dataSort = init.aDataSort;\n  if (typeof dataSort === 'number' && !Array.isArray(dataSort)) {\n    init.aDataSort = [dataSort];\n  }\n}\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect(settings) {\n  // We don't need to do this every time DataTables is constructed, the values\n  // calculated are specific to the browser and OS configuration which we\n  // don't expect to change between initialisations\n  if (!DataTable.__browser) {\n    var browser = {};\n    DataTable.__browser = browser;\n\n    // Scrolling feature / quirks detection\n    var n = $('<div/>').css({\n      position: 'fixed',\n      top: 0,\n      left: -1 * window.pageXOffset,\n      // allow for scrolling\n      height: 1,\n      width: 1,\n      overflow: 'hidden'\n    }).append($('<div/>').css({\n      position: 'absolute',\n      top: 1,\n      left: 1,\n      width: 100,\n      overflow: 'scroll'\n    }).append($('<div/>').css({\n      width: '100%',\n      height: 10\n    }))).appendTo('body');\n    var outer = n.children();\n    var inner = outer.children();\n\n    // Get scrollbar width\n    browser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n    // In rtl text layout, some browsers (most, but not all) will place the\n    // scrollbar on the left, rather than the right.\n    browser.bScrollbarLeft = Math.round(inner.offset().left) !== 1;\n    n.remove();\n  }\n  $.extend(settings.oBrowser, DataTable.__browser);\n  settings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn(oSettings) {\n  // Add column to aoColumns array\n  var oDefaults = DataTable.defaults.column;\n  var iCol = oSettings.aoColumns.length;\n  var oCol = $.extend({}, DataTable.models.oColumn, oDefaults, {\n    \"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n    \"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n    idx: iCol,\n    searchFixed: {},\n    colEl: $('<col>').attr('data-dt-column', iCol)\n  });\n  oSettings.aoColumns.push(oCol);\n\n  // Add search object for column specific search. Note that the `searchCols[ iCol ]`\n  // passed into extend can be undefined. This allows the user to give a default\n  // with only some of the parameters defined, and also not give a default\n  var searchCols = oSettings.aoPreSearchCols;\n  searchCols[iCol] = $.extend({}, DataTable.models.oSearch, searchCols[iCol]);\n}\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions(oSettings, iCol, oOptions) {\n  var oCol = oSettings.aoColumns[iCol];\n\n  /* User specified column options */\n  if (oOptions !== undefined && oOptions !== null) {\n    // Backwards compatibility\n    _fnCompatCols(oOptions);\n\n    // Map camel case parameters to their Hungarian counterparts\n    _fnCamelToHungarian(DataTable.defaults.column, oOptions, true);\n\n    /* Backwards compatibility for mDataProp */\n    if (oOptions.mDataProp !== undefined && !oOptions.mData) {\n      oOptions.mData = oOptions.mDataProp;\n    }\n    if (oOptions.sType) {\n      oCol._sManualType = oOptions.sType;\n    }\n\n    // `class` is a reserved word in Javascript, so we need to provide\n    // the ability to use a valid name for the camel case input\n    if (oOptions.className && !oOptions.sClass) {\n      oOptions.sClass = oOptions.className;\n    }\n    var origClass = oCol.sClass;\n    $.extend(oCol, oOptions);\n    _fnMap(oCol, oOptions, \"sWidth\", \"sWidthOrig\");\n\n    // Merge class from previously defined classes with this one, rather than just\n    // overwriting it in the extend above\n    if (origClass !== oCol.sClass) {\n      oCol.sClass = origClass + ' ' + oCol.sClass;\n    }\n\n    /* iDataSort to be applied (backwards compatibility), but aDataSort will take\n     * priority if defined\n     */\n    if (oOptions.iDataSort !== undefined) {\n      oCol.aDataSort = [oOptions.iDataSort];\n    }\n    _fnMap(oCol, oOptions, \"aDataSort\");\n  }\n\n  /* Cache the data get and set functions for speed */\n  var mDataSrc = oCol.mData;\n  var mData = _fnGetObjectDataFn(mDataSrc);\n\n  // The `render` option can be given as an array to access the helper rendering methods.\n  // The first element is the rendering method to use, the rest are the parameters to pass\n  if (oCol.mRender && Array.isArray(oCol.mRender)) {\n    var copy = oCol.mRender.slice();\n    var name = copy.shift();\n    oCol.mRender = DataTable.render[name].apply(window, copy);\n  }\n  oCol._render = oCol.mRender ? _fnGetObjectDataFn(oCol.mRender) : null;\n  var attrTest = function (src) {\n    return typeof src === 'string' && src.indexOf('@') !== -1;\n  };\n  oCol._bAttrSrc = $.isPlainObject(mDataSrc) && (attrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter));\n  oCol._setter = null;\n  oCol.fnGetData = function (rowData, type, meta) {\n    var innerData = mData(rowData, type, undefined, meta);\n    return oCol._render && type ? oCol._render(innerData, type, rowData, meta) : innerData;\n  };\n  oCol.fnSetData = function (rowData, val, meta) {\n    return _fnSetObjectDataFn(mDataSrc)(rowData, val, meta);\n  };\n\n  // Indicate if DataTables should read DOM data as an object or array\n  // Used in _fnGetRowElements\n  if (typeof mDataSrc !== 'number' && !oCol._isArrayHost) {\n    oSettings._rowReadObject = true;\n  }\n\n  /* Feature sorting overrides column specific when off */\n  if (!oSettings.oFeatures.bSort) {\n    oCol.bSortable = false;\n  }\n}\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing(settings) {\n  _fnCalculateColumnWidths(settings);\n  _fnColumnSizes(settings);\n  var scroll = settings.oScroll;\n  if (scroll.sY !== '' || scroll.sX !== '') {\n    _fnScrollDraw(settings);\n  }\n  _fnCallbackFire(settings, null, 'column-sizing', [settings]);\n}\n\n/**\n * Apply column sizes\n *\n * @param {*} settings DataTables settings object\n */\nfunction _fnColumnSizes(settings) {\n  var cols = settings.aoColumns;\n  for (var i = 0; i < cols.length; i++) {\n    var width = _fnColumnsSumWidth(settings, [i], false, false);\n    cols[i].colEl.css('width', width);\n  }\n}\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n  return typeof aiVis[iMatch] === 'number' ? aiVis[iMatch] : null;\n}\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible(oSettings, iMatch) {\n  var aiVis = _fnGetColumns(oSettings, 'bVisible');\n  var iPos = aiVis.indexOf(iMatch);\n  return iPos !== -1 ? iPos : null;\n}\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns(settings) {\n  var layout = settings.aoHeader;\n  var columns = settings.aoColumns;\n  var vis = 0;\n  if (layout.length) {\n    for (var i = 0, ien = layout[0].length; i < ien; i++) {\n      if (columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none') {\n        vis++;\n      }\n    }\n  }\n  return vis;\n}\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns(oSettings, sParam) {\n  var a = [];\n  oSettings.aoColumns.map(function (val, i) {\n    if (val[sParam]) {\n      a.push(i);\n    }\n  });\n  return a;\n}\n\n/**\n * Allow the result from a type detection function to be `true` while\n * translating that into a string. Old type detection functions will\n * return the type name if it passes. An obect store would be better,\n * but not backwards compatible.\n *\n * @param {*} typeDetect Object or function for type detection\n * @param {*} res Result from the type detection function\n * @returns Type name or false\n */\nfunction _typeResult(typeDetect, res) {\n  return res === true ? typeDetect._name : res;\n}\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var types = DataTable.ext.type.detect;\n  var i, ien, j, jen, k, ken;\n  var col, detectedType, cache;\n\n  // For each column, spin over the data type detection functions, seeing if one matches\n  for (i = 0, ien = columns.length; i < ien; i++) {\n    col = columns[i];\n    cache = [];\n    if (!col.sType && col._sManualType) {\n      col.sType = col._sManualType;\n    } else if (!col.sType) {\n      // With SSP type detection can be unreliable and error prone, so we provide a way\n      // to turn it off.\n      if (!settings.typeDetect) {\n        return;\n      }\n      for (j = 0, jen = types.length; j < jen; j++) {\n        var typeDetect = types[j];\n\n        // There can be either one, or three type detection functions\n        var oneOf = typeDetect.oneOf;\n        var allOf = typeDetect.allOf || typeDetect;\n        var init = typeDetect.init;\n        var one = false;\n        detectedType = null;\n\n        // Fast detect based on column assignment\n        if (init) {\n          detectedType = _typeResult(typeDetect, init(settings, col, i));\n          if (detectedType) {\n            col.sType = detectedType;\n            break;\n          }\n        }\n        for (k = 0, ken = data.length; k < ken; k++) {\n          if (!data[k]) {\n            continue;\n          }\n\n          // Use a cache array so we only need to get the type data\n          // from the formatter once (when using multiple detectors)\n          if (cache[k] === undefined) {\n            cache[k] = _fnGetCellData(settings, k, i, 'type');\n          }\n\n          // Only one data point in the column needs to match this function\n          if (oneOf && !one) {\n            one = _typeResult(typeDetect, oneOf(cache[k], settings));\n          }\n\n          // All data points need to match this function\n          detectedType = _typeResult(typeDetect, allOf(cache[k], settings));\n\n          // If null, then this type can't apply to this column, so\n          // rather than testing all cells, break out. There is an\n          // exception for the last type which is `html`. We need to\n          // scan all rows since it is possible to mix string and HTML\n          // types\n          if (!detectedType && j !== types.length - 3) {\n            break;\n          }\n\n          // Only a single match is needed for html type since it is\n          // bottom of the pile and very similar to string - but it\n          // must not be empty\n          if (detectedType === 'html' && !_empty(cache[k])) {\n            break;\n          }\n        }\n\n        // Type is valid for all data points in the column - use this\n        // type\n        if (oneOf && one && detectedType || !oneOf && detectedType) {\n          col.sType = detectedType;\n          break;\n        }\n      }\n\n      // Fall back - if no type was detected, always use string\n      if (!col.sType) {\n        col.sType = 'string';\n      }\n    }\n\n    // Set class names for header / footer for auto type classes\n    var autoClass = _ext.type.className[col.sType];\n    if (autoClass) {\n      _columnAutoClass(settings.aoHeader, i, autoClass);\n      _columnAutoClass(settings.aoFooter, i, autoClass);\n    }\n    var renderer = _ext.type.render[col.sType];\n\n    // This can only happen once! There is no way to remove\n    // a renderer. After the first time the renderer has\n    // already been set so createTr will run the renderer itself.\n    if (renderer && !col._render) {\n      col._render = DataTable.util.get(renderer);\n      _columnAutoRender(settings, i);\n    }\n  }\n}\n\n/**\n * Apply an auto detected renderer to data which doesn't yet have\n * a renderer\n */\nfunction _columnAutoRender(settings, colIdx) {\n  var data = settings.aoData;\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].nTr) {\n      // We have to update the display here since there is no\n      // invalidation check for the data\n      var display = _fnGetCellData(settings, i, colIdx, 'display');\n      data[i].displayData[colIdx] = display;\n      _fnWriteCell(data[i].anCells[colIdx], display);\n\n      // No need to update sort / filter data since it has\n      // been invalidated and will be re-read with the\n      // renderer now applied\n    }\n  }\n}\n\n/**\n * Apply a class name to a column's header cells\n */\nfunction _columnAutoClass(container, colIdx, className) {\n  container.forEach(function (row) {\n    if (row[colIdx] && row[colIdx].unique) {\n      _addClass(row[colIdx].cell, className);\n    }\n  });\n}\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {array} headerLayout Layout for header as it was loaded\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs(oSettings, aoColDefs, aoCols, headerLayout, fn) {\n  var i, iLen, j, jLen, k, kLen, def;\n  var columns = oSettings.aoColumns;\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      if (aoCols[i] && aoCols[i].name) {\n        columns[i].sName = aoCols[i].name;\n      }\n    }\n  }\n\n  // Column definitions with aTargets\n  if (aoColDefs) {\n    /* Loop over the definitions array - loop in reverse so first instance has priority */\n    for (i = aoColDefs.length - 1; i >= 0; i--) {\n      def = aoColDefs[i];\n\n      /* Each definition can target multiple columns, as it is an array */\n      var aTargets = def.target !== undefined ? def.target : def.targets !== undefined ? def.targets : def.aTargets;\n      if (!Array.isArray(aTargets)) {\n        aTargets = [aTargets];\n      }\n      for (j = 0, jLen = aTargets.length; j < jLen; j++) {\n        var target = aTargets[j];\n        if (typeof target === 'number' && target >= 0) {\n          /* Add columns that we don't yet know about */\n          while (columns.length <= target) {\n            _fnAddColumn(oSettings);\n          }\n\n          /* Integer, basic index */\n          fn(target, def);\n        } else if (typeof target === 'number' && target < 0) {\n          /* Negative integer, right to left column counting */\n          fn(columns.length + target, def);\n        } else if (typeof target === 'string') {\n          for (k = 0, kLen = columns.length; k < kLen; k++) {\n            if (target === '_all') {\n              // Apply to all columns\n              fn(k, def);\n            } else if (target.indexOf(':name') !== -1) {\n              // Column selector\n              if (columns[k].sName === target.replace(':name', '')) {\n                fn(k, def);\n              }\n            } else {\n              // Cell selector\n              headerLayout.forEach(function (row) {\n                if (row[k]) {\n                  var cell = $(row[k].cell);\n\n                  // Legacy support. Note that it means that we don't support\n                  // an element name selector only, since they are treated as\n                  // class names for 1.x compat.\n                  if (target.match(/^[a-z][\\w-]*$/i)) {\n                    target = '.' + target;\n                  }\n                  if (cell.is(target)) {\n                    fn(k, def);\n                  }\n                }\n              });\n            }\n          }\n        }\n      }\n    }\n  }\n\n  // Statically defined columns array\n  if (aoCols) {\n    for (i = 0, iLen = aoCols.length; i < iLen; i++) {\n      fn(i, aoCols[i]);\n    }\n  }\n}\n\n/**\n * Get the width for a given set of columns\n *\n * @param {*} settings DataTables settings object\n * @param {*} targets Columns - comma separated string or array of numbers\n * @param {*} original Use the original width (true) or calculated (false)\n * @param {*} incVisible Include visible columns (true) or not (false)\n * @returns Combined CSS value\n */\nfunction _fnColumnsSumWidth(settings, targets, original, incVisible) {\n  if (!Array.isArray(targets)) {\n    targets = _fnColumnsFromHeader(targets);\n  }\n  var sum = 0;\n  var unit;\n  var columns = settings.aoColumns;\n  for (var i = 0, ien = targets.length; i < ien; i++) {\n    var column = columns[targets[i]];\n    var definedWidth = original ? column.sWidthOrig : column.sWidth;\n    if (!incVisible && column.bVisible === false) {\n      continue;\n    }\n    if (definedWidth === null || definedWidth === undefined) {\n      return null; // can't determine a defined width - browser defined\n    } else if (typeof definedWidth === 'number') {\n      unit = 'px';\n      sum += definedWidth;\n    } else {\n      var matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n      if (matched) {\n        sum += matched[1] * 1;\n        unit = matched.length === 3 ? matched[2] : 'px';\n      }\n    }\n  }\n  return sum + unit;\n}\nfunction _fnColumnsFromHeader(cell) {\n  var attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n  if (!attr) {\n    return [];\n  }\n  return attr.split(',').map(function (val) {\n    return val * 1;\n  });\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} settings dataTables settings object\n *  @param {array} data data array to be added\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData(settings, dataIn, tr, tds) {\n  /* Create the object for storing information about this new row */\n  var rowIdx = settings.aoData.length;\n  var rowModel = $.extend(true, {}, DataTable.models.oRow, {\n    src: tr ? 'dom' : 'data',\n    idx: rowIdx\n  });\n  rowModel._aData = dataIn;\n  settings.aoData.push(rowModel);\n  var columns = settings.aoColumns;\n  for (var i = 0, iLen = columns.length; i < iLen; i++) {\n    // Invalidate the column types as the new data needs to be revalidated\n    columns[i].sType = null;\n  }\n\n  /* Add to the display array */\n  settings.aiDisplayMaster.push(rowIdx);\n  var id = settings.rowIdFn(dataIn);\n  if (id !== undefined) {\n    settings.aIds[id] = rowModel;\n  }\n\n  /* Create the DOM information, or register it if already present */\n  if (tr || !settings.oFeatures.bDeferRender) {\n    _fnCreateTr(settings, rowIdx, tr, tds);\n  }\n  return rowIdx;\n}\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr(settings, trs) {\n  var row;\n\n  // Allow an individual node to be passed in\n  if (!(trs instanceof $)) {\n    trs = $(trs);\n  }\n  return trs.map(function (i, el) {\n    row = _fnGetRowElements(settings, el);\n    return _fnAddData(settings, row.data, el, row.cells);\n  });\n}\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData(settings, rowIdx, colIdx, type) {\n  if (type === 'search') {\n    type = 'filter';\n  } else if (type === 'order') {\n    type = 'sort';\n  }\n  var row = settings.aoData[rowIdx];\n  if (!row) {\n    return undefined;\n  }\n  var draw = settings.iDraw;\n  var col = settings.aoColumns[colIdx];\n  var rowData = row._aData;\n  var defaultContent = col.sDefaultContent;\n  var cellData = col.fnGetData(rowData, type, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n\n  // Allow for a node being returned for non-display types\n  if (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n    cellData = cellData.innerHTML;\n  }\n  if (cellData === undefined) {\n    if (settings.iDrawError != draw && defaultContent === null) {\n      _fnLog(settings, 0, \"Requested unknown parameter \" + (typeof col.mData == 'function' ? '{function}' : \"'\" + col.mData + \"'\") + \" for row \" + rowIdx + \", column \" + colIdx, 4);\n      settings.iDrawError = draw;\n    }\n    return defaultContent;\n  }\n\n  // When the data source is null and a specific data type is requested (i.e.\n  // not the original data), we can use default column data\n  if ((cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined) {\n    cellData = defaultContent;\n  } else if (typeof cellData === 'function') {\n    // If the data source is a function, then we run it and use the return,\n    // executing in the scope of the data object (for instances)\n    return cellData.call(rowData);\n  }\n  if (cellData === null && type === 'display') {\n    return '';\n  }\n  if (type === 'filter') {\n    var fomatters = DataTable.ext.type.search;\n    if (fomatters[col.sType]) {\n      cellData = fomatters[col.sType](cellData);\n    }\n  }\n  return cellData;\n}\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData(settings, rowIdx, colIdx, val) {\n  var col = settings.aoColumns[colIdx];\n  var rowData = settings.aoData[rowIdx]._aData;\n  col.fnSetData(rowData, val, {\n    settings: settings,\n    row: rowIdx,\n    col: colIdx\n  });\n}\n\n/**\n * Write a value to a cell\n * @param {*} td Cell\n * @param {*} val Value\n */\nfunction _fnWriteCell(td, val) {\n  if (val && typeof val === 'object' && val.nodeName) {\n    $(td).empty().append(val);\n  } else {\n    td.innerHTML = val;\n  }\n}\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation(str) {\n  var parts = str.match(/(\\\\.|[^.])+/g) || [''];\n  return parts.map(function (s) {\n    return s.replace(/\\\\\\./g, '.');\n  });\n}\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster(settings) {\n  return _pluck(settings.aoData, '_aData');\n}\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable(settings) {\n  settings.aoData.length = 0;\n  settings.aiDisplayMaster.length = 0;\n  settings.aiDisplay.length = 0;\n  settings.aIds = {};\n}\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate(settings, rowIdx, src, colIdx) {\n  var row = settings.aoData[rowIdx];\n  var i, ien;\n\n  // Remove the cached data for the row\n  row._aSortData = null;\n  row._aFilterData = null;\n  row.displayData = null;\n\n  // Are we reading last data from DOM or the data object?\n  if (src === 'dom' || (!src || src === 'auto') && row.src === 'dom') {\n    // Read the data from the DOM\n    row._aData = _fnGetRowElements(settings, row, colIdx, colIdx === undefined ? undefined : row._aData).data;\n  } else {\n    // Reading from data object, update the DOM\n    var cells = row.anCells;\n    var display = _fnGetRowDisplay(settings, rowIdx);\n    if (cells) {\n      if (colIdx !== undefined) {\n        _fnWriteCell(cells[colIdx], display[colIdx]);\n      } else {\n        for (i = 0, ien = cells.length; i < ien; i++) {\n          _fnWriteCell(cells[i], display[i]);\n        }\n      }\n    }\n  }\n\n  // Column specific invalidation\n  var cols = settings.aoColumns;\n  if (colIdx !== undefined) {\n    // Type - the data might have changed\n    cols[colIdx].sType = null;\n\n    // Max length string. Its a fairly cheep recalculation, so not worth\n    // something more complicated\n    cols[colIdx].maxLenString = null;\n  } else {\n    for (i = 0, ien = cols.length; i < ien; i++) {\n      cols[i].sType = null;\n      cols[i].maxLenString = null;\n    }\n\n    // Update DataTables special `DT_*` attributes for the row\n    _fnRowAttributes(settings, row);\n  }\n}\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements(settings, row, colIdx, d) {\n  var tds = [],\n    td = row.firstChild,\n    name,\n    col,\n    i = 0,\n    contents,\n    columns = settings.aoColumns,\n    objectRead = settings._rowReadObject;\n\n  // Allow the data object to be passed in, or construct\n  d = d !== undefined ? d : objectRead ? {} : [];\n  var attr = function (str, td) {\n    if (typeof str === 'string') {\n      var idx = str.indexOf('@');\n      if (idx !== -1) {\n        var attr = str.substring(idx + 1);\n        var setter = _fnSetObjectDataFn(str);\n        setter(d, td.getAttribute(attr));\n      }\n    }\n  };\n\n  // Read data from a cell and store into the data object\n  var cellProcess = function (cell) {\n    if (colIdx === undefined || colIdx === i) {\n      col = columns[i];\n      contents = cell.innerHTML.trim();\n      if (col && col._bAttrSrc) {\n        var setter = _fnSetObjectDataFn(col.mData._);\n        setter(d, contents);\n        attr(col.mData.sort, cell);\n        attr(col.mData.type, cell);\n        attr(col.mData.filter, cell);\n      } else {\n        // Depending on the `data` option for the columns the data can\n        // be read to either an object or an array.\n        if (objectRead) {\n          if (!col._setter) {\n            // Cache the setter function\n            col._setter = _fnSetObjectDataFn(col.mData);\n          }\n          col._setter(d, contents);\n        } else {\n          d[i] = contents;\n        }\n      }\n    }\n    i++;\n  };\n  if (td) {\n    // `tr` element was passed in\n    while (td) {\n      name = td.nodeName.toUpperCase();\n      if (name == \"TD\" || name == \"TH\") {\n        cellProcess(td);\n        tds.push(td);\n      }\n      td = td.nextSibling;\n    }\n  } else {\n    // Existing row object passed in\n    tds = row.anCells;\n    for (var j = 0, jen = tds.length; j < jen; j++) {\n      cellProcess(tds[j]);\n    }\n  }\n\n  // Read the ID from the DOM if present\n  var rowNode = row.firstChild ? row : row.nTr;\n  if (rowNode) {\n    var id = rowNode.getAttribute('id');\n    if (id) {\n      _fnSetObjectDataFn(settings.rowId)(d, id);\n    }\n  }\n  return {\n    data: d,\n    cells: tds\n  };\n}\n\n/**\n * Render and cache a row's display data for the columns, if required\n * @returns \n */\nfunction _fnGetRowDisplay(settings, rowIdx) {\n  var rowModal = settings.aoData[rowIdx];\n  var columns = settings.aoColumns;\n  if (!rowModal.displayData) {\n    // Need to render and cache\n    rowModal.displayData = [];\n    for (var colIdx = 0, len = columns.length; colIdx < len; colIdx++) {\n      rowModal.displayData.push(_fnGetCellData(settings, rowIdx, colIdx, 'display'));\n    }\n  }\n  return rowModal.displayData;\n}\n\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr(oSettings, iRow, nTrIn, anTds) {\n  var row = oSettings.aoData[iRow],\n    rowData = row._aData,\n    cells = [],\n    nTr,\n    nTd,\n    oCol,\n    i,\n    iLen,\n    create,\n    trClass = oSettings.oClasses.tbody.row;\n  if (row.nTr === null) {\n    nTr = nTrIn || document.createElement('tr');\n    row.nTr = nTr;\n    row.anCells = cells;\n    _addClass(nTr, trClass);\n\n    /* Use a private property on the node to allow reserve mapping from the node\n     * to the aoData array for fast look up\n     */\n    nTr._DT_RowIndex = iRow;\n\n    /* Special parameters can be given by the data source to be used on the row */\n    _fnRowAttributes(oSettings, row);\n\n    /* Process each column */\n    for (i = 0, iLen = oSettings.aoColumns.length; i < iLen; i++) {\n      oCol = oSettings.aoColumns[i];\n      create = nTrIn && anTds[i] ? false : true;\n      nTd = create ? document.createElement(oCol.sCellType) : anTds[i];\n      if (!nTd) {\n        _fnLog(oSettings, 0, 'Incorrect column count', 18);\n      }\n      nTd._DT_CellIndex = {\n        row: iRow,\n        column: i\n      };\n      cells.push(nTd);\n      var display = _fnGetRowDisplay(oSettings, iRow);\n\n      // Need to create the HTML if new, or if a rendering function is defined\n      if (create || (oCol.mRender || oCol.mData !== i) && (!$.isPlainObject(oCol.mData) || oCol.mData._ !== i + '.display')) {\n        _fnWriteCell(nTd, display[i]);\n      }\n\n      // column class\n      _addClass(nTd, oCol.sClass);\n\n      // Visibility - add or remove as required\n      if (oCol.bVisible && create) {\n        nTr.appendChild(nTd);\n      } else if (!oCol.bVisible && !create) {\n        nTd.parentNode.removeChild(nTd);\n      }\n      if (oCol.fnCreatedCell) {\n        oCol.fnCreatedCell.call(oSettings.oInstance, nTd, _fnGetCellData(oSettings, iRow, i), rowData, iRow, i);\n      }\n    }\n    _fnCallbackFire(oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells]);\n  } else {\n    _addClass(row.nTr, trClass);\n  }\n}\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes(settings, row) {\n  var tr = row.nTr;\n  var data = row._aData;\n  if (tr) {\n    var id = settings.rowIdFn(data);\n    if (id) {\n      tr.id = id;\n    }\n    if (data.DT_RowClass) {\n      // Remove any classes added by DT_RowClass before\n      var a = data.DT_RowClass.split(' ');\n      row.__rowc = row.__rowc ? _unique(row.__rowc.concat(a)) : a;\n      $(tr).removeClass(row.__rowc.join(' ')).addClass(data.DT_RowClass);\n    }\n    if (data.DT_RowAttr) {\n      $(tr).attr(data.DT_RowAttr);\n    }\n    if (data.DT_RowData) {\n      $(tr).data(data.DT_RowData);\n    }\n  }\n}\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead(settings, side) {\n  var classes = settings.oClasses;\n  var columns = settings.aoColumns;\n  var i, ien, row;\n  var target = side === 'header' ? settings.nTHead : settings.nTFoot;\n  var titleProp = side === 'header' ? 'sTitle' : side;\n\n  // Footer might be defined\n  if (!target) {\n    return;\n  }\n\n  // If no cells yet and we have content for them, then create\n  if (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\n    row = $('tr', target);\n\n    // Add a row if needed\n    if (!row.length) {\n      row = $('<tr/>').appendTo(target);\n    }\n\n    // Add the number of cells needed to make up to the number of columns\n    if (row.length === 1) {\n      var cells = $('td, th', row);\n      for (i = cells.length, ien = columns.length; i < ien; i++) {\n        $('<th/>').html(columns[i][titleProp] || '').appendTo(row);\n      }\n    }\n  }\n  var detected = _fnDetectHeader(settings, target, true);\n  if (side === 'header') {\n    settings.aoHeader = detected;\n  } else {\n    settings.aoFooter = detected;\n  }\n\n  // Every cell needs to be passed through the renderer\n  $(target).children('tr').children('th, td').each(function () {\n    _fnRenderer(settings, side)(settings, $(this), classes);\n  });\n}\n\n/**\n * Build a layout structure for a header or footer\n *\n * @param {*} settings DataTables settings\n * @param {*} source Source layout array\n * @param {*} incColumns What columns should be included\n * @returns Layout array\n */\nfunction _fnHeaderLayout(settings, source, incColumns) {\n  var row, column, cell;\n  var local = [];\n  var structure = [];\n  var columns = settings.aoColumns;\n  var columnCount = columns.length;\n  var rowspan, colspan;\n  if (!source) {\n    return;\n  }\n\n  // Default is to work on only visible columns\n  if (!incColumns) {\n    incColumns = _range(columnCount).filter(function (idx) {\n      return columns[idx].bVisible;\n    });\n  }\n\n  // Make a copy of the master layout array, but with only the columns we want\n  for (row = 0; row < source.length; row++) {\n    // Remove any columns we haven't selected\n    local[row] = source[row].slice().filter(function (cell, i) {\n      return incColumns.includes(i);\n    });\n\n    // Prep the structure array - it needs an element for each row\n    structure.push([]);\n  }\n  for (row = 0; row < local.length; row++) {\n    for (column = 0; column < local[row].length; column++) {\n      rowspan = 1;\n      colspan = 1;\n\n      // Check to see if there is already a cell (row/colspan) covering our target\n      // insert point. If there is, then there is nothing to do.\n      if (structure[row][column] === undefined) {\n        cell = local[row][column].cell;\n\n        // Expand for rowspan\n        while (local[row + rowspan] !== undefined && local[row][column].cell == local[row + rowspan][column].cell) {\n          structure[row + rowspan][column] = null;\n          rowspan++;\n        }\n\n        // And for colspan\n        while (local[row][column + colspan] !== undefined && local[row][column].cell == local[row][column + colspan].cell) {\n          // Which also needs to go over rows\n          for (var k = 0; k < rowspan; k++) {\n            structure[row + k][column + colspan] = null;\n          }\n          colspan++;\n        }\n        var titleSpan = $('span.dt-column-title', cell);\n        structure[row][column] = {\n          cell: cell,\n          colspan: colspan,\n          rowspan: rowspan,\n          title: titleSpan.length ? titleSpan.html() : $(cell).html()\n        };\n      }\n    }\n  }\n  return structure;\n}\n\n/**\n * Draw the header (or footer) element based on the column visibility states.\n *\n *  @param object oSettings dataTables settings object\n *  @param array aoSource Layout array from _fnDetectHeader\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead(settings, source) {\n  var layout = _fnHeaderLayout(settings, source);\n  var tr, n;\n  for (var row = 0; row < source.length; row++) {\n    tr = source[row].row;\n\n    // All cells are going to be replaced, so empty out the row\n    // Can't use $().empty() as that kills event handlers\n    if (tr) {\n      while (n = tr.firstChild) {\n        tr.removeChild(n);\n      }\n    }\n    for (var column = 0; column < layout[row].length; column++) {\n      var point = layout[row][column];\n      if (point) {\n        $(point.cell).appendTo(tr).attr('rowspan', point.rowspan).attr('colspan', point.colspan);\n      }\n    }\n  }\n}\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw(oSettings, ajaxComplete) {\n  // Allow for state saving and a custom start position\n  _fnStart(oSettings);\n\n  /* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n  var aPreDraw = _fnCallbackFire(oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings]);\n  if (aPreDraw.indexOf(false) !== -1) {\n    _fnProcessingDisplay(oSettings, false);\n    return;\n  }\n  var anRows = [];\n  var iRowCount = 0;\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var aiDisplay = oSettings.aiDisplay;\n  var iDisplayStart = oSettings._iDisplayStart;\n  var iDisplayEnd = oSettings.fnDisplayEnd();\n  var columns = oSettings.aoColumns;\n  var body = $(oSettings.nTBody);\n  oSettings.bDrawing = true;\n\n  /* Server-side processing draw intercept */\n  if (oSettings.deferLoading) {\n    oSettings.deferLoading = false;\n    oSettings.iDraw++;\n    _fnProcessingDisplay(oSettings, false);\n  } else if (!bServerSide) {\n    oSettings.iDraw++;\n  } else if (!oSettings.bDestroying && !ajaxComplete) {\n    // Show loading message for server-side processing\n    if (oSettings.iDraw === 0) {\n      body.empty().append(_emptyRow(oSettings));\n    }\n    _fnAjaxUpdate(oSettings);\n    return;\n  }\n  if (aiDisplay.length !== 0) {\n    var iStart = bServerSide ? 0 : iDisplayStart;\n    var iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n    for (var j = iStart; j < iEnd; j++) {\n      var iDataIndex = aiDisplay[j];\n      var aoData = oSettings.aoData[iDataIndex];\n      if (aoData.nTr === null) {\n        _fnCreateTr(oSettings, iDataIndex);\n      }\n      var nRow = aoData.nTr;\n\n      // Add various classes as needed\n      for (var i = 0; i < columns.length; i++) {\n        var col = columns[i];\n        var td = aoData.anCells[i];\n        _addClass(td, _ext.type.className[col.sType]); // auto class\n        _addClass(td, oSettings.oClasses.tbody.cell); // all cells\n      }\n\n      // Row callback functions - might want to manipulate the row\n      // iRowCount and j are not currently documented. Are they at all\n      // useful?\n      _fnCallbackFire(oSettings, 'aoRowCallback', null, [nRow, aoData._aData, iRowCount, j, iDataIndex]);\n      anRows.push(nRow);\n      iRowCount++;\n    }\n  } else {\n    anRows[0] = _emptyRow(oSettings);\n  }\n\n  /* Header and footer callbacks */\n  _fnCallbackFire(oSettings, 'aoHeaderCallback', 'header', [$(oSettings.nTHead).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n  _fnCallbackFire(oSettings, 'aoFooterCallback', 'footer', [$(oSettings.nTFoot).children('tr')[0], _fnGetDataMaster(oSettings), iDisplayStart, iDisplayEnd, aiDisplay]);\n\n  // replaceChildren is faster, but only became widespread in 2020,\n  // so a fall back in jQuery is provided for older browsers.\n  if (body[0].replaceChildren) {\n    body[0].replaceChildren.apply(body[0], anRows);\n  } else {\n    body.children().detach();\n    body.append($(anRows));\n  }\n\n  // Empty table needs a specific class\n  $(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n\n  /* Call all required callback functions for the end of a draw */\n  _fnCallbackFire(oSettings, 'aoDrawCallback', 'draw', [oSettings], true);\n\n  /* Draw is complete, sorting and filtering must be as well */\n  oSettings.bSorted = false;\n  oSettings.bFiltered = false;\n  oSettings.bDrawing = false;\n}\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw(settings, holdPosition, recompute) {\n  var features = settings.oFeatures,\n    sort = features.bSort,\n    filter = features.bFilter;\n  if (recompute === undefined || recompute === true) {\n    // Resolve any column types that are unknown due to addition or invalidation\n    _fnColumnTypes(settings);\n    if (sort) {\n      _fnSort(settings);\n    }\n    if (filter) {\n      _fnFilterComplete(settings, settings.oPreviousSearch);\n    } else {\n      // No filtering, so we want to just use the display master\n      settings.aiDisplay = settings.aiDisplayMaster.slice();\n    }\n  }\n  if (holdPosition !== true) {\n    settings._iDisplayStart = 0;\n  }\n\n  // Let any modules know about the draw hold position state (used by\n  // scrolling internally)\n  settings._drawHold = holdPosition;\n  _fnDraw(settings);\n  settings._drawHold = false;\n}\n\n/*\n * Table is empty - create a row with an empty message in it\n */\nfunction _emptyRow(settings) {\n  var oLang = settings.oLanguage;\n  var zero = oLang.sZeroRecords;\n  var dataSrc = _fnDataSource(settings);\n  if (settings.iDraw < 1 && dataSrc === 'ssp' || settings.iDraw <= 1 && dataSrc === 'ajax') {\n    zero = oLang.sLoadingRecords;\n  } else if (oLang.sEmptyTable && settings.fnRecordsTotal() === 0) {\n    zero = oLang.sEmptyTable;\n  }\n  return $('<tr/>').append($('<td />', {\n    'colSpan': _fnVisbleColumns(settings),\n    'class': settings.oClasses.empty.row\n  }).html(zero))[0];\n}\n\n/**\n * Expand the layout items into an object for the rendering function\n */\nfunction _layoutItems(row, align, items) {\n  if (Array.isArray(items)) {\n    for (var i = 0; i < items.length; i++) {\n      _layoutItems(row, align, items[i]);\n    }\n    return;\n  }\n  var rowCell = row[align];\n\n  // If it is an object, then there can be multiple features contained in it\n  if ($.isPlainObject(items)) {\n    // A feature plugin cannot be named \"features\" due to this check\n    if (items.features) {\n      if (items.rowId) {\n        row.id = items.rowId;\n      }\n      if (items.rowClass) {\n        row.className = items.rowClass;\n      }\n      rowCell.id = items.id;\n      rowCell.className = items.className;\n      _layoutItems(row, align, items.features);\n    } else {\n      Object.keys(items).map(function (key) {\n        rowCell.contents.push({\n          feature: key,\n          opts: items[key]\n        });\n      });\n    }\n  } else {\n    rowCell.contents.push(items);\n  }\n}\n\n/**\n * Find, or create a layout row\n */\nfunction _layoutGetRow(rows, rowNum, align) {\n  var row;\n\n  // Find existing rows\n  for (var i = 0; i < rows.length; i++) {\n    row = rows[i];\n    if (row.rowNum === rowNum) {\n      // full is on its own, but start and end share a row\n      if (align === 'full' && row.full || (align === 'start' || align === 'end') && (row.start || row.end)) {\n        if (!row[align]) {\n          row[align] = {\n            contents: []\n          };\n        }\n        return row;\n      }\n    }\n  }\n\n  // If we get this far, then there was no match, create a new row\n  row = {\n    rowNum: rowNum\n  };\n  row[align] = {\n    contents: []\n  };\n  rows.push(row);\n  return row;\n}\n\n/**\n * Convert a `layout` object given by a user to the object structure needed\n * for the renderer. This is done twice, once for above and once for below\n * the table. Ordering must also be considered.\n *\n * @param {*} settings DataTables settings object\n * @param {*} layout Layout object to convert\n * @param {string} side `top` or `bottom`\n * @returns Converted array structure - one item for each row.\n */\nfunction _layoutArray(settings, layout, side) {\n  var rows = [];\n\n  // Split out into an array\n  $.each(layout, function (pos, items) {\n    if (items === null) {\n      return;\n    }\n    var parts = pos.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/);\n    var rowNum = parts[2] ? parts[2] * 1 : 0;\n    var align = parts[3] ? parts[3].toLowerCase() : 'full';\n\n    // Filter out the side we aren't interested in\n    if (parts[1] !== side) {\n      return;\n    }\n\n    // Get or create the row we should attach to\n    var row = _layoutGetRow(rows, rowNum, align);\n    _layoutItems(row, align, items);\n  });\n\n  // Order by item identifier\n  rows.sort(function (a, b) {\n    var order1 = a.rowNum;\n    var order2 = b.rowNum;\n\n    // If both in the same row, then the row with `full` comes first\n    if (order1 === order2) {\n      var ret = a.full && !b.full ? -1 : 1;\n      return side === 'bottom' ? ret * -1 : ret;\n    }\n    return order2 - order1;\n  });\n\n  // Invert for below the table\n  if (side === 'bottom') {\n    rows.reverse();\n  }\n  for (var row = 0; row < rows.length; row++) {\n    delete rows[row].rowNum;\n    _layoutResolve(settings, rows[row]);\n  }\n  return rows;\n}\n\n/**\n * Convert the contents of a row's layout object to nodes that can be inserted\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\n *\n * @param {*} settings DataTables settings object\n * @param {*} row Layout object for this row\n */\nfunction _layoutResolve(settings, row) {\n  var getFeature = function (feature, opts) {\n    if (!_ext.features[feature]) {\n      _fnLog(settings, 0, 'Unknown feature: ' + feature);\n    }\n    return _ext.features[feature].apply(this, [settings, opts]);\n  };\n  var resolve = function (item) {\n    if (!row[item]) {\n      return;\n    }\n    var line = row[item].contents;\n    for (var i = 0, ien = line.length; i < ien; i++) {\n      if (!line[i]) {\n        continue;\n      } else if (typeof line[i] === 'string') {\n        line[i] = getFeature(line[i], null);\n      } else if ($.isPlainObject(line[i])) {\n        // If it's an object, it just has feature and opts properties from\n        // the transform in _layoutArray\n        line[i] = getFeature(line[i].feature, line[i].opts);\n      } else if (typeof line[i].node === 'function') {\n        line[i] = line[i].node(settings);\n      } else if (typeof line[i] === 'function') {\n        var inst = line[i](settings);\n        line[i] = typeof inst.node === 'function' ? inst.node() : inst;\n      }\n    }\n  };\n  resolve('start');\n  resolve('end');\n  resolve('full');\n}\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} settings DataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml(settings) {\n  var classes = settings.oClasses;\n  var table = $(settings.nTable);\n\n  // Wrapper div around everything DataTables controls\n  var insert = $('<div/>').attr({\n    id: settings.sTableId + '_wrapper',\n    'class': classes.container\n  }).insertBefore(table);\n  settings.nTableWrapper = insert[0];\n  if (settings.sDom) {\n    // Legacy\n    _fnLayoutDom(settings, settings.sDom, insert);\n  } else {\n    var top = _layoutArray(settings, settings.layout, 'top');\n    var bottom = _layoutArray(settings, settings.layout, 'bottom');\n    var renderer = _fnRenderer(settings, 'layout');\n\n    // Everything above - the renderer will actually insert the contents into the document\n    top.forEach(function (item) {\n      renderer(settings, insert, item);\n    });\n\n    // The table - always the center of attention\n    renderer(settings, insert, {\n      full: {\n        table: true,\n        contents: [_fnFeatureHtmlTable(settings)]\n      }\n    });\n\n    // Everything below\n    bottom.forEach(function (item) {\n      renderer(settings, insert, item);\n    });\n  }\n\n  // Processing floats on top, so it isn't an inserted feature\n  _processingHtml(settings);\n}\n\n/**\n * Draw the table with the legacy DOM property\n * @param {*} settings DT settings object\n * @param {*} dom DOM string\n * @param {*} insert Insert point\n */\nfunction _fnLayoutDom(settings, dom, insert) {\n  var parts = dom.match(/(\".*?\")|('.*?')|./g);\n  var featureNode, option, newNode, next, attr;\n  for (var i = 0; i < parts.length; i++) {\n    featureNode = null;\n    option = parts[i];\n    if (option == '<') {\n      // New container div\n      newNode = $('<div/>');\n\n      // Check to see if we should append an id and/or a class name to the container\n      next = parts[i + 1];\n      if (next[0] == \"'\" || next[0] == '\"') {\n        attr = next.replace(/['\"]/g, '');\n        var id = '',\n          className;\n\n        /* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n         * breaks the string into parts and applies them as needed\n         */\n        if (attr.indexOf('.') != -1) {\n          var split = attr.split('.');\n          id = split[0];\n          className = split[1];\n        } else if (attr[0] == \"#\") {\n          id = attr;\n        } else {\n          className = attr;\n        }\n        newNode.attr('id', id.substring(1)).addClass(className);\n        i++; // Move along the position array\n      }\n      insert.append(newNode);\n      insert = newNode;\n    } else if (option == '>') {\n      // End container div\n      insert = insert.parent();\n    } else if (option == 't') {\n      // Table\n      featureNode = _fnFeatureHtmlTable(settings);\n    } else {\n      DataTable.ext.feature.forEach(function (feature) {\n        if (option == feature.cFeature) {\n          featureNode = feature.fnInit(settings);\n        }\n      });\n    }\n\n    // Add to the display\n    if (featureNode) {\n      insert.append(featureNode);\n    }\n  }\n}\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param {node} thead The header/footer element for the table\n *  @returns {array} Calculated layout array\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader(settings, thead, write) {\n  var columns = settings.aoColumns;\n  var rows = $(thead).children('tr');\n  var row, cell;\n  var i, k, l, iLen, shifted, column, colspan, rowspan;\n  var isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n  var layout = [];\n  var unique;\n  var shift = function (a, i, j) {\n    var k = a[i];\n    while (k[j]) {\n      j++;\n    }\n    return j;\n  };\n\n  // We know how many rows there are in the layout - so prep it\n  for (i = 0, iLen = rows.length; i < iLen; i++) {\n    layout.push([]);\n  }\n  for (i = 0, iLen = rows.length; i < iLen; i++) {\n    row = rows[i];\n    column = 0;\n\n    // For every cell in the row..\n    cell = row.firstChild;\n    while (cell) {\n      if (cell.nodeName.toUpperCase() == 'TD' || cell.nodeName.toUpperCase() == 'TH') {\n        var cols = [];\n\n        // Get the col and rowspan attributes from the DOM and sanitise them\n        colspan = cell.getAttribute('colspan') * 1;\n        rowspan = cell.getAttribute('rowspan') * 1;\n        colspan = !colspan || colspan === 0 || colspan === 1 ? 1 : colspan;\n        rowspan = !rowspan || rowspan === 0 || rowspan === 1 ? 1 : rowspan;\n\n        // There might be colspan cells already in this row, so shift our target\n        // accordingly\n        shifted = shift(layout, i, column);\n\n        // Cache calculation for unique columns\n        unique = colspan === 1 ? true : false;\n\n        // Perform header setup\n        if (write) {\n          if (unique) {\n            // Allow column options to be set from HTML attributes\n            _fnColumnOptions(settings, shifted, $(cell).data());\n\n            // Get the width for the column. This can be defined from the\n            // width attribute, style attribute or `columns.width` option\n            var columnDef = columns[shifted];\n            var width = cell.getAttribute('width') || null;\n            var t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n            if (t) {\n              width = t[1];\n            }\n            columnDef.sWidthOrig = columnDef.sWidth || width;\n            if (isHeader) {\n              // Column title handling - can be user set, or read from the DOM\n              // This happens before the render, so the original is still in place\n              if (columnDef.sTitle !== null && !columnDef.autoTitle) {\n                cell.innerHTML = columnDef.sTitle;\n              }\n              if (!columnDef.sTitle && unique) {\n                columnDef.sTitle = _stripHtml(cell.innerHTML);\n                columnDef.autoTitle = true;\n              }\n            } else {\n              // Footer specific operations\n              if (columnDef.footer) {\n                cell.innerHTML = columnDef.footer;\n              }\n            }\n\n            // Fall back to the aria-label attribute on the table header if no ariaTitle is\n            // provided.\n            if (!columnDef.ariaTitle) {\n              columnDef.ariaTitle = $(cell).attr(\"aria-label\") || columnDef.sTitle;\n            }\n\n            // Column specific class names\n            if (columnDef.className) {\n              $(cell).addClass(columnDef.className);\n            }\n          }\n\n          // Wrap the column title so we can write to it in future\n          if ($('span.dt-column-title', cell).length === 0) {\n            $('<span>').addClass('dt-column-title').append(cell.childNodes).appendTo(cell);\n          }\n          if (isHeader && $('span.dt-column-order', cell).length === 0) {\n            $('<span>').addClass('dt-column-order').appendTo(cell);\n          }\n        }\n\n        // If there is col / rowspan, copy the information into the layout grid\n        for (l = 0; l < colspan; l++) {\n          for (k = 0; k < rowspan; k++) {\n            layout[i + k][shifted + l] = {\n              cell: cell,\n              unique: unique\n            };\n            layout[i + k].row = row;\n          }\n          cols.push(shifted + l);\n        }\n\n        // Assign an attribute so spanning cells can still be identified\n        // as belonging to a column\n        cell.setAttribute('data-dt-column', _unique(cols).join(','));\n      }\n      cell = cell.nextSibling;\n    }\n  }\n  return layout;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart(oSettings) {\n  var bServerSide = _fnDataSource(oSettings) == 'ssp';\n  var iInitDisplayStart = oSettings.iInitDisplayStart;\n\n  // Check and see if we have an initial draw position from state saving\n  if (iInitDisplayStart !== undefined && iInitDisplayStart !== -1) {\n    oSettings._iDisplayStart = bServerSide ? iInitDisplayStart : iInitDisplayStart >= oSettings.fnRecordsDisplay() ? 0 : iInitDisplayStart;\n    oSettings.iInitDisplayStart = -1;\n  }\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax(oSettings, data, fn) {\n  var ajaxData;\n  var ajax = oSettings.ajax;\n  var instance = oSettings.oInstance;\n  var callback = function (json) {\n    var status = oSettings.jqXHR ? oSettings.jqXHR.status : null;\n    if (json === null || typeof status === 'number' && status == 204) {\n      json = {};\n      _fnAjaxDataSrc(oSettings, json, []);\n    }\n    var error = json.error || json.sError;\n    if (error) {\n      _fnLog(oSettings, 0, error);\n    }\n\n    // Microsoft often wrap JSON as a string in another JSON object\n    // Let's handle that automatically\n    if (json.d && typeof json.d === 'string') {\n      try {\n        json = JSON.parse(json.d);\n      } catch (e) {\n        // noop\n      }\n    }\n    oSettings.json = json;\n    _fnCallbackFire(oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true);\n    fn(json);\n  };\n  if ($.isPlainObject(ajax) && ajax.data) {\n    ajaxData = ajax.data;\n    var newData = typeof ajaxData === 'function' ? ajaxData(data, oSettings) :\n    // fn can manipulate data or return\n    ajaxData; // an object object or array to merge\n\n    // If the function returned something, use that alone\n    data = typeof ajaxData === 'function' && newData ? newData : $.extend(true, data, newData);\n\n    // Remove the data property as we've resolved it already and don't want\n    // jQuery to do it again (it is restored at the end of the function)\n    delete ajax.data;\n  }\n  var baseAjax = {\n    \"url\": typeof ajax === 'string' ? ajax : '',\n    \"data\": data,\n    \"success\": callback,\n    \"dataType\": \"json\",\n    \"cache\": false,\n    \"type\": oSettings.sServerMethod,\n    \"error\": function (xhr, error) {\n      var ret = _fnCallbackFire(oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true);\n      if (ret.indexOf(true) === -1) {\n        if (error == \"parsererror\") {\n          _fnLog(oSettings, 0, 'Invalid JSON response', 1);\n        } else if (xhr.readyState === 4) {\n          _fnLog(oSettings, 0, 'Ajax error', 7);\n        }\n      }\n      _fnProcessingDisplay(oSettings, false);\n    }\n  };\n\n  // If `ajax` option is an object, extend and override our default base\n  if ($.isPlainObject(ajax)) {\n    $.extend(baseAjax, ajax);\n  }\n\n  // Store the data submitted for the API\n  oSettings.oAjaxData = data;\n\n  // Allow plug-ins and external processes to modify the data\n  _fnCallbackFire(oSettings, null, 'preXhr', [oSettings, data, baseAjax], true);\n  if (typeof ajax === 'function') {\n    // Is a function - let the caller define what needs to be done\n    oSettings.jqXHR = ajax.call(instance, data, callback, oSettings);\n  } else if (ajax.url === '') {\n    // No url, so don't load any data. Just apply an empty data array\n    // to the object for the callback.\n    var empty = {};\n    DataTable.util.set(ajax.dataSrc)(empty, []);\n    callback(empty);\n  } else {\n    // Object to extend the base settings\n    oSettings.jqXHR = $.ajax(baseAjax);\n  }\n\n  // Restore for next time around\n  if (ajaxData) {\n    ajax.data = ajaxData;\n  }\n}\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate(settings) {\n  settings.iDraw++;\n  _fnProcessingDisplay(settings, true);\n  _fnBuildAjax(settings, _fnAjaxParameters(settings), function (json) {\n    _fnAjaxUpdateDraw(settings, json);\n  });\n}\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters(settings) {\n  var columns = settings.aoColumns,\n    features = settings.oFeatures,\n    preSearch = settings.oPreviousSearch,\n    preColSearch = settings.aoPreSearchCols,\n    colData = function (idx, prop) {\n      return typeof columns[idx][prop] === 'function' ? 'function' : columns[idx][prop];\n    };\n  return {\n    draw: settings.iDraw,\n    columns: columns.map(function (column, i) {\n      return {\n        data: colData(i, 'mData'),\n        name: column.sName,\n        searchable: column.bSearchable,\n        orderable: column.bSortable,\n        search: {\n          value: preColSearch[i].search,\n          regex: preColSearch[i].regex,\n          fixed: Object.keys(column.searchFixed).map(function (name) {\n            return {\n              name: name,\n              term: column.searchFixed[name].toString()\n            };\n          })\n        }\n      };\n    }),\n    order: _fnSortFlatten(settings).map(function (val) {\n      return {\n        column: val.col,\n        dir: val.dir,\n        name: colData(val.col, 'sName')\n      };\n    }),\n    start: settings._iDisplayStart,\n    length: features.bPaginate ? settings._iDisplayLength : -1,\n    search: {\n      value: preSearch.search,\n      regex: preSearch.regex,\n      fixed: Object.keys(settings.searchFixed).map(function (name) {\n        return {\n          name: name,\n          term: settings.searchFixed[name].toString()\n        };\n      })\n    }\n  };\n}\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw(settings, json) {\n  var data = _fnAjaxDataSrc(settings, json);\n  var draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n  var recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n  var recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n  if (draw !== undefined) {\n    // Protect against out of sequence returns\n    if (draw * 1 < settings.iDraw) {\n      return;\n    }\n    settings.iDraw = draw * 1;\n  }\n\n  // No data in returned object, so rather than an array, we show an empty table\n  if (!data) {\n    data = [];\n  }\n  _fnClearTable(settings);\n  settings._iRecordsTotal = parseInt(recordsTotal, 10);\n  settings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n  for (var i = 0, ien = data.length; i < ien; i++) {\n    _fnAddData(settings, data[i]);\n  }\n  settings.aiDisplay = settings.aiDisplayMaster.slice();\n  _fnColumnTypes(settings);\n  _fnDraw(settings, true);\n  _fnInitComplete(settings);\n  _fnProcessingDisplay(settings, false);\n}\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} settings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\nfunction _fnAjaxDataSrc(settings, json, write) {\n  var dataProp = 'data';\n  if ($.isPlainObject(settings.ajax) && settings.ajax.dataSrc !== undefined) {\n    // Could in inside a `dataSrc` object, or not!\n    var dataSrc = settings.ajax.dataSrc;\n\n    // string, function and object are valid types\n    if (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n      dataProp = dataSrc;\n    } else if (dataSrc.data !== undefined) {\n      dataProp = dataSrc.data;\n    }\n  }\n  if (!write) {\n    if (dataProp === 'data') {\n      // If the default, then we still want to support the old style, and safely ignore\n      // it if possible\n      return json.aaData || json[dataProp];\n    }\n    return dataProp !== \"\" ? _fnGetObjectDataFn(dataProp)(json) : json;\n  }\n\n  // set\n  _fnSetObjectDataFn(dataProp)(json, write);\n}\n\n/**\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n * @param {*} settings DataTables settings object\n * @param {*} param Target parameter\n * @param {*} json JSON data\n * @returns Resolved value\n */\nfunction _fnAjaxDataSrcParam(settings, param, json) {\n  var dataSrc = $.isPlainObject(settings.ajax) ? settings.ajax.dataSrc : null;\n  if (dataSrc && dataSrc[param]) {\n    // Get from custom location\n    return _fnGetObjectDataFn(dataSrc[param])(json);\n  }\n\n  // else - Default behaviour\n  var old = '';\n\n  // Legacy support\n  if (param === 'draw') {\n    old = 'sEcho';\n  } else if (param === 'recordsTotal') {\n    old = 'iTotalRecords';\n  } else if (param === 'recordsFiltered') {\n    old = 'iTotalDisplayRecords';\n  }\n  return json[old] !== undefined ? json[old] : json[param];\n}\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} settings dataTables settings object\n *  @param {object} input search information\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete(settings, input) {\n  var columnsSearch = settings.aoPreSearchCols;\n\n  // In server-side processing all filtering is done by the server, so no point hanging around here\n  if (_fnDataSource(settings) != 'ssp') {\n    // Check if any of the rows were invalidated\n    _fnFilterData(settings);\n\n    // Start from the full data set\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n    // Global filter first\n    _fnFilter(settings.aiDisplay, settings, input.search, input);\n    $.each(settings.searchFixed, function (name, term) {\n      _fnFilter(settings.aiDisplay, settings, term, {});\n    });\n\n    // Then individual column filters\n    for (var i = 0; i < columnsSearch.length; i++) {\n      var col = columnsSearch[i];\n      _fnFilter(settings.aiDisplay, settings, col.search, col, i);\n      $.each(settings.aoColumns[i].searchFixed, function (name, term) {\n        _fnFilter(settings.aiDisplay, settings, term, {}, i);\n      });\n    }\n\n    // And finally global filtering\n    _fnFilterCustom(settings);\n  }\n\n  // Tell the draw function we have been filtering\n  settings.bFiltered = true;\n  _fnCallbackFire(settings, null, 'search', [settings]);\n}\n\n/**\n * Apply custom filtering functions\n * \n * This is legacy now that we have named functions, but it is widely used\n * from 1.x, so it is not yet deprecated.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom(settings) {\n  var filters = DataTable.ext.search;\n  var displayRows = settings.aiDisplay;\n  var row, rowIdx;\n  for (var i = 0, ien = filters.length; i < ien; i++) {\n    var rows = [];\n\n    // Loop over each row and see if it should be included\n    for (var j = 0, jen = displayRows.length; j < jen; j++) {\n      rowIdx = displayRows[j];\n      row = settings.aoData[rowIdx];\n      if (filters[i](settings, row._aFilterData, rowIdx, row._aData, j)) {\n        rows.push(rowIdx);\n      }\n    }\n\n    // So the array reference doesn't break set the results into the\n    // existing array\n    displayRows.length = 0;\n    displayRows.push.apply(displayRows, rows);\n  }\n}\n\n/**\n * Filter the data table based on user input and draw the table\n */\nfunction _fnFilter(searchRows, settings, input, options, column) {\n  if (input === '') {\n    return;\n  }\n  var i = 0;\n  var matched = [];\n\n  // Search term can be a function, regex or string - if a string we apply our\n  // smart filtering regex (assuming the options require that)\n  var searchFunc = typeof input === 'function' ? input : null;\n  var rpSearch = input instanceof RegExp ? input : searchFunc ? null : _fnFilterCreateSearch(input, options);\n\n  // Then for each row, does the test pass. If not, lop the row from the array\n  for (i = 0; i < searchRows.length; i++) {\n    var row = settings.aoData[searchRows[i]];\n    var data = column === undefined ? row._sFilterRow : row._aFilterData[column];\n    if (searchFunc && searchFunc(data, row._aData, searchRows[i], column) || rpSearch && rpSearch.test(data)) {\n      matched.push(searchRows[i]);\n    }\n  }\n\n  // Mutate the searchRows array\n  searchRows.length = matched.length;\n  for (i = 0; i < matched.length; i++) {\n    searchRows[i] = matched[i];\n  }\n}\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch(search, inOpts) {\n  var not = [];\n  var options = $.extend({}, {\n    boundary: false,\n    caseInsensitive: true,\n    exact: false,\n    regex: false,\n    smart: true\n  }, inOpts);\n  if (typeof search !== 'string') {\n    search = search.toString();\n  }\n\n  // Remove diacritics if normalize is set up to do so\n  search = _normalize(search);\n  if (options.exact) {\n    return new RegExp('^' + _fnEscapeRegex(search) + '$', options.caseInsensitive ? 'i' : '');\n  }\n  search = options.regex ? search : _fnEscapeRegex(search);\n  if (options.smart) {\n    /* For smart filtering we want to allow the search to work regardless of\n     * word order. We also want double quoted text to be preserved, so word\n     * order is important - a la google. And a negative look around for\n     * finding rows which don't contain a given string.\n     * \n     * So this is the sort of thing we want to generate:\n     * \n     * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n     */\n    var parts = search.match(/!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g) || [''];\n    var a = parts.map(function (word) {\n      var negative = false;\n      var m;\n\n      // Determine if it is a \"does not include\"\n      if (word.charAt(0) === '!') {\n        negative = true;\n        word = word.substring(1);\n      }\n\n      // Strip the quotes from around matched phrases\n      if (word.charAt(0) === '\"') {\n        m = word.match(/^\"(.*)\"$/);\n        word = m ? m[1] : word;\n      } else if (word.charAt(0) === '\\u201C') {\n        // Smart quote match (iPhone users)\n        m = word.match(/^\\u201C(.*)\\u201D$/);\n        word = m ? m[1] : word;\n      }\n\n      // For our \"not\" case, we need to modify the string that is\n      // allowed to match at the end of the expression.\n      if (negative) {\n        if (word.length > 1) {\n          not.push('(?!' + word + ')');\n        }\n        word = '';\n      }\n      return word.replace(/\"/g, '');\n    });\n    var match = not.length ? not.join('') : '';\n    var boundary = options.boundary ? '\\\\b' : '';\n    search = '^(?=.*?' + boundary + a.join(')(?=.*?' + boundary) + ')(' + match + '.)*$';\n  }\n  return new RegExp(search, options.caseInsensitive ? 'i' : '');\n}\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData(settings) {\n  var columns = settings.aoColumns;\n  var data = settings.aoData;\n  var column;\n  var j, jen, filterData, cellData, row;\n  var wasInvalidated = false;\n  for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n    if (!data[rowIdx]) {\n      continue;\n    }\n    row = data[rowIdx];\n    if (!row._aFilterData) {\n      filterData = [];\n      for (j = 0, jen = columns.length; j < jen; j++) {\n        column = columns[j];\n        if (column.bSearchable) {\n          cellData = _fnGetCellData(settings, rowIdx, j, 'filter');\n\n          // Search in DataTables is string based\n          if (cellData === null) {\n            cellData = '';\n          }\n          if (typeof cellData !== 'string' && cellData.toString) {\n            cellData = cellData.toString();\n          }\n        } else {\n          cellData = '';\n        }\n\n        // If it looks like there is an HTML entity in the string,\n        // attempt to decode it so sorting works as expected. Note that\n        // we could use a single line of jQuery to do this, but the DOM\n        // method used here is much faster https://jsperf.com/html-decode\n        if (cellData.indexOf && cellData.indexOf('&') !== -1) {\n          __filter_div.innerHTML = cellData;\n          cellData = __filter_div_textContent ? __filter_div.textContent : __filter_div.innerText;\n        }\n        if (cellData.replace) {\n          cellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n        }\n        filterData.push(cellData);\n      }\n      row._aFilterData = filterData;\n      row._sFilterRow = filterData.join('  ');\n      wasInvalidated = true;\n    }\n  }\n  return wasInvalidated;\n}\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise(settings) {\n  var i;\n  var init = settings.oInit;\n  var deferLoading = settings.deferLoading;\n  var dataSrc = _fnDataSource(settings);\n\n  // Ensure that the table data is fully initialised\n  if (!settings.bInitialised) {\n    setTimeout(function () {\n      _fnInitialise(settings);\n    }, 200);\n    return;\n  }\n\n  // Build the header / footer for the table\n  _fnBuildHead(settings, 'header');\n  _fnBuildHead(settings, 'footer');\n\n  // Load the table's state (if needed) and then render around it and draw\n  _fnLoadState(settings, init, function () {\n    // Then draw the header / footer\n    _fnDrawHead(settings, settings.aoHeader);\n    _fnDrawHead(settings, settings.aoFooter);\n\n    // Cache the paging start point, as the first redraw will reset it\n    var iAjaxStart = settings.iInitDisplayStart;\n\n    // Local data load\n    // Check if there is data passing into the constructor\n    if (init.aaData) {\n      for (i = 0; i < init.aaData.length; i++) {\n        _fnAddData(settings, init.aaData[i]);\n      }\n    } else if (deferLoading || dataSrc == 'dom') {\n      // Grab the data from the page\n      _fnAddTr(settings, $(settings.nTBody).children('tr'));\n    }\n\n    // Filter not yet applied - copy the display master\n    settings.aiDisplay = settings.aiDisplayMaster.slice();\n\n    // Enable features\n    _fnAddOptionsHtml(settings);\n    _fnSortInit(settings);\n    _colGroup(settings);\n\n    /* Okay to show that something is going on now */\n    _fnProcessingDisplay(settings, true);\n    _fnCallbackFire(settings, null, 'preInit', [settings], true);\n\n    // If there is default sorting required - let's do it. The sort function\n    // will do the drawing for us. Otherwise we draw the table regardless of the\n    // Ajax source - this allows the table to look initialised for Ajax sourcing\n    // data (show 'loading' message possibly)\n    _fnReDraw(settings);\n\n    // Server-side processing init complete is done by _fnAjaxUpdateDraw\n    if (dataSrc != 'ssp' || deferLoading) {\n      // if there is an ajax source load the data\n      if (dataSrc == 'ajax') {\n        _fnBuildAjax(settings, {}, function (json) {\n          var aData = _fnAjaxDataSrc(settings, json);\n\n          // Got the data - add it to the table\n          for (i = 0; i < aData.length; i++) {\n            _fnAddData(settings, aData[i]);\n          }\n\n          // Reset the init display for cookie saving. We've already done\n          // a filter, and therefore cleared it before. So we need to make\n          // it appear 'fresh'\n          settings.iInitDisplayStart = iAjaxStart;\n          _fnReDraw(settings);\n          _fnProcessingDisplay(settings, false);\n          _fnInitComplete(settings);\n        }, settings);\n      } else {\n        _fnInitComplete(settings);\n        _fnProcessingDisplay(settings, false);\n      }\n    }\n  });\n}\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete(settings) {\n  if (settings._bInitComplete) {\n    return;\n  }\n  var args = [settings, settings.json];\n  settings._bInitComplete = true;\n\n  // Table is fully set up and we have data, so calculate the\n  // column widths\n  _fnAdjustColumnSizing(settings);\n  _fnCallbackFire(settings, null, 'plugin-init', args, true);\n  _fnCallbackFire(settings, 'aoInitComplete', 'init', args, true);\n}\nfunction _fnLengthChange(settings, val) {\n  var len = parseInt(val, 10);\n  settings._iDisplayLength = len;\n  _fnLengthOverflow(settings);\n\n  // Fire length change event\n  _fnCallbackFire(settings, null, 'length', [settings, len]);\n}\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange(settings, action, redraw) {\n  var start = settings._iDisplayStart,\n    len = settings._iDisplayLength,\n    records = settings.fnRecordsDisplay();\n  if (records === 0 || len === -1) {\n    start = 0;\n  } else if (typeof action === \"number\") {\n    start = action * len;\n    if (start > records) {\n      start = 0;\n    }\n  } else if (action == \"first\") {\n    start = 0;\n  } else if (action == \"previous\") {\n    start = len >= 0 ? start - len : 0;\n    if (start < 0) {\n      start = 0;\n    }\n  } else if (action == \"next\") {\n    if (start + len < records) {\n      start += len;\n    }\n  } else if (action == \"last\") {\n    start = Math.floor((records - 1) / len) * len;\n  } else if (action === 'ellipsis') {\n    return;\n  } else {\n    _fnLog(settings, 0, \"Unknown paging action: \" + action, 5);\n  }\n  var changed = settings._iDisplayStart !== start;\n  settings._iDisplayStart = start;\n  _fnCallbackFire(settings, null, changed ? 'page' : 'page-nc', [settings]);\n  if (changed && redraw) {\n    _fnDraw(settings);\n  }\n  return changed;\n}\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings DataTables settings object\n */\nfunction _processingHtml(settings) {\n  var table = settings.nTable;\n  var scrolling = settings.oScroll.sX !== '' || settings.oScroll.sY !== '';\n  if (settings.oFeatures.bProcessing) {\n    var n = $('<div/>', {\n      'id': settings.sTableId + '_processing',\n      'class': settings.oClasses.processing.container,\n      'role': 'status'\n    }).html(settings.oLanguage.sProcessing).append('<div><div></div><div></div><div></div><div></div></div>');\n\n    // Different positioning depending on if scrolling is enabled or not\n    if (scrolling) {\n      n.prependTo($('div.dt-scroll', settings.nTableWrapper));\n    } else {\n      n.insertBefore(table);\n    }\n    $(table).on('processing.dt.DT', function (e, s, show) {\n      n.css('display', show ? 'block' : 'none');\n    });\n  }\n}\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings DataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n */\nfunction _fnProcessingDisplay(settings, show) {\n  // Ignore cases when we are still redrawing\n  if (settings.bDrawing && show === false) {\n    return;\n  }\n  _fnCallbackFire(settings, null, 'processing', [settings, show]);\n}\n\n/**\n * Show the processing element if an action takes longer than a given time\n *\n * @param {*} settings DataTables settings object\n * @param {*} enable Do (true) or not (false) async processing (local feature enablement)\n * @param {*} run Function to run\n */\nfunction _fnProcessingRun(settings, enable, run) {\n  if (!enable) {\n    // Immediate execution, synchronous\n    run();\n  } else {\n    _fnProcessingDisplay(settings, true);\n\n    // Allow the processing display to show if needed\n    setTimeout(function () {\n      run();\n      _fnProcessingDisplay(settings, false);\n    }, 0);\n  }\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable(settings) {\n  var table = $(settings.nTable);\n\n  // Scrolling from here on in\n  var scroll = settings.oScroll;\n  if (scroll.sX === '' && scroll.sY === '') {\n    return settings.nTable;\n  }\n  var scrollX = scroll.sX;\n  var scrollY = scroll.sY;\n  var classes = settings.oClasses.scrolling;\n  var caption = settings.captionNode;\n  var captionSide = caption ? caption._captionSide : null;\n  var headerClone = $(table[0].cloneNode(false));\n  var footerClone = $(table[0].cloneNode(false));\n  var footer = table.children('tfoot');\n  var _div = '<div/>';\n  var size = function (s) {\n    return !s ? null : _fnStringToCss(s);\n  };\n  if (!footer.length) {\n    footer = null;\n  }\n\n  /*\n   * The HTML structure that we want to generate in this function is:\n   *  div - scroller\n   *    div - scroll head\n   *      div - scroll head inner\n   *        table - scroll head table\n   *          thead - thead\n   *    div - scroll body\n   *      table - table (master table)\n   *        thead - thead clone for sizing\n   *        tbody - tbody\n   *    div - scroll foot\n   *      div - scroll foot inner\n   *        table - scroll foot table\n   *          tfoot - tfoot\n   */\n  var scroller = $(_div, {\n    'class': classes.container\n  }).append($(_div, {\n    'class': classes.header.self\n  }).css({\n    overflow: 'hidden',\n    position: 'relative',\n    border: 0,\n    width: scrollX ? size(scrollX) : '100%'\n  }).append($(_div, {\n    'class': classes.header.inner\n  }).css({\n    'box-sizing': 'content-box',\n    width: scroll.sXInner || '100%'\n  }).append(headerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'top' ? caption : null).append(table.children('thead'))))).append($(_div, {\n    'class': classes.body\n  }).css({\n    position: 'relative',\n    overflow: 'auto',\n    width: size(scrollX)\n  }).append(table));\n  if (footer) {\n    scroller.append($(_div, {\n      'class': classes.footer.self\n    }).css({\n      overflow: 'hidden',\n      border: 0,\n      width: scrollX ? size(scrollX) : '100%'\n    }).append($(_div, {\n      'class': classes.footer.inner\n    }).append(footerClone.removeAttr('id').css('margin-left', 0).append(captionSide === 'bottom' ? caption : null).append(table.children('tfoot')))));\n  }\n  var children = scroller.children();\n  var scrollHead = children[0];\n  var scrollBody = children[1];\n  var scrollFoot = footer ? children[2] : null;\n\n  // When the body is scrolled, then we also want to scroll the headers\n  $(scrollBody).on('scroll.DT', function () {\n    var scrollLeft = this.scrollLeft;\n    scrollHead.scrollLeft = scrollLeft;\n    if (footer) {\n      scrollFoot.scrollLeft = scrollLeft;\n    }\n  });\n\n  // When focus is put on the header cells, we might need to scroll the body\n  $('th, td', scrollHead).on('focus', function () {\n    var scrollLeft = scrollHead.scrollLeft;\n    scrollBody.scrollLeft = scrollLeft;\n    if (footer) {\n      scrollBody.scrollLeft = scrollLeft;\n    }\n  });\n  $(scrollBody).css('max-height', scrollY);\n  if (!scroll.bCollapse) {\n    $(scrollBody).css('height', scrollY);\n  }\n  settings.nScrollHead = scrollHead;\n  settings.nScrollBody = scrollBody;\n  settings.nScrollFoot = scrollFoot;\n\n  // On redraw - align columns\n  settings.aoDrawCallback.push(_fnScrollDraw);\n  return scroller[0];\n}\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Correct colgroup > col values if needed\n *   3. Copy colgroup > col over to header and footer\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw(settings) {\n  // Given that this is such a monster function, a lot of variables are use\n  // to try and keep the minimised size as small as possible\n  var scroll = settings.oScroll,\n    barWidth = scroll.iBarWidth,\n    divHeader = $(settings.nScrollHead),\n    divHeaderInner = divHeader.children('div'),\n    divHeaderTable = divHeaderInner.children('table'),\n    divBodyEl = settings.nScrollBody,\n    divBody = $(divBodyEl),\n    divFooter = $(settings.nScrollFoot),\n    divFooterInner = divFooter.children('div'),\n    divFooterTable = divFooterInner.children('table'),\n    header = $(settings.nTHead),\n    table = $(settings.nTable),\n    footer = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n    browser = settings.oBrowser,\n    headerCopy,\n    footerCopy;\n\n  // If the scrollbar visibility has changed from the last draw, we need to\n  // adjust the column sizes as the table width will have changed to account\n  // for the scrollbar\n  var scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n  if (settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined) {\n    settings.scrollBarVis = scrollBarVis;\n    _fnAdjustColumnSizing(settings);\n    return; // adjust column sizing will call this function again\n  } else {\n    settings.scrollBarVis = scrollBarVis;\n  }\n\n  // 1. Re-create the table inside the scrolling div\n  // Remove the old minimised thead and tfoot elements in the inner table\n  table.children('thead, tfoot').remove();\n\n  // Clone the current header and footer elements and then place it into the inner table\n  headerCopy = header.clone().prependTo(table);\n  headerCopy.find('th, td').removeAttr('tabindex');\n  headerCopy.find('[id]').removeAttr('id');\n  if (footer) {\n    footerCopy = footer.clone().prependTo(table);\n    footerCopy.find('[id]').removeAttr('id');\n  }\n\n  // 2. Correct colgroup > col values if needed\n  // It is possible that the cell sizes are smaller than the content, so we need to\n  // correct colgroup>col for such cases. This can happen if the auto width detection\n  // uses a cell which has a longer string, but isn't the widest! For example \n  // \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n  // \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n  // Note the use of translating into a column index to get the `col` element. This\n  // is because of Responsive which might remove `col` elements, knocking the alignment\n  // of the indexes out.\n  if (settings.aiDisplay.length) {\n    // Get the column sizes from the first row in the table. This should really be a\n    // [].find, but it wasn't supported in Chrome until Sept 2015, and DT has 10 year\n    // browser support\n    var firstTr = null;\n    for (i = settings._iDisplayStart; i < settings.aiDisplay.length; i++) {\n      var idx = settings.aiDisplay[i];\n      var tr = settings.aoData[idx].nTr;\n      if (tr) {\n        firstTr = tr;\n        break;\n      }\n    }\n    if (firstTr) {\n      var colSizes = $(firstTr).children('th, td').map(function (vis) {\n        return {\n          idx: _fnVisibleToColumnIndex(settings, vis),\n          width: $(this).outerWidth()\n        };\n      });\n\n      // Check against what the colgroup > col is set to and correct if needed\n      for (var i = 0; i < colSizes.length; i++) {\n        var colEl = settings.aoColumns[colSizes[i].idx].colEl[0];\n        var colWidth = colEl.style.width.replace('px', '');\n        if (colWidth !== colSizes[i].width) {\n          colEl.style.width = colSizes[i].width + 'px';\n        }\n      }\n    }\n  }\n\n  // 3. Copy the colgroup over to the header and footer\n  divHeaderTable.find('colgroup').remove();\n  divHeaderTable.append(settings.colgroup.clone());\n  if (footer) {\n    divFooterTable.find('colgroup').remove();\n    divFooterTable.append(settings.colgroup.clone());\n  }\n\n  // \"Hide\" the header and footer that we used for the sizing. We need to keep\n  // the content of the cell so that the width applied to the header and body\n  // both match, but we want to hide it completely.\n  $('th, td', headerCopy).each(function () {\n    $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n  });\n  if (footer) {\n    $('th, td', footerCopy).each(function () {\n      $(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n    });\n  }\n\n  // 4. Clean up\n  // Figure out if there are scrollbar present - if so then we need a the header and footer to\n  // provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n  var isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n  var paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right');\n\n  // Set the width's of the header and footer tables\n  var outerWidth = table.outerWidth();\n  divHeaderTable.css('width', _fnStringToCss(outerWidth));\n  divHeaderInner.css('width', _fnStringToCss(outerWidth)).css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n  if (footer) {\n    divFooterTable.css('width', _fnStringToCss(outerWidth));\n    divFooterInner.css('width', _fnStringToCss(outerWidth)).css(paddingSide, isScrolling ? barWidth + \"px\" : \"0px\");\n  }\n\n  // Correct DOM ordering for colgroup - comes before the thead\n  table.children('colgroup').prependTo(table);\n\n  // Adjust the position of the header in case we loose the y-scrollbar\n  divBody.trigger('scroll');\n\n  // If sorting or filtering has occurred, jump the scrolling back to the top\n  // only if we aren't holding the position\n  if ((settings.bSorted || settings.bFiltered) && !settings._drawHold) {\n    divBodyEl.scrollTop = 0;\n  }\n}\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths(settings) {\n  // Not interested in doing column width calculation if auto-width is disabled\n  if (!settings.oFeatures.bAutoWidth) {\n    return;\n  }\n  var table = settings.nTable,\n    columns = settings.aoColumns,\n    scroll = settings.oScroll,\n    scrollY = scroll.sY,\n    scrollX = scroll.sX,\n    scrollXInner = scroll.sXInner,\n    visibleColumns = _fnGetColumns(settings, 'bVisible'),\n    tableWidthAttr = table.getAttribute('width'),\n    // from DOM element\n    tableContainer = table.parentNode,\n    i,\n    column,\n    columnIdx;\n  var styleWidth = table.style.width;\n\n  // If there is no width applied as a CSS style or as an attribute, we assume that\n  // the width is intended to be 100%, which is usually is in CSS, but it is very\n  // difficult to correctly parse the rules to get the final result.\n  if (!styleWidth && !tableWidthAttr) {\n    table.style.width = '100%';\n    styleWidth = '100%';\n  }\n  if (styleWidth && styleWidth.indexOf('%') !== -1) {\n    tableWidthAttr = styleWidth;\n  }\n\n  // Let plug-ins know that we are doing a recalc, in case they have changed any of the\n  // visible columns their own way (e.g. Responsive uses display:none).\n  _fnCallbackFire(settings, null, 'column-calc', {\n    visible: visibleColumns\n  }, false);\n\n  // Construct a single row, worst case, table with the widest\n  // node in the data, assign any user defined widths, then insert it into\n  // the DOM and allow the browser to do all the hard work of calculating\n  // table widths\n  var tmpTable = $(table.cloneNode()).css('visibility', 'hidden').removeAttr('id');\n\n  // Clean up the table body\n  tmpTable.append('<tbody>');\n  var tr = $('<tr/>').appendTo(tmpTable.find('tbody'));\n\n  // Clone the table header and footer - we can't use the header / footer\n  // from the cloned table, since if scrolling is active, the table's\n  // real header and footer are contained in different table tags\n  tmpTable.append($(settings.nTHead).clone()).append($(settings.nTFoot).clone());\n\n  // Remove any assigned widths from the footer (from scrolling)\n  tmpTable.find('tfoot th, tfoot td').css('width', '');\n\n  // Apply custom sizing to the cloned header\n  tmpTable.find('thead th, thead td').each(function () {\n    // Get the `width` from the header layout\n    var width = _fnColumnsSumWidth(settings, this, true, false);\n    if (width) {\n      this.style.width = width;\n\n      // For scrollX we need to force the column width otherwise the\n      // browser will collapse it. If this width is smaller than the\n      // width the column requires, then it will have no effect\n      if (scrollX) {\n        $(this).append($('<div/>').css({\n          width: width,\n          margin: 0,\n          padding: 0,\n          border: 0,\n          height: 1\n        }));\n      }\n    } else {\n      this.style.width = '';\n    }\n  });\n\n  // Find the widest piece of data for each column and put it into the table\n  for (i = 0; i < visibleColumns.length; i++) {\n    columnIdx = visibleColumns[i];\n    column = columns[columnIdx];\n    var longest = _fnGetMaxLenString(settings, columnIdx);\n    var autoClass = _ext.type.className[column.sType];\n    var text = longest + column.sContentPadding;\n    var insert = longest.indexOf('<') === -1 ? document.createTextNode(text) : text;\n    $('<td/>').addClass(autoClass).addClass(column.sClass).append(insert).appendTo(tr);\n  }\n\n  // Tidy the temporary table - remove name attributes so there aren't\n  // duplicated in the dom (radio elements for example)\n  $('[name]', tmpTable).removeAttr('name');\n\n  // Table has been built, attach to the document so we can work with it.\n  // A holding element is used, positioned at the top of the container\n  // with minimal height, so it has no effect on if the container scrolls\n  // or not. Otherwise it might trigger scrolling when it actually isn't\n  // needed\n  var holder = $('<div/>').css(scrollX || scrollY ? {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    height: 1,\n    right: 0,\n    overflow: 'hidden'\n  } : {}).append(tmpTable).appendTo(tableContainer);\n\n  // When scrolling (X or Y) we want to set the width of the table as \n  // appropriate. However, when not scrolling leave the table width as it\n  // is. This results in slightly different, but I think correct behaviour\n  if (scrollX && scrollXInner) {\n    tmpTable.width(scrollXInner);\n  } else if (scrollX) {\n    tmpTable.css('width', 'auto');\n    tmpTable.removeAttr('width');\n\n    // If there is no width attribute or style, then allow the table to\n    // collapse\n    if (tmpTable.width() < tableContainer.clientWidth && tableWidthAttr) {\n      tmpTable.width(tableContainer.clientWidth);\n    }\n  } else if (scrollY) {\n    tmpTable.width(tableContainer.clientWidth);\n  } else if (tableWidthAttr) {\n    tmpTable.width(tableWidthAttr);\n  }\n\n  // Get the width of each column in the constructed table\n  var total = 0;\n  var bodyCells = tmpTable.find('tbody tr').eq(0).children();\n  for (i = 0; i < visibleColumns.length; i++) {\n    // Use getBounding for sub-pixel accuracy, which we then want to round up!\n    var bounding = bodyCells[i].getBoundingClientRect().width;\n\n    // Total is tracked to remove any sub-pixel errors as the outerWidth\n    // of the table might not equal the total given here\n    total += bounding;\n\n    // Width for each column to use\n    columns[visibleColumns[i]].sWidth = _fnStringToCss(bounding);\n  }\n  table.style.width = _fnStringToCss(total);\n\n  // Finished with the table - ditch it\n  holder.remove();\n\n  // If there is a width attr, we want to attach an event listener which\n  // allows the table sizing to automatically adjust when the window is\n  // resized. Use the width attr rather than CSS, since we can't know if the\n  // CSS is a relative value or absolute - DOM read is always px.\n  if (tableWidthAttr) {\n    table.style.width = _fnStringToCss(tableWidthAttr);\n  }\n  if ((tableWidthAttr || scrollX) && !settings._reszEvt) {\n    var bindResize = function () {\n      $(window).on('resize.DT-' + settings.sInstance, DataTable.util.throttle(function () {\n        if (!settings.bDestroying) {\n          _fnAdjustColumnSizing(settings);\n        }\n      }));\n    };\n    bindResize();\n    settings._reszEvt = true;\n  }\n}\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} string of the max length\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString(settings, colIdx) {\n  var column = settings.aoColumns[colIdx];\n  if (!column.maxLenString) {\n    var s,\n      max = '',\n      maxLen = -1;\n    for (var i = 0, ien = settings.aiDisplayMaster.length; i < ien; i++) {\n      var rowIdx = settings.aiDisplayMaster[i];\n      var data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n      var cellString = data && typeof data === 'object' && data.nodeType ? data.innerHTML : data + '';\n\n      // Remove id / name attributes from elements so they\n      // don't interfere with existing elements\n      cellString = cellString.replace(/id=\".*?\"/g, '').replace(/name=\".*?\"/g, '');\n      s = _stripHtml(cellString).replace(/&nbsp;/g, ' ');\n      if (s.length > maxLen) {\n        // We want the HTML in the string, but the length that\n        // is important is the stripped string\n        max = cellString;\n        maxLen = s.length;\n      }\n    }\n    column.maxLenString = max;\n  }\n  return column.maxLenString;\n}\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss(s) {\n  if (s === null) {\n    return '0px';\n  }\n  if (typeof s == 'number') {\n    return s < 0 ? '0px' : s + 'px';\n  }\n\n  // Check it has a unit character already\n  return s.match(/\\d$/) ? s + 'px' : s;\n}\n\n/**\n * Re-insert the `col` elements for current visibility\n *\n * @param {*} settings DT settings\n */\nfunction _colGroup(settings) {\n  var cols = settings.aoColumns;\n  settings.colgroup.empty();\n  for (i = 0; i < cols.length; i++) {\n    if (cols[i].bVisible) {\n      settings.colgroup.append(cols[i].colEl);\n    }\n  }\n}\nfunction _fnSortInit(settings) {\n  var target = settings.nTHead;\n  var headerRows = target.querySelectorAll('tr');\n  var legacyTop = settings.bSortCellsTop;\n  var notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\n  // Legacy support for `orderCellsTop`\n  if (legacyTop === true) {\n    target = headerRows[0];\n  } else if (legacyTop === false) {\n    target = headerRows[headerRows.length - 1];\n  }\n  _fnSortAttachListener(settings, target, target === settings.nTHead ? 'tr' + notSelector + ' th' + notSelector + ', tr' + notSelector + ' td' + notSelector : 'th' + notSelector + ', td' + notSelector);\n\n  // Need to resolve the user input array into our internal structure\n  var order = [];\n  _fnSortResolve(settings, order, settings.aaSorting);\n  settings.aaSorting = order;\n}\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n  _fnBindAction(node, selector, function (e) {\n    var run = false;\n    var columns = column === undefined ? _fnColumnsFromHeader(e.target) : [column];\n    if (columns.length) {\n      for (var i = 0, ien = columns.length; i < ien; i++) {\n        var ret = _fnSortAdd(settings, columns[i], i, e.shiftKey);\n        if (ret !== false) {\n          run = true;\n        }\n\n        // If the first entry is no sort, then subsequent\n        // sort columns are ignored\n        if (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\n          break;\n        }\n      }\n      if (run) {\n        _fnProcessingRun(settings, true, function () {\n          _fnSort(settings);\n          _fnSortDisplay(settings, settings.aiDisplay);\n          _fnReDraw(settings, false, false);\n          if (callback) {\n            callback();\n          }\n        });\n      }\n    }\n  });\n}\n\n/**\n * Sort the display array to match the master's order\n * @param {*} settings\n */\nfunction _fnSortDisplay(settings, display) {\n  if (display.length < 2) {\n    return;\n  }\n  var master = settings.aiDisplayMaster;\n  var masterMap = {};\n  var map = {};\n  var i;\n\n  // Rather than needing an `indexOf` on master array, we can create a map\n  for (i = 0; i < master.length; i++) {\n    masterMap[master[i]] = i;\n  }\n\n  // And then cache what would be the indexOf fom the display\n  for (i = 0; i < display.length; i++) {\n    map[display[i]] = masterMap[display[i]];\n  }\n  display.sort(function (a, b) {\n    // Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n    return map[a] - map[b];\n  });\n}\nfunction _fnSortResolve(settings, nestedSort, sort) {\n  var push = function (a) {\n    if ($.isPlainObject(a)) {\n      if (a.idx !== undefined) {\n        // Index based ordering\n        nestedSort.push([a.idx, a.dir]);\n      } else if (a.name) {\n        // Name based ordering\n        var cols = _pluck(settings.aoColumns, 'sName');\n        var idx = cols.indexOf(a.name);\n        if (idx !== -1) {\n          nestedSort.push([idx, a.dir]);\n        }\n      }\n    } else {\n      // Plain column index and direction pair\n      nestedSort.push(a);\n    }\n  };\n  if ($.isPlainObject(sort)) {\n    // Object\n    push(sort);\n  } else if (sort.length && typeof sort[0] === 'number') {\n    // 1D array\n    push(sort);\n  } else if (sort.length) {\n    // 2D array\n    for (var z = 0; z < sort.length; z++) {\n      push(sort[z]); // Object or array\n    }\n  }\n}\nfunction _fnSortFlatten(settings) {\n  var i,\n    k,\n    kLen,\n    aSort = [],\n    extSort = DataTable.ext.type.order,\n    aoColumns = settings.aoColumns,\n    aDataSort,\n    iCol,\n    sType,\n    srcCol,\n    fixed = settings.aaSortingFixed,\n    fixedObj = $.isPlainObject(fixed),\n    nestedSort = [];\n  if (!settings.oFeatures.bSort) {\n    return aSort;\n  }\n\n  // Build the sort array, with pre-fix and post-fix options if they have been\n  // specified\n  if (Array.isArray(fixed)) {\n    _fnSortResolve(settings, nestedSort, fixed);\n  }\n  if (fixedObj && fixed.pre) {\n    _fnSortResolve(settings, nestedSort, fixed.pre);\n  }\n  _fnSortResolve(settings, nestedSort, settings.aaSorting);\n  if (fixedObj && fixed.post) {\n    _fnSortResolve(settings, nestedSort, fixed.post);\n  }\n  for (i = 0; i < nestedSort.length; i++) {\n    srcCol = nestedSort[i][0];\n    if (aoColumns[srcCol]) {\n      aDataSort = aoColumns[srcCol].aDataSort;\n      for (k = 0, kLen = aDataSort.length; k < kLen; k++) {\n        iCol = aDataSort[k];\n        sType = aoColumns[iCol].sType || 'string';\n        if (nestedSort[i]._idx === undefined) {\n          nestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n        }\n        if (nestedSort[i][1]) {\n          aSort.push({\n            src: srcCol,\n            col: iCol,\n            dir: nestedSort[i][1],\n            index: nestedSort[i]._idx,\n            type: sType,\n            formatter: extSort[sType + \"-pre\"],\n            sorter: extSort[sType + \"-\" + nestedSort[i][1]]\n          });\n        }\n      }\n    }\n  }\n  return aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSort(oSettings, col, dir) {\n  var i,\n    ien,\n    iLen,\n    aiOrig = [],\n    extSort = DataTable.ext.type.order,\n    aoData = oSettings.aoData,\n    sortCol,\n    displayMaster = oSettings.aiDisplayMaster,\n    aSort;\n\n  // Allow a specific column to be sorted, which will _not_ alter the display\n  // master\n  if (col !== undefined) {\n    var srcCol = oSettings.aoColumns[col];\n    aSort = [{\n      src: col,\n      col: col,\n      dir: dir,\n      index: 0,\n      type: srcCol.sType,\n      formatter: extSort[srcCol.sType + \"-pre\"],\n      sorter: extSort[srcCol.sType + \"-\" + dir]\n    }];\n    displayMaster = displayMaster.slice();\n  } else {\n    aSort = _fnSortFlatten(oSettings);\n  }\n  for (i = 0, ien = aSort.length; i < ien; i++) {\n    sortCol = aSort[i];\n\n    // Load the data needed for the sort, for each cell\n    _fnSortData(oSettings, sortCol.col);\n  }\n\n  /* No sorting required if server-side or no sorting array */\n  if (_fnDataSource(oSettings) != 'ssp' && aSort.length !== 0) {\n    // Reset the initial positions on each pass so we get a stable sort\n    for (i = 0, iLen = displayMaster.length; i < iLen; i++) {\n      aiOrig[i] = i;\n    }\n\n    // If the first sort is desc, then reverse the array to preserve original\n    // order, just in reverse\n    if (aSort.length && aSort[0].dir === 'desc' && oSettings.orderDescReverse) {\n      aiOrig.reverse();\n    }\n\n    /* Do the sort - here we want multi-column sorting based on a given data source (column)\n     * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n     * follow on it's own, but this is what we want (example two column sorting):\n     *  fnLocalSorting = function(a,b){\n     *    var test;\n     *    test = oSort['string-asc']('data11', 'data12');\n     *      if (test !== 0)\n     *        return test;\n     *    test = oSort['numeric-desc']('data21', 'data22');\n     *    if (test !== 0)\n     *      return test;\n     *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n     *  }\n     * Basically we have a test for each sorting column, if the data in that column is equal,\n     * test the next column. If all columns match, then we use a numeric sort on the row\n     * positions in the original data array to provide a stable sort.\n     */\n    displayMaster.sort(function (a, b) {\n      var x,\n        y,\n        k,\n        test,\n        sort,\n        len = aSort.length,\n        dataA = aoData[a]._aSortData,\n        dataB = aoData[b]._aSortData;\n      for (k = 0; k < len; k++) {\n        sort = aSort[k];\n\n        // Data, which may have already been through a `-pre` function\n        x = dataA[sort.col];\n        y = dataB[sort.col];\n        if (sort.sorter) {\n          // If there is a custom sorter (`-asc` or `-desc`) for this\n          // data type, use it\n          test = sort.sorter(x, y);\n          if (test !== 0) {\n            return test;\n          }\n        } else {\n          // Otherwise, use generic sorting\n          test = x < y ? -1 : x > y ? 1 : 0;\n          if (test !== 0) {\n            return sort.dir === 'asc' ? test : -test;\n          }\n        }\n      }\n      x = aiOrig[a];\n      y = aiOrig[b];\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n  } else if (aSort.length === 0) {\n    // Apply index order\n    displayMaster.sort(function (x, y) {\n      return x < y ? -1 : x > y ? 1 : 0;\n    });\n  }\n  if (col === undefined) {\n    // Tell the draw function that we have sorted the data\n    oSettings.bSorted = true;\n    oSettings.sortDetails = aSort;\n    _fnCallbackFire(oSettings, null, 'order', [oSettings, aSort]);\n  }\n  return displayMaster;\n}\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {int} addIndex Counter\n *  @param {boolean} [shift=false] Shift click add\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAdd(settings, colIdx, addIndex, shift) {\n  var col = settings.aoColumns[colIdx];\n  var sorting = settings.aaSorting;\n  var asSorting = col.asSorting;\n  var nextSortIdx;\n  var next = function (a, overflow) {\n    var idx = a._idx;\n    if (idx === undefined) {\n      idx = asSorting.indexOf(a[1]);\n    }\n    return idx + 1 < asSorting.length ? idx + 1 : overflow ? null : 0;\n  };\n  if (!col.bSortable) {\n    return false;\n  }\n\n  // Convert to 2D array if needed\n  if (typeof sorting[0] === 'number') {\n    sorting = settings.aaSorting = [sorting];\n  }\n\n  // If appending the sort then we are multi-column sorting\n  if ((shift || addIndex) && settings.oFeatures.bSortMulti) {\n    // Are we already doing some kind of sort on this column?\n    var sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n    if (sortIdx !== -1) {\n      // Yes, modify the sort\n      nextSortIdx = next(sorting[sortIdx], true);\n      if (nextSortIdx === null && sorting.length === 1) {\n        nextSortIdx = 0; // can't remove sorting completely\n      }\n      if (nextSortIdx === null) {\n        sorting.splice(sortIdx, 1);\n      } else {\n        sorting[sortIdx][1] = asSorting[nextSortIdx];\n        sorting[sortIdx]._idx = nextSortIdx;\n      }\n    } else if (shift) {\n      // No sort on this column yet, being added by shift click\n      // add it as itself\n      sorting.push([colIdx, asSorting[0], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    } else {\n      // No sort on this column yet, being added from a colspan\n      // so add with same direction as first column\n      sorting.push([colIdx, sorting[0][1], 0]);\n      sorting[sorting.length - 1]._idx = 0;\n    }\n  } else if (sorting.length && sorting[0][0] == colIdx) {\n    // Single column - already sorting on this column, modify the sort\n    nextSortIdx = next(sorting[0]);\n    sorting.length = 1;\n    sorting[0][1] = asSorting[nextSortIdx];\n    sorting[0]._idx = nextSortIdx;\n  } else {\n    // Single column - sort only on this column\n    sorting.length = 0;\n    sorting.push([colIdx, asSorting[0]]);\n    sorting[0]._idx = 0;\n  }\n}\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses(settings) {\n  var oldSort = settings.aLastSort;\n  var sortClass = settings.oClasses.order.position;\n  var sort = _fnSortFlatten(settings);\n  var features = settings.oFeatures;\n  var i, ien, colIdx;\n  if (features.bSort && features.bSortClasses) {\n    // Remove old sorting classes\n    for (i = 0, ien = oldSort.length; i < ien; i++) {\n      colIdx = oldSort[i].src;\n\n      // Remove column sorting\n      $(_pluck(settings.aoData, 'anCells', colIdx)).removeClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n\n    // Add new column sorting\n    for (i = 0, ien = sort.length; i < ien; i++) {\n      colIdx = sort[i].src;\n      $(_pluck(settings.aoData, 'anCells', colIdx)).addClass(sortClass + (i < 2 ? i + 1 : 3));\n    }\n  }\n  settings.aLastSort = sort;\n}\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData(settings, colIdx) {\n  // Custom sorting function - provided by the sort data type\n  var column = settings.aoColumns[colIdx];\n  var customSort = DataTable.ext.order[column.sSortDataType];\n  var customData;\n  if (customSort) {\n    customData = customSort.call(settings.oInstance, settings, colIdx, _fnColumnIndexToVisible(settings, colIdx));\n  }\n\n  // Use / populate cache\n  var row, cellData;\n  var formatter = DataTable.ext.type.order[column.sType + \"-pre\"];\n  var data = settings.aoData;\n  for (var rowIdx = 0; rowIdx < data.length; rowIdx++) {\n    // Sparse array\n    if (!data[rowIdx]) {\n      continue;\n    }\n    row = data[rowIdx];\n    if (!row._aSortData) {\n      row._aSortData = [];\n    }\n    if (!row._aSortData[colIdx] || customSort) {\n      cellData = customSort ? customData[rowIdx] :\n      // If there was a custom sort function, use data from there\n      _fnGetCellData(settings, rowIdx, colIdx, 'sort');\n      row._aSortData[colIdx] = formatter ? formatter(cellData, settings) : cellData;\n    }\n  }\n}\n\n/**\n * State information for a table\n *\n * @param {*} settings\n * @returns State object\n */\nfunction _fnSaveState(settings) {\n  if (settings._bLoadingState) {\n    return;\n  }\n\n  /* Store the interesting variables */\n  var state = {\n    time: +new Date(),\n    start: settings._iDisplayStart,\n    length: settings._iDisplayLength,\n    order: $.extend(true, [], settings.aaSorting),\n    search: $.extend({}, settings.oPreviousSearch),\n    columns: settings.aoColumns.map(function (col, i) {\n      return {\n        visible: col.bVisible,\n        search: $.extend({}, settings.aoPreSearchCols[i])\n      };\n    })\n  };\n  settings.oSavedState = state;\n  _fnCallbackFire(settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state]);\n  if (settings.oFeatures.bStateSave && !settings.bDestroying) {\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, state);\n  }\n}\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState(settings, init, callback) {\n  if (!settings.oFeatures.bStateSave) {\n    callback();\n    return;\n  }\n  var loaded = function (state) {\n    _fnImplementState(settings, state, callback);\n  };\n  var state = settings.fnStateLoadCallback.call(settings.oInstance, settings, loaded);\n  if (state !== undefined) {\n    _fnImplementState(settings, state, callback);\n  }\n  // otherwise, wait for the loaded callback to be executed\n\n  return true;\n}\nfunction _fnImplementState(settings, s, callback) {\n  var i, ien;\n  var columns = settings.aoColumns;\n  settings._bLoadingState = true;\n\n  // When StateRestore was introduced the state could now be implemented at any time\n  // Not just initialisation. To do this an api instance is required in some places\n  var api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n  if (!s || !s.time) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Reject old data\n  var duration = settings.iStateDuration;\n  if (duration > 0 && s.time < +new Date() - duration * 1000) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Allow custom and plug-in manipulation functions to alter the saved data set and\n  // cancelling of loading by returning false\n  var abStateLoad = _fnCallbackFire(settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s]);\n  if (abStateLoad.indexOf(false) !== -1) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Number of columns have changed - all bets are off, no restore of settings\n  if (s.columns && columns.length !== s.columns.length) {\n    settings._bLoadingState = false;\n    callback();\n    return;\n  }\n\n  // Store the saved state so it might be accessed at any time\n  settings.oLoadedState = $.extend(true, {}, s);\n\n  // This is needed for ColReorder, which has to happen first to allow all\n  // the stored indexes to be usable. It is not publicly documented.\n  _fnCallbackFire(settings, null, 'stateLoadInit', [settings, s], true);\n\n  // Page Length\n  if (s.length !== undefined) {\n    // If already initialised just set the value directly so that the select element is also updated\n    if (api) {\n      api.page.len(s.length);\n    } else {\n      settings._iDisplayLength = s.length;\n    }\n  }\n\n  // Restore key features\n  if (s.start !== undefined) {\n    if (api === null) {\n      settings._iDisplayStart = s.start;\n      settings.iInitDisplayStart = s.start;\n    } else {\n      _fnPageChange(settings, s.start / settings._iDisplayLength);\n    }\n  }\n\n  // Order\n  if (s.order !== undefined) {\n    settings.aaSorting = [];\n    $.each(s.order, function (i, col) {\n      settings.aaSorting.push(col[0] >= columns.length ? [0, col[1]] : col);\n    });\n  }\n\n  // Search\n  if (s.search !== undefined) {\n    $.extend(settings.oPreviousSearch, s.search);\n  }\n\n  // Columns\n  if (s.columns) {\n    for (i = 0, ien = s.columns.length; i < ien; i++) {\n      var col = s.columns[i];\n\n      // Visibility\n      if (col.visible !== undefined) {\n        // If the api is defined, the table has been initialised so we need to use it rather than internal settings\n        if (api) {\n          // Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n          api.column(i).visible(col.visible, false);\n        } else {\n          columns[i].bVisible = col.visible;\n        }\n      }\n\n      // Search\n      if (col.search !== undefined) {\n        $.extend(settings.aoPreSearchCols[i], col.search);\n      }\n    }\n\n    // If the api is defined then we need to adjust the columns once the visibility has been changed\n    if (api) {\n      api.columns.adjust();\n    }\n  }\n  settings._bLoadingState = false;\n  _fnCallbackFire(settings, 'aoStateLoaded', 'stateLoaded', [settings, s]);\n  callback();\n}\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog(settings, level, msg, tn) {\n  msg = 'DataTables warning: ' + (settings ? 'table id=' + settings.sTableId + ' - ' : '') + msg;\n  if (tn) {\n    msg += '. For more information about this error, please see ' + 'https://datatables.net/tn/' + tn;\n  }\n  if (!level) {\n    // Backwards compatibility pre 1.10\n    var ext = DataTable.ext;\n    var type = ext.sErrMode || ext.errMode;\n    if (settings) {\n      _fnCallbackFire(settings, null, 'dt-error', [settings, tn, msg], true);\n    }\n    if (type == 'alert') {\n      alert(msg);\n    } else if (type == 'throw') {\n      throw new Error(msg);\n    } else if (typeof type == 'function') {\n      type(settings, tn, msg);\n    }\n  } else if (window.console && console.log) {\n    console.log(msg);\n  }\n}\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap(ret, src, name, mappedName) {\n  if (Array.isArray(name)) {\n    $.each(name, function (i, val) {\n      if (Array.isArray(val)) {\n        _fnMap(ret, src, val[0], val[1]);\n      } else {\n        _fnMap(ret, src, val);\n      }\n    });\n    return;\n  }\n  if (mappedName === undefined) {\n    mappedName = name;\n  }\n  if (src[name] !== undefined) {\n    ret[mappedName] = src[name];\n  }\n}\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend(out, extender, breakRefs) {\n  var val;\n  for (var prop in extender) {\n    if (Object.prototype.hasOwnProperty.call(extender, prop)) {\n      val = extender[prop];\n      if ($.isPlainObject(val)) {\n        if (!$.isPlainObject(out[prop])) {\n          out[prop] = {};\n        }\n        $.extend(true, out[prop], val);\n      } else if (breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val)) {\n        out[prop] = val.slice();\n      } else {\n        out[prop] = val;\n      }\n    }\n  }\n  return out;\n}\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object|string} selector Selector (for delegated events) or data object\n *   to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction(n, selector, fn) {\n  $(n).on('click.DT', selector, function (e) {\n    fn(e);\n  }).on('keypress.DT', selector, function (e) {\n    if (e.which === 13) {\n      e.preventDefault();\n      fn(e);\n    }\n  }).on('selectstart.DT', selector, function () {\n    // Don't want a double click resulting in text selection\n    return false;\n  });\n}\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} settings dataTables settings object\n *  @param {string} store Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg(settings, store, fn) {\n  if (fn) {\n    settings[store].push(fn);\n  }\n}\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @param {boolean} [bubbles] True if the event should bubble\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire(settings, callbackArr, eventName, args, bubbles) {\n  var ret = [];\n  if (callbackArr) {\n    ret = settings[callbackArr].slice().reverse().map(function (val) {\n      return val.apply(settings.oInstance, args);\n    });\n  }\n  if (eventName !== null) {\n    var e = $.Event(eventName + '.dt');\n    var table = $(settings.nTable);\n\n    // Expose the DataTables API on the event object for easy access\n    e.dt = settings.api;\n    table[bubbles ? 'trigger' : 'triggerHandler'](e, args);\n\n    // If not yet attached to the document, trigger the event\n    // on the body directly to sort of simulate the bubble\n    if (bubbles && table.parents('body').length === 0) {\n      $('body').trigger(e, args);\n    }\n    ret.push(e.result);\n  }\n  return ret;\n}\nfunction _fnLengthOverflow(settings) {\n  var start = settings._iDisplayStart,\n    end = settings.fnDisplayEnd(),\n    len = settings._iDisplayLength;\n\n  /* If we have space to show extra rows (backing up from the end point - then do so */\n  if (start >= end) {\n    start = end - len;\n  }\n\n  // Keep the start record on the current page\n  start -= start % len;\n  if (len === -1 || start < 0) {\n    start = 0;\n  }\n  settings._iDisplayStart = start;\n}\nfunction _fnRenderer(settings, type) {\n  var renderer = settings.renderer;\n  var host = DataTable.ext.renderer[type];\n  if ($.isPlainObject(renderer) && renderer[type]) {\n    // Specific renderer for this type. If available use it, otherwise use\n    // the default.\n    return host[renderer[type]] || host._;\n  } else if (typeof renderer === 'string') {\n    // Common renderer - if there is one available for this type use it,\n    // otherwise use the default\n    return host[renderer] || host._;\n  }\n\n  // Use the default\n  return host._;\n}\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource(settings) {\n  if (settings.oFeatures.bServerSide) {\n    return 'ssp';\n  } else if (settings.ajax) {\n    return 'ajax';\n  }\n  return 'dom';\n}\n\n/**\n * Common replacement for language strings\n *\n * @param {*} settings DT settings object\n * @param {*} str String with values to replace\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n * @returns String\n */\nfunction _fnMacros(settings, str, entries) {\n  // When infinite scrolling, we are always starting at 1. _iDisplayStart is\n  // used only internally\n  var formatter = settings.fnFormatNumber,\n    start = settings._iDisplayStart + 1,\n    len = settings._iDisplayLength,\n    vis = settings.fnRecordsDisplay(),\n    max = settings.fnRecordsTotal(),\n    all = len === -1;\n  return str.replace(/_START_/g, formatter.call(settings, start)).replace(/_END_/g, formatter.call(settings, settings.fnDisplayEnd())).replace(/_MAX_/g, formatter.call(settings, max)).replace(/_TOTAL_/g, formatter.call(settings, vis)).replace(/_PAGE_/g, formatter.call(settings, all ? 1 : Math.ceil(start / len))).replace(/_PAGES_/g, formatter.call(settings, all ? 1 : Math.ceil(vis / len))).replace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries)).replace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max)).replace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis));\n}\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function (mixed) {\n  var idx, jq;\n  var settings = DataTable.settings;\n  var tables = _pluck(settings, 'nTable');\n  if (!mixed) {\n    return [];\n  } else if (mixed.nTable && mixed.oFeatures) {\n    // DataTables settings object\n    return [mixed];\n  } else if (mixed.nodeName && mixed.nodeName.toLowerCase() === 'table') {\n    // Table node\n    idx = tables.indexOf(mixed);\n    return idx !== -1 ? [settings[idx]] : null;\n  } else if (mixed && typeof mixed.settings === 'function') {\n    return mixed.settings().toArray();\n  } else if (typeof mixed === 'string') {\n    // jQuery selector\n    jq = $(mixed).get();\n  } else if (mixed instanceof $) {\n    // jQuery object (also DataTables instance)\n    jq = mixed.get();\n  }\n  if (jq) {\n    return settings.filter(function (v, idx) {\n      return jq.includes(tables[idx]);\n    });\n  }\n};\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new DataTable.Api( 'table.dataTable' );\n */\n_Api = function (context, data) {\n  if (!(this instanceof _Api)) {\n    return new _Api(context, data);\n  }\n  var i;\n  var settings = [];\n  var ctxSettings = function (o) {\n    var a = _toSettings(o);\n    if (a) {\n      settings.push.apply(settings, a);\n    }\n  };\n  if (Array.isArray(context)) {\n    for (i = 0; i < context.length; i++) {\n      ctxSettings(context[i]);\n    }\n  } else {\n    ctxSettings(context);\n  }\n\n  // Remove duplicates\n  this.context = settings.length > 1 ? _unique(settings) : settings;\n\n  // Initial data\n  if (data) {\n    // Chrome can throw a max stack error if apply is called with\n    // too large an array, but apply is faster.\n    if (data.length < 10000) {\n      this.push.apply(this, data);\n    } else {\n      for (i = 0; i < data.length; i++) {\n        this.push(data[i]);\n      }\n    }\n  }\n\n  // selector\n  this.selector = {\n    rows: null,\n    cols: null,\n    opts: null\n  };\n  _Api.extend(this, this, __apiStruct);\n};\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend(_Api.prototype, {\n  any: function () {\n    return this.count() !== 0;\n  },\n  context: [],\n  // array of table settings objects\n\n  count: function () {\n    return this.flatten().length;\n  },\n  each: function (fn) {\n    for (var i = 0, ien = this.length; i < ien; i++) {\n      fn.call(this, this[i], i, this);\n    }\n    return this;\n  },\n  eq: function (idx) {\n    var ctx = this.context;\n    return ctx.length > idx ? new _Api(ctx[idx], this[idx]) : null;\n  },\n  filter: function (fn) {\n    var a = __arrayProto.filter.call(this, fn, this);\n    return new _Api(this.context, a);\n  },\n  flatten: function () {\n    var a = [];\n    return new _Api(this.context, a.concat.apply(a, this.toArray()));\n  },\n  get: function (idx) {\n    return this[idx];\n  },\n  join: __arrayProto.join,\n  includes: function (find) {\n    return this.indexOf(find) === -1 ? false : true;\n  },\n  indexOf: __arrayProto.indexOf,\n  iterator: function (flatten, type, fn, alwaysNew) {\n    var a = [],\n      ret,\n      i,\n      ien,\n      j,\n      jen,\n      context = this.context,\n      rows,\n      items,\n      item,\n      selector = this.selector;\n\n    // Argument shifting\n    if (typeof flatten === 'string') {\n      alwaysNew = fn;\n      fn = type;\n      type = flatten;\n      flatten = false;\n    }\n    for (i = 0, ien = context.length; i < ien; i++) {\n      var apiInst = new _Api(context[i]);\n      if (type === 'table') {\n        ret = fn.call(apiInst, context[i], i);\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'columns' || type === 'rows') {\n        // this has same length as context - one entry for each table\n        ret = fn.call(apiInst, context[i], this[i], i);\n        if (ret !== undefined) {\n          a.push(ret);\n        }\n      } else if (type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell') {\n        // columns and rows share the same structure.\n        // 'this' is an array of column indexes for each context\n        items = this[i];\n        if (type === 'column-rows') {\n          rows = _selector_row_indexes(context[i], selector.opts);\n        }\n        for (j = 0, jen = items.length; j < jen; j++) {\n          item = items[j];\n          if (type === 'cell') {\n            ret = fn.call(apiInst, context[i], item.row, item.column, i, j);\n          } else {\n            ret = fn.call(apiInst, context[i], item, i, j, rows);\n          }\n          if (ret !== undefined) {\n            a.push(ret);\n          }\n        }\n      }\n    }\n    if (a.length || alwaysNew) {\n      var api = new _Api(context, flatten ? a.concat.apply([], a) : a);\n      var apiSelector = api.selector;\n      apiSelector.rows = selector.rows;\n      apiSelector.cols = selector.cols;\n      apiSelector.opts = selector.opts;\n      return api;\n    }\n    return this;\n  },\n  lastIndexOf: __arrayProto.lastIndexOf,\n  length: 0,\n  map: function (fn) {\n    var a = __arrayProto.map.call(this, fn, this);\n    return new _Api(this.context, a);\n  },\n  pluck: function (prop) {\n    var fn = DataTable.util.get(prop);\n    return this.map(function (el) {\n      return fn(el);\n    });\n  },\n  pop: __arrayProto.pop,\n  push: __arrayProto.push,\n  reduce: __arrayProto.reduce,\n  reduceRight: __arrayProto.reduceRight,\n  reverse: __arrayProto.reverse,\n  // Object with rows, columns and opts\n  selector: null,\n  shift: __arrayProto.shift,\n  slice: function () {\n    return new _Api(this.context, this);\n  },\n  sort: __arrayProto.sort,\n  splice: __arrayProto.splice,\n  toArray: function () {\n    return __arrayProto.slice.call(this);\n  },\n  to$: function () {\n    return $(this);\n  },\n  toJQuery: function () {\n    return $(this);\n  },\n  unique: function () {\n    return new _Api(this.context, _unique(this.toArray()));\n  },\n  unshift: __arrayProto.unshift\n});\nfunction _api_scope(scope, fn, struc) {\n  return function () {\n    var ret = fn.apply(scope || this, arguments);\n\n    // Method extension\n    _Api.extend(ret, ret, struc.methodExt);\n    return ret;\n  };\n}\nfunction _api_find(src, name) {\n  for (var i = 0, ien = src.length; i < ien; i++) {\n    if (src[i].name === name) {\n      return src[i];\n    }\n  }\n  return null;\n}\nwindow.__apiStruct = __apiStruct;\n_Api.extend = function (scope, obj, ext) {\n  // Only extend API instances and static properties of the API\n  if (!ext.length || !obj || !(obj instanceof _Api) && !obj.__dt_wrapper) {\n    return;\n  }\n  var i, ien, struct;\n  for (i = 0, ien = ext.length; i < ien; i++) {\n    struct = ext[i];\n    if (struct.name === '__proto__') {\n      continue;\n    }\n\n    // Value\n    obj[struct.name] = struct.type === 'function' ? _api_scope(scope, struct.val, struct) : struct.type === 'object' ? {} : struct.val;\n    obj[struct.name].__dt_wrapper = true;\n\n    // Property extension\n    _Api.extend(scope, obj[struct.name], struct.propExt);\n  }\n};\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n_Api.register = _api_register = function (name, val) {\n  if (Array.isArray(name)) {\n    for (var j = 0, jen = name.length; j < jen; j++) {\n      _Api.register(name[j], val);\n    }\n    return;\n  }\n  var i,\n    ien,\n    heir = name.split('.'),\n    struct = __apiStruct,\n    key,\n    method;\n  for (i = 0, ien = heir.length; i < ien; i++) {\n    method = heir[i].indexOf('()') !== -1;\n    key = method ? heir[i].replace('()', '') : heir[i];\n    var src = _api_find(struct, key);\n    if (!src) {\n      src = {\n        name: key,\n        val: {},\n        methodExt: [],\n        propExt: [],\n        type: 'object'\n      };\n      struct.push(src);\n    }\n    if (i === ien - 1) {\n      src.val = val;\n      src.type = typeof val === 'function' ? 'function' : $.isPlainObject(val) ? 'object' : 'other';\n    } else {\n      struct = method ? src.methodExt : src.propExt;\n    }\n  }\n};\n_Api.registerPlural = _api_registerPlural = function (pluralName, singularName, val) {\n  _Api.register(pluralName, val);\n  _Api.register(singularName, function () {\n    var ret = val.apply(this, arguments);\n    if (ret === this) {\n      // Returned item is the API instance that was passed in, return it\n      return this;\n    } else if (ret instanceof _Api) {\n      // New API instance returned, want the value from the first item\n      // in the returned array for the singular result.\n      return ret.length ? Array.isArray(ret[0]) ? new _Api(ret.context, ret[0]) :\n      // Array results are 'enhanced'\n      ret[0] : undefined;\n    }\n\n    // Non-API return - just fire it back\n    return ret;\n  });\n};\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function (selector, a) {\n  if (Array.isArray(selector)) {\n    var result = [];\n    selector.forEach(function (sel) {\n      var inner = __table_selector(sel, a);\n      result.push.apply(result, inner);\n    });\n    return result.filter(function (item) {\n      return item;\n    });\n  }\n\n  // Integer is used to pick out a table by index\n  if (typeof selector === 'number') {\n    return [a[selector]];\n  }\n\n  // Perform a jQuery selector on the table nodes\n  var nodes = a.map(function (el) {\n    return el.nTable;\n  });\n  return $(nodes).filter(selector).map(function () {\n    // Need to translate back from the table node to the settings\n    var idx = nodes.indexOf(this);\n    return a[idx];\n  }).toArray();\n};\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register('tables()', function (selector) {\n  // A new instance is created if there was a selector specified\n  return selector !== undefined && selector !== null ? new _Api(__table_selector(selector, this.context)) : this;\n});\n_api_register('table()', function (selector) {\n  var tables = this.tables(selector);\n  var ctx = tables.context;\n\n  // Truncate to the first matched table\n  return ctx.length ? new _Api(ctx[0]) : tables;\n});\n\n// Common methods, combined to reduce size\n[['nodes', 'node', 'nTable'], ['body', 'body', 'nTBody'], ['header', 'header', 'nTHead'], ['footer', 'footer', 'nTFoot']].forEach(function (item) {\n  _api_registerPlural('tables().' + item[0] + '()', 'table().' + item[1] + '()', function () {\n    return this.iterator('table', function (ctx) {\n      return ctx[item[2]];\n    }, 1);\n  });\n});\n\n// Structure methods\n[['header', 'aoHeader'], ['footer', 'aoFooter']].forEach(function (item) {\n  _api_register('table().' + item[0] + '.structure()', function (selector) {\n    var indexes = this.columns(selector).indexes().flatten();\n    var ctx = this.context[0];\n    return _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n  });\n});\n_api_registerPlural('tables().containers()', 'table().container()', function () {\n  return this.iterator('table', function (ctx) {\n    return ctx.nTableWrapper;\n  }, 1);\n});\n_api_register('tables().every()', function (fn) {\n  var that = this;\n  return this.iterator('table', function (s, i) {\n    fn.call(that.table(i), i);\n  });\n});\n_api_register('caption()', function (value, side) {\n  var context = this.context;\n\n  // Getter - return existing node's content\n  if (value === undefined) {\n    var caption = context[0].captionNode;\n    return caption && context.length ? caption.innerHTML : null;\n  }\n  return this.iterator('table', function (ctx) {\n    var table = $(ctx.nTable);\n    var caption = $(ctx.captionNode);\n    var container = $(ctx.nTableWrapper);\n\n    // Create the node if it doesn't exist yet\n    if (!caption.length) {\n      caption = $('<caption/>').html(value);\n      ctx.captionNode = caption[0];\n\n      // If side isn't set, we need to insert into the document to let the\n      // CSS decide so we can read it back, otherwise there is no way to\n      // know if the CSS would put it top or bottom for scrolling\n      if (!side) {\n        table.prepend(caption);\n        side = caption.css('caption-side');\n      }\n    }\n    caption.html(value);\n    if (side) {\n      caption.css('caption-side', side);\n      caption[0]._captionSide = side;\n    }\n    if (container.find('div.dataTables_scroll').length) {\n      var selector = side === 'top' ? 'Head' : 'Foot';\n      container.find('div.dataTables_scroll' + selector + ' table').prepend(caption);\n    } else {\n      table.prepend(caption);\n    }\n  }, 1);\n});\n_api_register('caption.node()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].captionNode : null;\n});\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register('draw()', function (paging) {\n  return this.iterator('table', function (settings) {\n    if (paging === 'page') {\n      _fnDraw(settings);\n    } else {\n      if (typeof paging === 'string') {\n        paging = paging === 'full-hold' ? false : true;\n      }\n      _fnReDraw(settings, paging === false);\n    }\n  });\n});\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n */ /**\n    * Set the current page.\n    *\n    * Note that if you attempt to show a page which does not exist, DataTables will\n    * not throw an error, but rather reset the paging.\n    *\n    * @param {integer|string} action The paging action to take. This can be one of:\n    *  * `integer` - The page index to jump to\n    *  * `string` - An action to take:\n    *    * `first` - Jump to first page.\n    *    * `next` - Jump to the next page\n    *    * `previous` - Jump to previous page\n    *    * `last` - Jump to the last page.\n    * @returns {DataTables.Api} this\n    */\n_api_register('page()', function (action) {\n  if (action === undefined) {\n    return this.page.info().page; // not an expensive call\n  }\n\n  // else, have an action to take on all tables\n  return this.iterator('table', function (settings) {\n    _fnPageChange(settings, action);\n  });\n});\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register('page.info()', function () {\n  if (this.context.length === 0) {\n    return undefined;\n  }\n  var settings = this.context[0],\n    start = settings._iDisplayStart,\n    len = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n    visRecords = settings.fnRecordsDisplay(),\n    all = len === -1;\n  return {\n    \"page\": all ? 0 : Math.floor(start / len),\n    \"pages\": all ? 1 : Math.ceil(visRecords / len),\n    \"start\": start,\n    \"end\": settings.fnDisplayEnd(),\n    \"length\": len,\n    \"recordsTotal\": settings.fnRecordsTotal(),\n    \"recordsDisplay\": visRecords,\n    \"serverSide\": _fnDataSource(settings) === 'ssp'\n  };\n});\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n */ /**\n    * Set the current page length.\n    *\n    * @param {integer} Page length to set. Use `-1` to show all records.\n    * @returns {DataTables.Api} this\n    */\n_api_register('page.len()', function (len) {\n  // Note that we can't call this function 'length()' because `length`\n  // is a Javascript property of functions which defines how many arguments\n  // the function expects.\n  if (len === undefined) {\n    return this.context.length !== 0 ? this.context[0]._iDisplayLength : undefined;\n  }\n\n  // else, set the page length\n  return this.iterator('table', function (settings) {\n    _fnLengthChange(settings, len);\n  });\n});\nvar __reload = function (settings, holdPosition, callback) {\n  // Use the draw event to trigger a callback\n  if (callback) {\n    var api = new _Api(settings);\n    api.one('draw', function () {\n      callback(api.ajax.json());\n    });\n  }\n  if (_fnDataSource(settings) == 'ssp') {\n    _fnReDraw(settings, holdPosition);\n  } else {\n    _fnProcessingDisplay(settings, true);\n\n    // Cancel an existing request\n    var xhr = settings.jqXHR;\n    if (xhr && xhr.readyState !== 4) {\n      xhr.abort();\n    }\n\n    // Trigger xhr\n    _fnBuildAjax(settings, {}, function (json) {\n      _fnClearTable(settings);\n      var data = _fnAjaxDataSrc(settings, json);\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        _fnAddData(settings, data[i]);\n      }\n      _fnReDraw(settings, holdPosition);\n      _fnInitComplete(settings);\n      _fnProcessingDisplay(settings, false);\n    });\n  }\n};\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register('ajax.json()', function () {\n  var ctx = this.context;\n  if (ctx.length > 0) {\n    return ctx[0].json;\n  }\n\n  // else return undefined;\n});\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register('ajax.params()', function () {\n  var ctx = this.context;\n  if (ctx.length > 0) {\n    return ctx[0].oAjaxData;\n  }\n\n  // else return undefined;\n});\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register('ajax.reload()', function (callback, resetPaging) {\n  return this.iterator('table', function (settings) {\n    __reload(settings, resetPaging === false, callback);\n  });\n});\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n */ /**\n    * Set the Ajax URL. Note that this will set the URL for all tables in the\n    * current context.\n    *\n    * @param {string} url URL to set.\n    * @returns {DataTables.Api} this\n    */\n_api_register('ajax.url()', function (url) {\n  var ctx = this.context;\n  if (url === undefined) {\n    // get\n    if (ctx.length === 0) {\n      return undefined;\n    }\n    ctx = ctx[0];\n    return $.isPlainObject(ctx.ajax) ? ctx.ajax.url : ctx.ajax;\n  }\n\n  // set\n  return this.iterator('table', function (settings) {\n    if ($.isPlainObject(settings.ajax)) {\n      settings.ajax.url = url;\n    } else {\n      settings.ajax = url;\n    }\n  });\n});\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register('ajax.url().load()', function (callback, resetPaging) {\n  // Same as a reload, but makes sense to present it for easy access after a\n  // url change\n  return this.iterator('table', function (ctx) {\n    __reload(ctx, resetPaging === false, callback);\n  });\n});\nvar _selector_run = function (type, selector, selectFn, settings, opts) {\n  var out = [],\n    res,\n    a,\n    i,\n    ien,\n    j,\n    jen,\n    selectorType = typeof selector;\n\n  // Can't just check for isArray here, as an API or jQuery instance might be\n  // given with their array like look\n  if (!selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined) {\n    selector = [selector];\n  }\n  for (i = 0, ien = selector.length; i < ien; i++) {\n    // Only split on simple strings - complex expressions will be jQuery selectors\n    a = selector[i] && selector[i].split && !selector[i].match(/[[(:]/) ? selector[i].split(',') : [selector[i]];\n    for (j = 0, jen = a.length; j < jen; j++) {\n      res = selectFn(typeof a[j] === 'string' ? a[j].trim() : a[j]);\n\n      // Remove empty items\n      res = res.filter(function (item) {\n        return item !== null && item !== undefined;\n      });\n      if (res && res.length) {\n        out = out.concat(res);\n      }\n    }\n  }\n\n  // selector extensions\n  var ext = _ext.selector[type];\n  if (ext.length) {\n    for (i = 0, ien = ext.length; i < ien; i++) {\n      out = ext[i](settings, opts, out);\n    }\n  }\n  return _unique(out);\n};\nvar _selector_opts = function (opts) {\n  if (!opts) {\n    opts = {};\n  }\n\n  // Backwards compatibility for 1.9- which used the terminology filter rather\n  // than search\n  if (opts.filter && opts.search === undefined) {\n    opts.search = opts.filter;\n  }\n  return $.extend({\n    search: 'none',\n    order: 'current',\n    page: 'all'\n  }, opts);\n};\n\n// Reduce the API instance to the first item found\nvar _selector_first = function (old) {\n  var inst = new _Api(old.context[0]);\n\n  // Use a push rather than passing to the constructor, since it will\n  // merge arrays down automatically, which isn't what is wanted here\n  if (old.length) {\n    inst.push(old[0]);\n  }\n  inst.selector = old.selector;\n\n  // Limit to a single row / column / cell\n  if (inst.length && inst[0].length > 1) {\n    inst[0].splice(1);\n  }\n  return inst;\n};\nvar _selector_row_indexes = function (settings, opts) {\n  var i,\n    ien,\n    tmp,\n    a = [],\n    displayFiltered = settings.aiDisplay,\n    displayMaster = settings.aiDisplayMaster;\n  var search = opts.search,\n    // none, applied, removed\n    order = opts.order,\n    // applied, current, index (original - compatibility with 1.9)\n    page = opts.page; // all, current\n\n  if (_fnDataSource(settings) == 'ssp') {\n    // In server-side processing mode, most options are irrelevant since\n    // rows not shown don't exist and the index order is the applied order\n    // Removed is a special case - for consistency just return an empty\n    // array\n    return search === 'removed' ? [] : _range(0, displayMaster.length);\n  }\n  if (page == 'current') {\n    // Current page implies that order=current and filter=applied, since it is\n    // fairly senseless otherwise, regardless of what order and search actually\n    // are\n    for (i = settings._iDisplayStart, ien = settings.fnDisplayEnd(); i < ien; i++) {\n      a.push(displayFiltered[i]);\n    }\n  } else if (order == 'current' || order == 'applied') {\n    if (search == 'none') {\n      a = displayMaster.slice();\n    } else if (search == 'applied') {\n      a = displayFiltered.slice();\n    } else if (search == 'removed') {\n      // O(n+m) solution by creating a hash map\n      var displayFilteredMap = {};\n      for (i = 0, ien = displayFiltered.length; i < ien; i++) {\n        displayFilteredMap[displayFiltered[i]] = null;\n      }\n      displayMaster.forEach(function (item) {\n        if (!Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n          a.push(item);\n        }\n      });\n    }\n  } else if (order == 'index' || order == 'original') {\n    for (i = 0, ien = settings.aoData.length; i < ien; i++) {\n      if (!settings.aoData[i]) {\n        continue;\n      }\n      if (search == 'none') {\n        a.push(i);\n      } else {\n        // applied | removed\n        tmp = displayFiltered.indexOf(i);\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(i);\n        }\n      }\n    }\n  } else if (typeof order === 'number') {\n    // Order the rows by the given column\n    var ordered = _fnSort(settings, order, 'asc');\n    if (search === 'none') {\n      a = ordered;\n    } else {\n      // applied | removed\n      for (i = 0; i < ordered.length; i++) {\n        tmp = displayFiltered.indexOf(ordered[i]);\n        if (tmp === -1 && search == 'removed' || tmp >= 0 && search == 'applied') {\n          a.push(ordered[i]);\n        }\n      }\n    }\n  }\n  return a;\n};\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function (settings, selector, opts) {\n  var rows;\n  var run = function (sel) {\n    var selInt = _intVal(sel);\n    var aoData = settings.aoData;\n\n    // Short cut - selector is a number and no options provided (default is\n    // all records, so no need to check if the index is in there, since it\n    // must be - dev error if the index doesn't exist).\n    if (selInt !== null && !opts) {\n      return [selInt];\n    }\n    if (!rows) {\n      rows = _selector_row_indexes(settings, opts);\n    }\n    if (selInt !== null && rows.indexOf(selInt) !== -1) {\n      // Selector - integer\n      return [selInt];\n    } else if (sel === null || sel === undefined || sel === '') {\n      // Selector - none\n      return rows;\n    }\n\n    // Selector - function\n    if (typeof sel === 'function') {\n      return rows.map(function (idx) {\n        var row = aoData[idx];\n        return sel(idx, row._aData, row.nTr) ? idx : null;\n      });\n    }\n\n    // Selector - node\n    if (sel.nodeName) {\n      var rowIdx = sel._DT_RowIndex; // Property added by DT for fast lookup\n      var cellIdx = sel._DT_CellIndex;\n      if (rowIdx !== undefined) {\n        // Make sure that the row is actually still present in the table\n        return aoData[rowIdx] && aoData[rowIdx].nTr === sel ? [rowIdx] : [];\n      } else if (cellIdx) {\n        return aoData[cellIdx.row] && aoData[cellIdx.row].nTr === sel.parentNode ? [cellIdx.row] : [];\n      } else {\n        var host = $(sel).closest('*[data-dt-row]');\n        return host.length ? [host.data('dt-row')] : [];\n      }\n    }\n\n    // ID selector. Want to always be able to select rows by id, regardless\n    // of if the tr element has been created or not, so can't rely upon\n    // jQuery here - hence a custom implementation. This does not match\n    // Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n    // but to select it using a CSS selector engine (like Sizzle or\n    // querySelect) it would need to need to be escaped for some characters.\n    // DataTables simplifies this for row selectors since you can select\n    // only a row. A # indicates an id any anything that follows is the id -\n    // unescaped.\n    if (typeof sel === 'string' && sel.charAt(0) === '#') {\n      // get row index from id\n      var rowObj = settings.aIds[sel.replace(/^#/, '')];\n      if (rowObj !== undefined) {\n        return [rowObj.idx];\n      }\n\n      // need to fall through to jQuery in case there is DOM id that\n      // matches\n    }\n\n    // Get nodes in the order from the `rows` array with null values removed\n    var nodes = _removeEmpty(_pluck_order(settings.aoData, rows, 'nTr'));\n\n    // Selector - jQuery selector string, array of nodes or jQuery object/\n    // As jQuery's .filter() allows jQuery objects to be passed in filter,\n    // it also allows arrays, so this will cope with all three options\n    return $(nodes).filter(sel).map(function () {\n      return this._DT_RowIndex;\n    }).toArray();\n  };\n  var matched = _selector_run('row', selector, run, settings, opts);\n  if (opts.order === 'current' || opts.order === 'applied') {\n    _fnSortDisplay(settings, matched);\n  }\n  return matched;\n};\n_api_register('rows()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __row_selector(settings, selector, opts);\n  }, 1);\n\n  // Want argument shifting here and in __row_selector?\n  inst.selector.rows = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n_api_register('rows().nodes()', function () {\n  return this.iterator('row', function (settings, row) {\n    return settings.aoData[row].nTr || undefined;\n  }, 1);\n});\n_api_register('rows().data()', function () {\n  return this.iterator(true, 'rows', function (settings, rows) {\n    return _pluck_order(settings.aoData, rows, '_aData');\n  }, 1);\n});\n_api_registerPlural('rows().cache()', 'row().cache()', function (type) {\n  return this.iterator('row', function (settings, row) {\n    var r = settings.aoData[row];\n    return type === 'search' ? r._aFilterData : r._aSortData;\n  }, 1);\n});\n_api_registerPlural('rows().invalidate()', 'row().invalidate()', function (src) {\n  return this.iterator('row', function (settings, row) {\n    _fnInvalidate(settings, row, src);\n  });\n});\n_api_registerPlural('rows().indexes()', 'row().index()', function () {\n  return this.iterator('row', function (settings, row) {\n    return row;\n  }, 1);\n});\n_api_registerPlural('rows().ids()', 'row().id()', function (hash) {\n  var a = [];\n  var context = this.context;\n\n  // `iterator` will drop undefined values, but in this case we want them\n  for (var i = 0, ien = context.length; i < ien; i++) {\n    for (var j = 0, jen = this[i].length; j < jen; j++) {\n      var id = context[i].rowIdFn(context[i].aoData[this[i][j]]._aData);\n      a.push((hash === true ? '#' : '') + id);\n    }\n  }\n  return new _Api(context, a);\n});\n_api_registerPlural('rows().remove()', 'row().remove()', function () {\n  this.iterator('row', function (settings, row) {\n    var data = settings.aoData;\n    var rowData = data[row];\n\n    // Delete from the display arrays\n    var idx = settings.aiDisplayMaster.indexOf(row);\n    if (idx !== -1) {\n      settings.aiDisplayMaster.splice(idx, 1);\n    }\n\n    // For server-side processing tables - subtract the deleted row from the count\n    if (settings._iRecordsDisplay > 0) {\n      settings._iRecordsDisplay--;\n    }\n\n    // Check for an 'overflow' they case for displaying the table\n    _fnLengthOverflow(settings);\n\n    // Remove the row's ID reference if there is one\n    var id = settings.rowIdFn(rowData._aData);\n    if (id !== undefined) {\n      delete settings.aIds[id];\n    }\n    data[row] = null;\n  });\n  return this;\n});\n_api_register('rows.add()', function (rows) {\n  var newRows = this.iterator('table', function (settings) {\n    var row, i, ien;\n    var out = [];\n    for (i = 0, ien = rows.length; i < ien; i++) {\n      row = rows[i];\n      if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n        out.push(_fnAddTr(settings, row)[0]);\n      } else {\n        out.push(_fnAddData(settings, row));\n      }\n    }\n    return out;\n  }, 1);\n\n  // Return an Api.rows() extended instance, so rows().nodes() etc can be used\n  var modRows = this.rows(-1);\n  modRows.pop();\n  modRows.push.apply(modRows, newRows);\n  return modRows;\n});\n\n/**\n *\n */\n_api_register('row()', function (selector, opts) {\n  return _selector_first(this.rows(selector, opts));\n});\n_api_register('row().data()', function (data) {\n  var ctx = this.context;\n  if (data === undefined) {\n    // Get\n    return ctx.length && this.length && this[0].length ? ctx[0].aoData[this[0]]._aData : undefined;\n  }\n\n  // Set\n  var row = ctx[0].aoData[this[0]];\n  row._aData = data;\n\n  // If the DOM has an id, and the data source is an array\n  if (Array.isArray(data) && row.nTr && row.nTr.id) {\n    _fnSetObjectDataFn(ctx[0].rowId)(data, row.nTr.id);\n  }\n\n  // Automatically invalidate\n  _fnInvalidate(ctx[0], this[0], 'data');\n  return this;\n});\n_api_register('row().node()', function () {\n  var ctx = this.context;\n  if (ctx.length && this.length && this[0].length) {\n    var row = ctx[0].aoData[this[0]];\n    if (row && row.nTr) {\n      return row.nTr;\n    }\n  }\n  return null;\n});\n_api_register('row.add()', function (row) {\n  // Allow a jQuery object to be passed in - only a single row is added from\n  // it though - the first element in the set\n  if (row instanceof $ && row.length) {\n    row = row[0];\n  }\n  var rows = this.iterator('table', function (settings) {\n    if (row.nodeName && row.nodeName.toUpperCase() === 'TR') {\n      return _fnAddTr(settings, row)[0];\n    }\n    return _fnAddData(settings, row);\n  });\n\n  // Return an Api.rows() extended instance, with the newly added row selected\n  return this.row(rows[0]);\n});\n$(document).on('plugin-init.dt', function (e, context) {\n  var api = new _Api(context);\n  api.on('stateSaveParams.DT', function (e, settings, d) {\n    // This could be more compact with the API, but it is a lot faster as a simple\n    // internal loop\n    var idFn = settings.rowIdFn;\n    var rows = settings.aiDisplayMaster;\n    var ids = [];\n    for (var i = 0; i < rows.length; i++) {\n      var rowIdx = rows[i];\n      var data = settings.aoData[rowIdx];\n      if (data._detailsShow) {\n        ids.push('#' + idFn(data._aData));\n      }\n    }\n    d.childRows = ids;\n  });\n\n  // For future state loads (e.g. with StateRestore)\n  api.on('stateLoaded.DT', function (e, settings, state) {\n    __details_state_load(api, state);\n  });\n\n  // And the initial load state\n  __details_state_load(api, api.state.loaded());\n});\nvar __details_state_load = function (api, state) {\n  if (state && state.childRows) {\n    api.rows(state.childRows.map(function (id) {\n      // Escape any `:` characters from the row id. Accounts for\n      // already escaped characters.\n      return id.replace(/([^:\\\\]*(?:\\\\.[^:\\\\]*)*):/g, \"$1\\\\:\");\n    })).every(function () {\n      _fnCallbackFire(api.settings()[0], null, 'requestChild', [this]);\n    });\n  }\n};\nvar __details_add = function (ctx, row, data, klass) {\n  // Convert to array of TR elements\n  var rows = [];\n  var addRow = function (r, k) {\n    // Recursion to allow for arrays of jQuery objects\n    if (Array.isArray(r) || r instanceof $) {\n      for (var i = 0, ien = r.length; i < ien; i++) {\n        addRow(r[i], k);\n      }\n      return;\n    }\n\n    // If we get a TR element, then just add it directly - up to the dev\n    // to add the correct number of columns etc\n    if (r.nodeName && r.nodeName.toLowerCase() === 'tr') {\n      r.setAttribute('data-dt-row', row.idx);\n      rows.push(r);\n    } else {\n      // Otherwise create a row with a wrapper\n      var created = $('<tr><td></td></tr>').attr('data-dt-row', row.idx).addClass(k);\n      $('td', created).addClass(k).html(r)[0].colSpan = _fnVisbleColumns(ctx);\n      rows.push(created[0]);\n    }\n  };\n  addRow(data, klass);\n  if (row._details) {\n    row._details.detach();\n  }\n  row._details = $(rows);\n\n  // If the children were already shown, that state should be retained\n  if (row._detailsShow) {\n    row._details.insertAfter(row.nTr);\n  }\n};\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(function (ctx) {\n  _fnSaveState(ctx[0]);\n}, 500);\nvar __details_remove = function (api, idx) {\n  var ctx = api.context;\n  if (ctx.length) {\n    var row = ctx[0].aoData[idx !== undefined ? idx : api[0]];\n    if (row && row._details) {\n      row._details.remove();\n      row._detailsShow = undefined;\n      row._details = undefined;\n      $(row.nTr).removeClass('dt-hasChild');\n      __details_state(ctx);\n    }\n  }\n};\nvar __details_display = function (api, show) {\n  var ctx = api.context;\n  if (ctx.length && api.length) {\n    var row = ctx[0].aoData[api[0]];\n    if (row._details) {\n      row._detailsShow = show;\n      if (show) {\n        row._details.insertAfter(row.nTr);\n        $(row.nTr).addClass('dt-hasChild');\n      } else {\n        row._details.detach();\n        $(row.nTr).removeClass('dt-hasChild');\n      }\n      _fnCallbackFire(ctx[0], null, 'childRow', [show, api.row(api[0])]);\n      __details_events(ctx[0]);\n      __details_state(ctx);\n    }\n  }\n};\nvar __details_events = function (settings) {\n  var api = new _Api(settings);\n  var namespace = '.dt.DT_details';\n  var drawEvent = 'draw' + namespace;\n  var colvisEvent = 'column-sizing' + namespace;\n  var destroyEvent = 'destroy' + namespace;\n  var data = settings.aoData;\n  api.off(drawEvent + ' ' + colvisEvent + ' ' + destroyEvent);\n  if (_pluck(data, '_details').length > 0) {\n    // On each draw, insert the required elements into the document\n    api.on(drawEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n      api.rows({\n        page: 'current'\n      }).eq(0).each(function (idx) {\n        // Internal data grab\n        var row = data[idx];\n        if (row._detailsShow) {\n          row._details.insertAfter(row.nTr);\n        }\n      });\n    });\n\n    // Column visibility change - update the colspan\n    api.on(colvisEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n\n      // Update the colspan for the details rows (note, only if it already has\n      // a colspan)\n      var row,\n        visible = _fnVisbleColumns(ctx);\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        row = data[i];\n        if (row && row._details) {\n          row._details.each(function () {\n            var el = $(this).children('td');\n            if (el.length == 1) {\n              el.attr('colspan', visible);\n            }\n          });\n        }\n      }\n    });\n\n    // Table destroyed - nuke any child rows\n    api.on(destroyEvent, function (e, ctx) {\n      if (settings !== ctx) {\n        return;\n      }\n      for (var i = 0, ien = data.length; i < ien; i++) {\n        if (data[i] && data[i]._details) {\n          __details_remove(api, i);\n        }\n      }\n    });\n  }\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp + 'row().child';\nvar _child_mth = _child_obj + '()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register(_child_mth, function (data, klass) {\n  var ctx = this.context;\n  if (data === undefined) {\n    // get\n    return ctx.length && this.length && ctx[0].aoData[this[0]] ? ctx[0].aoData[this[0]]._details : undefined;\n  } else if (data === true) {\n    // show\n    this.child.show();\n  } else if (data === false) {\n    // remove\n    __details_remove(this);\n  } else if (ctx.length && this.length) {\n    // set\n    __details_add(ctx[0], ctx[0].aoData[this[0]], data, klass);\n  }\n  return this;\n});\n_api_register([_child_obj + '.show()', _child_mth + '.show()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, true);\n  return this;\n});\n_api_register([_child_obj + '.hide()', _child_mth + '.hide()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_display(this, false);\n  return this;\n});\n_api_register([_child_obj + '.remove()', _child_mth + '.remove()' // only when `child()` was called with parameters (without\n], function () {\n  // it returns an object and this method is not executed)\n  __details_remove(this);\n  return this;\n});\n_api_register(_child_obj + '.isShown()', function () {\n  var ctx = this.context;\n  if (ctx.length && this.length && ctx[0].aoData[this[0]]) {\n    // _detailsShown as false or undefined will fall through to return false\n    return ctx[0].aoData[this[0]]._detailsShow || false;\n  }\n  return false;\n});\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+)?:(name|title|visIdx|visible)$/;\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function (settings, column, r1, r2, rows, type) {\n  var a = [];\n  for (var row = 0, ien = rows.length; row < ien; row++) {\n    a.push(_fnGetCellData(settings, rows[row], column, type));\n  }\n  return a;\n};\nvar __column_header = function (settings, column, row) {\n  var header = settings.aoHeader;\n  var target = row !== undefined ? row : settings.bSortCellsTop // legacy support\n  ? 0 : header.length - 1;\n  return header[target][column].cell;\n};\nvar __column_selector = function (settings, selector, opts) {\n  var columns = settings.aoColumns,\n    names = _pluck(columns, 'sName'),\n    titles = _pluck(columns, 'sTitle'),\n    cells = DataTable.util.get('[].[].cell')(settings.aoHeader),\n    nodes = _unique(_flatten([], cells));\n  var run = function (s) {\n    var selInt = _intVal(s);\n\n    // Selector - all\n    if (s === '') {\n      return _range(columns.length);\n    }\n\n    // Selector - index\n    if (selInt !== null) {\n      return [selInt >= 0 ? selInt :\n      // Count from left\n      columns.length + selInt // Count from right (+ because its a negative value)\n      ];\n    }\n\n    // Selector = function\n    if (typeof s === 'function') {\n      var rows = _selector_row_indexes(settings, opts);\n      return columns.map(function (col, idx) {\n        return s(idx, __columnData(settings, idx, 0, 0, rows), __column_header(settings, idx)) ? idx : null;\n      });\n    }\n\n    // jQuery or string selector\n    var match = typeof s === 'string' ? s.match(__re_column_selector) : '';\n    if (match) {\n      switch (match[2]) {\n        case 'visIdx':\n        case 'visible':\n          // Selector is a column index\n          if (match[1] && match[1].match(/^\\d+$/)) {\n            var idx = parseInt(match[1], 10);\n\n            // Visible index given, convert to column index\n            if (idx < 0) {\n              // Counting from the right\n              var visColumns = columns.map(function (col, i) {\n                return col.bVisible ? i : null;\n              });\n              return [visColumns[visColumns.length + idx]];\n            }\n            // Counting from the left\n            return [_fnVisibleToColumnIndex(settings, idx)];\n          }\n          return columns.map(function (col, idx) {\n            // Not visible, can't match\n            if (!col.bVisible) {\n              return null;\n            }\n\n            // Selector\n            if (match[1]) {\n              return $(nodes[idx]).filter(match[1]).length > 0 ? idx : null;\n            }\n\n            // `:visible` on its own\n            return idx;\n          });\n        case 'name':\n          // match by name. `names` is column index complete and in order\n          return names.map(function (name, i) {\n            return name === match[1] ? i : null;\n          });\n        case 'title':\n          // match by column title\n          return titles.map(function (title, i) {\n            return title === match[1] ? i : null;\n          });\n        default:\n          return [];\n      }\n    }\n\n    // Cell in the table body\n    if (s.nodeName && s._DT_CellIndex) {\n      return [s._DT_CellIndex.column];\n    }\n\n    // jQuery selector on the TH elements for the columns\n    var jqResult = $(nodes).filter(s).map(function () {\n      return _fnColumnsFromHeader(this); // `nodes` is column index complete and in order\n    }).toArray();\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    }\n\n    // Otherwise a node which might have a `dt-column` data attribute, or be\n    // a child or such an element\n    var host = $(s).closest('*[data-dt-column]');\n    return host.length ? [host.data('dt-column')] : [];\n  };\n  return _selector_run('column', selector, run, settings, opts);\n};\nvar __setColumnVis = function (settings, column, vis) {\n  var cols = settings.aoColumns,\n    col = cols[column],\n    data = settings.aoData,\n    cells,\n    i,\n    ien,\n    tr;\n\n  // Get\n  if (vis === undefined) {\n    return col.bVisible;\n  }\n\n  // Set\n  // No change\n  if (col.bVisible === vis) {\n    return false;\n  }\n  if (vis) {\n    // Insert column\n    // Need to decide if we should use appendChild or insertBefore\n    var insertBefore = _pluck(cols, 'bVisible').indexOf(true, column + 1);\n    for (i = 0, ien = data.length; i < ien; i++) {\n      if (data[i]) {\n        tr = data[i].nTr;\n        cells = data[i].anCells;\n        if (tr) {\n          // insertBefore can act like appendChild if 2nd arg is null\n          tr.insertBefore(cells[column], cells[insertBefore] || null);\n        }\n      }\n    }\n  } else {\n    // Remove column\n    $(_pluck(settings.aoData, 'anCells', column)).detach();\n  }\n\n  // Common actions\n  col.bVisible = vis;\n  _colGroup(settings);\n  return true;\n};\n_api_register('columns()', function (selector, opts) {\n  // argument shifting\n  if (selector === undefined) {\n    selector = '';\n  } else if ($.isPlainObject(selector)) {\n    opts = selector;\n    selector = '';\n  }\n  opts = _selector_opts(opts);\n  var inst = this.iterator('table', function (settings) {\n    return __column_selector(settings, selector, opts);\n  }, 1);\n\n  // Want argument shifting here and in _row_selector?\n  inst.selector.cols = selector;\n  inst.selector.opts = opts;\n  return inst;\n});\n_api_registerPlural('columns().header()', 'column().header()', function (row) {\n  return this.iterator('column', function (settings, column) {\n    return __column_header(settings, column, row);\n  }, 1);\n});\n_api_registerPlural('columns().footer()', 'column().footer()', function (row) {\n  return this.iterator('column', function (settings, column) {\n    var footer = settings.aoFooter;\n    if (!footer.length) {\n      return null;\n    }\n    return settings.aoFooter[row !== undefined ? row : 0][column].cell;\n  }, 1);\n});\n_api_registerPlural('columns().data()', 'column().data()', function () {\n  return this.iterator('column-rows', __columnData, 1);\n});\n_api_registerPlural('columns().render()', 'column().render()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return __columnData(settings, column, i, j, rows, type);\n  }, 1);\n});\n_api_registerPlural('columns().dataSrc()', 'column().dataSrc()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column].mData;\n  }, 1);\n});\n_api_registerPlural('columns().cache()', 'column().cache()', function (type) {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, type === 'search' ? '_aFilterData' : '_aSortData', column);\n  }, 1);\n});\n_api_registerPlural('columns().init()', 'column().init()', function () {\n  return this.iterator('column', function (settings, column) {\n    return settings.aoColumns[column];\n  }, 1);\n});\n_api_registerPlural('columns().nodes()', 'column().nodes()', function () {\n  return this.iterator('column-rows', function (settings, column, i, j, rows) {\n    return _pluck_order(settings.aoData, rows, 'anCells', column);\n  }, 1);\n});\n_api_registerPlural('columns().titles()', 'column().title()', function (title, row) {\n  return this.iterator('column', function (settings, column) {\n    // Argument shifting\n    if (typeof title === 'number') {\n      row = title;\n      title = undefined;\n    }\n    var span = $('span.dt-column-title', this.column(column).header(row));\n    if (title !== undefined) {\n      span.html(title);\n      return this;\n    }\n    return span.html();\n  }, 1);\n});\n_api_registerPlural('columns().types()', 'column().type()', function () {\n  return this.iterator('column', function (settings, column) {\n    var type = settings.aoColumns[column].sType;\n\n    // If the type was invalidated, then resolve it. This actually does\n    // all columns at the moment. Would only happen once if getting all\n    // column's data types.\n    if (!type) {\n      _fnColumnTypes(settings);\n    }\n    return type;\n  }, 1);\n});\n_api_registerPlural('columns().visible()', 'column().visible()', function (vis, calc) {\n  var that = this;\n  var changed = [];\n  var ret = this.iterator('column', function (settings, column) {\n    if (vis === undefined) {\n      return settings.aoColumns[column].bVisible;\n    } // else\n\n    if (__setColumnVis(settings, column, vis)) {\n      changed.push(column);\n    }\n  });\n\n  // Group the column visibility changes\n  if (vis !== undefined) {\n    this.iterator('table', function (settings) {\n      // Redraw the header after changes\n      _fnDrawHead(settings, settings.aoHeader);\n      _fnDrawHead(settings, settings.aoFooter);\n\n      // Update colspan for no records display. Child rows and extensions will use their own\n      // listeners to do this - only need to update the empty table item here\n      if (!settings.aiDisplay.length) {\n        $(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n      }\n      _fnSaveState(settings);\n\n      // Second loop once the first is done for events\n      that.iterator('column', function (settings, column) {\n        if (changed.includes(column)) {\n          _fnCallbackFire(settings, null, 'column-visibility', [settings, column, vis, calc]);\n        }\n      });\n      if (changed.length && (calc === undefined || calc)) {\n        that.columns.adjust();\n      }\n    });\n  }\n  return ret;\n});\n_api_registerPlural('columns().widths()', 'column().width()', function () {\n  // Injects a fake row into the table for just a moment so the widths can\n  // be read, regardless of colspan in the header and rows being present in\n  // the body\n  var columns = this.columns(':visible').count();\n  var row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n  $(this.table().body()).append(row);\n  var widths = row.children().map(function () {\n    return $(this).outerWidth();\n  });\n  row.remove();\n  return this.iterator('column', function (settings, column) {\n    var visIdx = _fnColumnIndexToVisible(settings, column);\n    return visIdx !== null ? widths[visIdx] : 0;\n  }, 1);\n});\n_api_registerPlural('columns().indexes()', 'column().index()', function (type) {\n  return this.iterator('column', function (settings, column) {\n    return type === 'visible' ? _fnColumnIndexToVisible(settings, column) : column;\n  }, 1);\n});\n_api_register('columns.adjust()', function () {\n  return this.iterator('table', function (settings) {\n    _fnAdjustColumnSizing(settings);\n  }, 1);\n});\n_api_register('column.index()', function (type, idx) {\n  if (this.context.length !== 0) {\n    var ctx = this.context[0];\n    if (type === 'fromVisible' || type === 'toData') {\n      return _fnVisibleToColumnIndex(ctx, idx);\n    } else if (type === 'fromData' || type === 'toVisible') {\n      return _fnColumnIndexToVisible(ctx, idx);\n    }\n  }\n});\n_api_register('column()', function (selector, opts) {\n  return _selector_first(this.columns(selector, opts));\n});\nvar __cell_selector = function (settings, selector, opts) {\n  var data = settings.aoData;\n  var rows = _selector_row_indexes(settings, opts);\n  var cells = _removeEmpty(_pluck_order(data, rows, 'anCells'));\n  var allCells = $(_flatten([], cells));\n  var row;\n  var columns = settings.aoColumns.length;\n  var a, i, ien, j, o, host;\n  var run = function (s) {\n    var fnSelector = typeof s === 'function';\n    if (s === null || s === undefined || fnSelector) {\n      // All cells and function selectors\n      a = [];\n      for (i = 0, ien = rows.length; i < ien; i++) {\n        row = rows[i];\n        for (j = 0; j < columns; j++) {\n          o = {\n            row: row,\n            column: j\n          };\n          if (fnSelector) {\n            // Selector - function\n            host = data[row];\n            if (s(o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null)) {\n              a.push(o);\n            }\n          } else {\n            // Selector - all\n            a.push(o);\n          }\n        }\n      }\n      return a;\n    }\n\n    // Selector - index\n    if ($.isPlainObject(s)) {\n      // Valid cell index and its in the array of selectable rows\n      return s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ? [s] : [];\n    }\n\n    // Selector - jQuery filtered cells\n    var jqResult = allCells.filter(s).map(function (i, el) {\n      return {\n        // use a new object, in case someone changes the values\n        row: el._DT_CellIndex.row,\n        column: el._DT_CellIndex.column\n      };\n    }).toArray();\n    if (jqResult.length || !s.nodeName) {\n      return jqResult;\n    }\n\n    // Otherwise the selector is a node, and there is one last option - the\n    // element might be a child of an element which has dt-row and dt-column\n    // data attributes\n    host = $(s).closest('*[data-dt-row]');\n    return host.length ? [{\n      row: host.data('dt-row'),\n      column: host.data('dt-column')\n    }] : [];\n  };\n  return _selector_run('cell', selector, run, settings, opts);\n};\n_api_register('cells()', function (rowSelector, columnSelector, opts) {\n  // Argument shifting\n  if ($.isPlainObject(rowSelector)) {\n    // Indexes\n    if (rowSelector.row === undefined) {\n      // Selector options in first parameter\n      opts = rowSelector;\n      rowSelector = null;\n    } else {\n      // Cell index objects in first parameter\n      opts = columnSelector;\n      columnSelector = null;\n    }\n  }\n  if ($.isPlainObject(columnSelector)) {\n    opts = columnSelector;\n    columnSelector = null;\n  }\n\n  // Cell selector\n  if (columnSelector === null || columnSelector === undefined) {\n    return this.iterator('table', function (settings) {\n      return __cell_selector(settings, rowSelector, _selector_opts(opts));\n    });\n  }\n\n  // The default built in options need to apply to row and columns\n  var internalOpts = opts ? {\n    page: opts.page,\n    order: opts.order,\n    search: opts.search\n  } : {};\n\n  // Row + column selector\n  var columns = this.columns(columnSelector, internalOpts);\n  var rows = this.rows(rowSelector, internalOpts);\n  var i, ien, j, jen;\n  var cellsNoOpts = this.iterator('table', function (settings, idx) {\n    var a = [];\n    for (i = 0, ien = rows[idx].length; i < ien; i++) {\n      for (j = 0, jen = columns[idx].length; j < jen; j++) {\n        a.push({\n          row: rows[idx][i],\n          column: columns[idx][j]\n        });\n      }\n    }\n    return a;\n  }, 1);\n\n  // There is currently only one extension which uses a cell selector extension\n  // It is a _major_ performance drag to run this if it isn't needed, so this is\n  // an extension specific check at the moment\n  var cells = opts && opts.selected ? this.cells(cellsNoOpts, opts) : cellsNoOpts;\n  $.extend(cells.selector, {\n    cols: columnSelector,\n    rows: rowSelector,\n    opts: opts\n  });\n  return cells;\n});\n_api_registerPlural('cells().nodes()', 'cell().node()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    var data = settings.aoData[row];\n    return data && data.anCells ? data.anCells[column] : undefined;\n  }, 1);\n});\n_api_register('cells().data()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column);\n  }, 1);\n});\n_api_registerPlural('cells().cache()', 'cell().cache()', function (type) {\n  type = type === 'search' ? '_aFilterData' : '_aSortData';\n  return this.iterator('cell', function (settings, row, column) {\n    return settings.aoData[row][type][column];\n  }, 1);\n});\n_api_registerPlural('cells().render()', 'cell().render()', function (type) {\n  return this.iterator('cell', function (settings, row, column) {\n    return _fnGetCellData(settings, row, column, type);\n  }, 1);\n});\n_api_registerPlural('cells().indexes()', 'cell().index()', function () {\n  return this.iterator('cell', function (settings, row, column) {\n    return {\n      row: row,\n      column: column,\n      columnVisible: _fnColumnIndexToVisible(settings, column)\n    };\n  }, 1);\n});\n_api_registerPlural('cells().invalidate()', 'cell().invalidate()', function (src) {\n  return this.iterator('cell', function (settings, row, column) {\n    _fnInvalidate(settings, row, src, column);\n  });\n});\n_api_register('cell()', function (rowSelector, columnSelector, opts) {\n  return _selector_first(this.cells(rowSelector, columnSelector, opts));\n});\n_api_register('cell().data()', function (data) {\n  var ctx = this.context;\n  var cell = this[0];\n  if (data === undefined) {\n    // Get\n    return ctx.length && cell.length ? _fnGetCellData(ctx[0], cell[0].row, cell[0].column) : undefined;\n  }\n\n  // Set\n  _fnSetCellData(ctx[0], cell[0].row, cell[0].column, data);\n  _fnInvalidate(ctx[0], cell[0].row, 'data', cell[0].column);\n  return this;\n});\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n */ /**\n    * Set the ordering for the table.\n    *\n    * @param {integer} order Column index to sort upon.\n    * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n    * @returns {DataTables.Api} this\n    */ /**\n       * Set the ordering for the table.\n       *\n       * @param {array} order 1D array of sorting information to be applied.\n       * @param {array} [...] Optional additional sorting conditions\n       * @returns {DataTables.Api} this\n       */ /**\n          * Set the ordering for the table.\n          *\n          * @param {array} order 2D array of sorting information to be applied.\n          * @returns {DataTables.Api} this\n          */\n_api_register('order()', function (order, dir) {\n  var ctx = this.context;\n  var args = Array.prototype.slice.call(arguments);\n  if (order === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].aaSorting : undefined;\n  }\n\n  // set\n  if (typeof order === 'number') {\n    // Simple column / direction passed in\n    order = [[order, dir]];\n  } else if (args.length > 1) {\n    // Arguments passed in (list of 1D arrays)\n    order = args;\n  }\n  // otherwise a 2D array was passed in\n\n  return this.iterator('table', function (settings) {\n    settings.aaSorting = Array.isArray(order) ? order.slice() : order;\n  });\n});\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register('order.listener()', function (node, column, callback) {\n  return this.iterator('table', function (settings) {\n    _fnSortAttachListener(settings, node, {}, column, callback);\n  });\n});\n_api_register('order.fixed()', function (set) {\n  if (!set) {\n    var ctx = this.context;\n    var fixed = ctx.length ? ctx[0].aaSortingFixed : undefined;\n    return Array.isArray(fixed) ? {\n      pre: fixed\n    } : fixed;\n  }\n  return this.iterator('table', function (settings) {\n    settings.aaSortingFixed = $.extend(true, {}, set);\n  });\n});\n\n// Order by the selected column(s)\n_api_register(['columns().order()', 'column().order()'], function (dir) {\n  var that = this;\n  if (!dir) {\n    return this.iterator('column', function (settings, idx) {\n      var sort = _fnSortFlatten(settings);\n      for (var i = 0, ien = sort.length; i < ien; i++) {\n        if (sort[i].col === idx) {\n          return sort[i].dir;\n        }\n      }\n      return null;\n    }, 1);\n  } else {\n    return this.iterator('table', function (settings, i) {\n      settings.aaSorting = that[i].map(function (col) {\n        return [col, dir];\n      });\n    });\n  }\n});\n_api_registerPlural('columns().orderable()', 'column().orderable()', function (directions) {\n  return this.iterator('column', function (settings, idx) {\n    var col = settings.aoColumns[idx];\n    return directions ? col.asSorting : col.bSortable;\n  }, 1);\n});\n_api_register('processing()', function (show) {\n  return this.iterator('table', function (ctx) {\n    _fnProcessingDisplay(ctx, show);\n  });\n});\n_api_register('search()', function (input, regex, smart, caseInsen) {\n  var ctx = this.context;\n  if (input === undefined) {\n    // get\n    return ctx.length !== 0 ? ctx[0].oPreviousSearch.search : undefined;\n  }\n\n  // set\n  return this.iterator('table', function (settings) {\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n    if (typeof regex === 'object') {\n      // New style options to pass to the search builder\n      _fnFilterComplete(settings, $.extend(settings.oPreviousSearch, regex, {\n        search: input\n      }));\n    } else {\n      // Compat for the old options\n      _fnFilterComplete(settings, $.extend(settings.oPreviousSearch, {\n        search: input,\n        regex: regex === null ? false : regex,\n        smart: smart === null ? true : smart,\n        caseInsensitive: caseInsen === null ? true : caseInsen\n      }));\n    }\n  });\n});\n_api_register('search.fixed()', function (name, search) {\n  var ret = this.iterator(true, 'table', function (settings) {\n    var fixed = settings.searchFixed;\n    if (!name) {\n      return Object.keys(fixed);\n    } else if (search === undefined) {\n      return fixed[name];\n    } else if (search === null) {\n      delete fixed[name];\n    } else {\n      fixed[name] = search;\n    }\n    return this;\n  });\n  return name !== undefined && search === undefined ? ret[0] : ret;\n});\n_api_registerPlural('columns().search()', 'column().search()', function (input, regex, smart, caseInsen) {\n  return this.iterator('column', function (settings, column) {\n    var preSearch = settings.aoPreSearchCols;\n    if (input === undefined) {\n      // get\n      return preSearch[column].search;\n    }\n\n    // set\n    if (!settings.oFeatures.bFilter) {\n      return;\n    }\n    if (typeof regex === 'object') {\n      // New style options to pass to the search builder\n      $.extend(preSearch[column], regex, {\n        search: input\n      });\n    } else {\n      // Old style (with not all options available)\n      $.extend(preSearch[column], {\n        search: input,\n        regex: regex === null ? false : regex,\n        smart: smart === null ? true : smart,\n        caseInsensitive: caseInsen === null ? true : caseInsen\n      });\n    }\n    _fnFilterComplete(settings, settings.oPreviousSearch);\n  });\n});\n_api_register(['columns().search.fixed()', 'column().search.fixed()'], function (name, search) {\n  var ret = this.iterator(true, 'column', function (settings, colIdx) {\n    var fixed = settings.aoColumns[colIdx].searchFixed;\n    if (!name) {\n      return Object.keys(fixed);\n    } else if (search === undefined) {\n      return fixed[name];\n    } else if (search === null) {\n      delete fixed[name];\n    } else {\n      fixed[name] = search;\n    }\n    return this;\n  });\n  return name !== undefined && search === undefined ? ret[0] : ret;\n});\n/*\n * State API methods\n */\n\n_api_register('state()', function (set, ignoreTime) {\n  // getter\n  if (!set) {\n    return this.context.length ? this.context[0].oSavedState : null;\n  }\n  var setMutate = $.extend(true, {}, set);\n\n  // setter\n  return this.iterator('table', function (settings) {\n    if (ignoreTime !== false) {\n      setMutate.time = +new Date() + 100;\n    }\n    _fnImplementState(settings, setMutate, function () {});\n  });\n});\n_api_register('state.clear()', function () {\n  return this.iterator('table', function (settings) {\n    // Save an empty object\n    settings.fnStateSaveCallback.call(settings.oInstance, settings, {});\n  });\n});\n_api_register('state.loaded()', function () {\n  return this.context.length ? this.context[0].oLoadedState : null;\n});\n_api_register('state.save()', function () {\n  return this.iterator('table', function (settings) {\n    _fnSaveState(settings);\n  });\n});\n\n/**\n * Set the libraries that DataTables uses, or the global objects.\n * Note that the arguments can be either way around (legacy support)\n * and the second is optional. See docs.\n */\nDataTable.use = function (arg1, arg2) {\n  // Reverse arguments for legacy support\n  var module = typeof arg1 === 'string' ? arg2 : arg1;\n  var type = typeof arg2 === 'string' ? arg2 : arg1;\n\n  // Getter\n  if (module === undefined && typeof type === 'string') {\n    switch (type) {\n      case 'lib':\n      case 'jq':\n        return $;\n      case 'win':\n        return window;\n      case 'datetime':\n        return DataTable.DateTime;\n      case 'luxon':\n        return __luxon;\n      case 'moment':\n        return __moment;\n      default:\n        return null;\n    }\n  }\n\n  // Setter\n  if (type === 'lib' || type === 'jq' || module && module.fn && module.fn.jquery) {\n    $ = module;\n  } else if (type == 'win' || module && module.document) {\n    window = module;\n    document = module.document;\n  } else if (type === 'datetime' || module && module.type === 'DateTime') {\n    DataTable.DateTime = module;\n  } else if (type === 'luxon' || module && module.FixedOffsetZone) {\n    __luxon = module;\n  } else if (type === 'moment' || module && module.isMoment) {\n    __moment = module;\n  }\n};\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n  var is = false;\n\n  // Test if the first parameter is a window object\n  if (root && root.document) {\n    window = root;\n    document = root.document;\n  }\n\n  // Test if the second parameter is a jQuery object\n  if (jq && jq.fn && jq.fn.jquery) {\n    $ = jq;\n    is = true;\n  }\n  return is;\n};\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @param {string} [version2=current DataTables version] As above, but optional.\n *   If not given the current DataTables version will be used.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = function (version, version2) {\n  var aThis = version2 ? version2.split('.') : DataTable.version.split('.');\n  var aThat = version.split('.');\n  var iThis, iThat;\n  for (var i = 0, iLen = aThat.length; i < iLen; i++) {\n    iThis = parseInt(aThis[i], 10) || 0;\n    iThat = parseInt(aThat[i], 10) || 0;\n\n    // Parts are the same, keep comparing\n    if (iThis === iThat) {\n      continue;\n    }\n\n    // Parts are different, return immediately\n    return iThis > iThat;\n  }\n  return true;\n};\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = function (table) {\n  var t = $(table).get(0);\n  var is = false;\n  if (table instanceof DataTable.Api) {\n    return true;\n  }\n  $.each(DataTable.settings, function (i, o) {\n    var head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n    var foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n    if (o.nTable === t || head === t || foot === t) {\n      is = true;\n    }\n  });\n  return is;\n};\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = function (visible) {\n  var api = false;\n  if ($.isPlainObject(visible)) {\n    api = visible.api;\n    visible = visible.visible;\n  }\n  var a = DataTable.settings.filter(function (o) {\n    return !visible || visible && $(o.nTable).is(':visible') ? true : false;\n  }).map(function (o) {\n    return o.nTable;\n  });\n  return api ? new _Api(a) : a;\n};\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n/**\n *\n */\n_api_register('$()', function (selector, opts) {\n  var rows = this.rows(opts).nodes(),\n    // Get all rows\n    jqRows = $(rows);\n  return $([].concat(jqRows.filter(selector).toArray(), jqRows.find(selector).toArray()));\n});\n\n// jQuery functions to operate on the tables\n$.each(['on', 'one', 'off'], function (i, key) {\n  _api_register(key + '()', function /* event, handler */\n  () {\n    var args = Array.prototype.slice.call(arguments);\n\n    // Add the `dt` namespace automatically if it isn't already present\n    args[0] = args[0].split(/\\s/).map(function (e) {\n      return !e.match(/\\.dt\\b/) ? e + '.dt' : e;\n    }).join(' ');\n    var inst = $(this.tables().nodes());\n    inst[key].apply(inst, args);\n    return this;\n  });\n});\n_api_register('clear()', function () {\n  return this.iterator('table', function (settings) {\n    _fnClearTable(settings);\n  });\n});\n_api_register('error()', function (msg) {\n  return this.iterator('table', function (settings) {\n    _fnLog(settings, 0, msg);\n  });\n});\n_api_register('settings()', function () {\n  return new _Api(this.context, this.context);\n});\n_api_register('init()', function () {\n  var ctx = this.context;\n  return ctx.length ? ctx[0].oInit : null;\n});\n_api_register('data()', function () {\n  return this.iterator('table', function (settings) {\n    return _pluck(settings.aoData, '_aData');\n  }).flatten();\n});\n_api_register('trigger()', function (name, args, bubbles) {\n  return this.iterator('table', function (settings) {\n    return _fnCallbackFire(settings, null, name, args, bubbles);\n  }).flatten();\n});\n_api_register('ready()', function (fn) {\n  var ctx = this.context;\n\n  // Get status of first table\n  if (!fn) {\n    return ctx.length ? ctx[0]._bInitComplete || false : null;\n  }\n\n  // Function to run either once the table becomes ready or\n  // immediately if it is already ready.\n  return this.tables().every(function () {\n    if (this.context[0]._bInitComplete) {\n      fn.call(this);\n    } else {\n      this.on('init.dt.DT', function () {\n        fn.call(this);\n      });\n    }\n  });\n});\n_api_register('destroy()', function (remove) {\n  remove = remove || false;\n  return this.iterator('table', function (settings) {\n    var classes = settings.oClasses;\n    var table = settings.nTable;\n    var tbody = settings.nTBody;\n    var thead = settings.nTHead;\n    var tfoot = settings.nTFoot;\n    var jqTable = $(table);\n    var jqTbody = $(tbody);\n    var jqWrapper = $(settings.nTableWrapper);\n    var rows = settings.aoData.map(function (r) {\n      return r ? r.nTr : null;\n    });\n    var orderClasses = classes.order;\n\n    // Flag to note that the table is currently being destroyed - no action\n    // should be taken\n    settings.bDestroying = true;\n\n    // Fire off the destroy callbacks for plug-ins etc\n    _fnCallbackFire(settings, \"aoDestroyCallback\", \"destroy\", [settings], true);\n\n    // If not being removed from the document, make all columns visible\n    if (!remove) {\n      new _Api(settings).columns().visible(true);\n    }\n\n    // Blitz all `DT` namespaced events (these are internal events, the\n    // lowercase, `dt` events are user subscribed and they are responsible\n    // for removing them\n    jqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n    $(window).off('.DT-' + settings.sInstance);\n\n    // When scrolling we had to break the table up - restore it\n    if (table != thead.parentNode) {\n      jqTable.children('thead').detach();\n      jqTable.append(thead);\n    }\n    if (tfoot && table != tfoot.parentNode) {\n      jqTable.children('tfoot').detach();\n      jqTable.append(tfoot);\n    }\n    settings.colgroup.remove();\n    settings.aaSorting = [];\n    settings.aaSortingFixed = [];\n    _fnSortingClasses(settings);\n    $('th, td', thead).removeClass(orderClasses.canAsc + ' ' + orderClasses.canDesc + ' ' + orderClasses.isAsc + ' ' + orderClasses.isDesc).css('width', '');\n\n    // Add the TR elements back into the table in their original order\n    jqTbody.children().detach();\n    jqTbody.append(rows);\n    var orig = settings.nTableWrapper.parentNode;\n    var insertBefore = settings.nTableWrapper.nextSibling;\n\n    // Remove the DataTables generated nodes, events and classes\n    var removedMethod = remove ? 'remove' : 'detach';\n    jqTable[removedMethod]();\n    jqWrapper[removedMethod]();\n\n    // If we need to reattach the table to the document\n    if (!remove && orig) {\n      // insertBefore acts like appendChild if !arg[1]\n      orig.insertBefore(table, insertBefore);\n\n      // Restore the width of the original table - was read from the style property,\n      // so we can restore directly to that\n      jqTable.css('width', settings.sDestroyWidth).removeClass(classes.table);\n    }\n\n    /* Remove the settings object from the settings array */\n    var idx = DataTable.settings.indexOf(settings);\n    if (idx !== -1) {\n      DataTable.settings.splice(idx, 1);\n    }\n  });\n});\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each(['column', 'row', 'cell'], function (i, type) {\n  _api_register(type + 's().every()', function (fn) {\n    var opts = this.selector.opts;\n    var api = this;\n    var inst;\n    var counter = 0;\n    return this.iterator('every', function (settings, selectedIdx, tableIdx) {\n      inst = api[type](selectedIdx, opts);\n      if (type === 'cell') {\n        fn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n      } else {\n        fn.call(inst, selectedIdx, tableIdx, counter);\n      }\n      counter++;\n    });\n  });\n});\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register('i18n()', function (token, def, plural) {\n  var ctx = this.context[0];\n  var resolved = _fnGetObjectDataFn(token)(ctx.oLanguage);\n  if (resolved === undefined) {\n    resolved = def;\n  }\n  if ($.isPlainObject(resolved)) {\n    resolved = plural !== undefined && resolved[plural] !== undefined ? resolved[plural] : resolved._;\n  }\n  return typeof resolved === 'string' ? resolved.replace('%d', plural) // nb: plural might be undefined,\n  : resolved;\n});\n\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"2.1.8\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n  /**\n   * Flag to indicate if the filtering should be case insensitive or not\n   */\n  \"caseInsensitive\": true,\n  /**\n   * Applied search term\n   */\n  \"search\": \"\",\n  /**\n   * Flag to indicate if the search term should be interpreted as a\n   * regular expression (true) or not (false) and therefore and special\n   * regex characters escaped.\n   */\n  \"regex\": false,\n  /**\n   * Flag to indicate if DataTables is to use its smart filtering or not.\n   */\n  \"smart\": true,\n  /**\n   * Flag to indicate if DataTables should only trigger a search when\n   * the return key is pressed.\n   */\n  \"return\": false\n};\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n  /**\n   * TR element for the row\n   */\n  \"nTr\": null,\n  /**\n   * Array of TD elements for each row. This is null until the row has been\n   * created.\n   */\n  \"anCells\": null,\n  /**\n   * Data object from the original data source for the row. This is either\n   * an array if using the traditional form of DataTables, or an object if\n   * using mData options. The exact type will depend on the passed in\n   * data from the data source, or will be an array if using DOM a data\n   * source.\n   */\n  \"_aData\": [],\n  /**\n   * Sorting data cache - this array is ostensibly the same length as the\n   * number of columns (although each index is generated only as it is\n   * needed), and holds the data that is used for sorting each column in the\n   * row. We do this cache generation at the start of the sort in order that\n   * the formatting of the sort data need be done only once for each cell\n   * per sort. This array should not be read from or written to by anything\n   * other than the master sorting methods.\n   */\n  \"_aSortData\": null,\n  /**\n   * Per cell filtering data cache. As per the sort data cache, used to\n   * increase the performance of the filtering in DataTables\n   */\n  \"_aFilterData\": null,\n  /**\n   * Filtering data cache. This is the same as the cell filtering cache, but\n   * in this case a string rather than an array. This is easily computed with\n   * a join on `_aFilterData`, but is provided as a cache so the join isn't\n   * needed on every search (memory traded for performance)\n   */\n  \"_sFilterRow\": null,\n  /**\n   * Denote if the original data source was from the DOM, or the data source\n   * object. This is used for invalidating data, so DataTables can\n   * automatically read data from the original source, unless uninstructed\n   * otherwise.\n   */\n  \"src\": null,\n  /**\n   * Index in the aoData array. This saves an indexOf lookup when we have the\n   * object, but want to know the index\n   */\n  \"idx\": -1,\n  /**\n   * Cached display value\n   */\n  displayData: null\n};\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n  /**\n   * Column index.\n   */\n  \"idx\": null,\n  /**\n   * A list of the columns that sorting should occur on when this column\n   * is sorted. That this property is an array allows multi-column sorting\n   * to be defined for a column (for example first name / last name columns\n   * would benefit from this). The values are integers pointing to the\n   * columns to be sorted on (typically it will be a single integer pointing\n   * at itself, but that doesn't need to be the case).\n   */\n  \"aDataSort\": null,\n  /**\n   * Define the sorting directions that are applied to the column, in sequence\n   * as the column is repeatedly sorted upon - i.e. the first value is used\n   * as the sorting direction when the column if first sorted (clicked on).\n   * Sort it again (click again) and it will move on to the next index.\n   * Repeat until loop.\n   */\n  \"asSorting\": null,\n  /**\n   * Flag to indicate if the column is searchable, and thus should be included\n   * in the filtering or not.\n   */\n  \"bSearchable\": null,\n  /**\n   * Flag to indicate if the column is sortable or not.\n   */\n  \"bSortable\": null,\n  /**\n   * Flag to indicate if the column is currently visible in the table or not\n   */\n  \"bVisible\": null,\n  /**\n   * Store for manual type assignment using the `column.type` option. This\n   * is held in store so we can manipulate the column's `sType` property.\n   */\n  \"_sManualType\": null,\n  /**\n   * Flag to indicate if HTML5 data attributes should be used as the data\n   * source for filtering or sorting. True is either are.\n   */\n  \"_bAttrSrc\": false,\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   */\n  \"fnCreatedCell\": null,\n  /**\n   * Function to get data from a cell in a column. You should <b>never</b>\n   * access data directly through _aData internally in DataTables - always use\n   * the method attached to this property. It allows mData to function as\n   * required. This function is automatically assigned by the column\n   * initialisation method\n   */\n  \"fnGetData\": null,\n  /**\n   * Function to set data for a cell in the column. You should <b>never</b>\n   * set the data directly to _aData internally in DataTables - always use\n   * this method. It allows mData to function as required. This function\n   * is automatically assigned by the column initialisation method\n   */\n  \"fnSetData\": null,\n  /**\n   * Property to read the value for the cells in the column from the data\n   * source array / object. If null, then the default content is used, if a\n   * function is given then the return from the function is used.\n   */\n  \"mData\": null,\n  /**\n   * Partner property to mData which is used (only when defined) to get\n   * the data - i.e. it is basically the same as mData, but without the\n   * 'set' option, and also the data fed to it is the result from mData.\n   * This is the rendering method to match the data method of mData.\n   */\n  \"mRender\": null,\n  /**\n   * The class to apply to all TD elements in the table's TBODY for the column\n   */\n  \"sClass\": null,\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   */\n  \"sContentPadding\": null,\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because mData\n   * is set to null, or because the data source itself is null).\n   */\n  \"sDefaultContent\": null,\n  /**\n   * Name for the column, allowing reference to the column by name as well as\n   * by index (needs a lookup to work by name).\n   */\n  \"sName\": null,\n  /**\n   * Custom sorting data type - defines which of the available plug-ins in\n   * afnSortData the custom sorting will use - if any is defined.\n   */\n  \"sSortDataType\": 'std',\n  /**\n   * Class to be applied to the header element when sorting on this column\n   */\n  \"sSortingClass\": null,\n  /**\n   * Title of the column - what is seen in the TH element (nTh).\n   */\n  \"sTitle\": null,\n  /**\n   * Column sorting and filtering type\n   */\n  \"sType\": null,\n  /**\n   * Width of the column\n   */\n  \"sWidth\": null,\n  /**\n   * Width of the column when it was first \"encountered\"\n   */\n  \"sWidthOrig\": null,\n  /** Cached string which is the longest in the column */\n  maxLenString: null,\n  /**\n   * Store for named searches\n   */\n  searchFixed: null\n};\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n  /**\n   * An array of data to use for the table, passed in at initialisation which\n   * will be used in preference to any data which is already in the DOM. This is\n   * particularly useful for constructing tables purely in Javascript, for\n   * example with a custom Ajax call.\n   */\n  \"aaData\": null,\n  /**\n   * If ordering is enabled, then DataTables will perform a first pass sort on\n   * initialisation. You can define which column(s) the sort is performed\n   * upon, and the sorting direction, with this variable. The `sorting` array\n   * should contain an array for each column to be sorted initially containing\n   * the column's index and a direction string ('asc' or 'desc').\n   */\n  \"aaSorting\": [[0, 'asc']],\n  /**\n   * This parameter is basically identical to the `sorting` parameter, but\n   * cannot be overridden by user interaction with the table. What this means\n   * is that you could have a column (visible or hidden) which the sorting\n   * will always be forced on first - any sorting after that (from the user)\n   * will then be performed as required. This can be useful for grouping rows\n   * together.\n   */\n  \"aaSortingFixed\": [],\n  /**\n   * DataTables can be instructed to load data to display in the table from a\n   * Ajax source. This option defines how that Ajax call is made and where to.\n   *\n   * The `ajax` property has three different modes of operation, depending on\n   * how it is defined. These are:\n   *\n   * * `string` - Set the URL from where the data should be loaded from.\n   * * `object` - Define properties for `jQuery.ajax`.\n   * * `function` - Custom data get function\n   *\n   * `string`\n   * --------\n   *\n   * As a string, the `ajax` property simply defines the URL from which\n   * DataTables will load data.\n   *\n   * `object`\n   * --------\n   *\n   * As an object, the parameters in the object are passed to\n   * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n   * of the Ajax request. DataTables has a number of default parameters which\n   * you can override using this option. Please refer to the jQuery\n   * documentation for a full description of the options available, although\n   * the following parameters provide additional options in DataTables or\n   * require special consideration:\n   *\n   * * `data` - As with jQuery, `data` can be provided as an object, but it\n   *   can also be used as a function to manipulate the data DataTables sends\n   *   to the server. The function takes a single parameter, an object of\n   *   parameters with the values that DataTables has readied for sending. An\n   *   object may be returned which will be merged into the DataTables\n   *   defaults, or you can add the items to the object that was passed in and\n   *   not return anything from the function. This supersedes `fnServerParams`\n   *   from DataTables 1.9-.\n   *\n   * * `dataSrc` - By default DataTables will look for the property `data` (or\n   *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n   *   from an Ajax source or for server-side processing - this parameter\n   *   allows that property to be changed. You can use Javascript dotted\n   *   object notation to get a data source for multiple levels of nesting, or\n   *   it my be used as a function. As a function it takes a single parameter,\n   *   the JSON returned from the server, which can be manipulated as\n   *   required, with the returned value being that used by DataTables as the\n   *   data source for the table.\n   *\n   * * `success` - Should not be overridden it is used internally in\n   *   DataTables. To manipulate / transform the data returned by the server\n   *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n   *\n   * `function`\n   * ----------\n   *\n   * As a function, making the Ajax call is left up to yourself allowing\n   * complete control of the Ajax request. Indeed, if desired, a method other\n   * than Ajax could be used to obtain the required data, such as Web storage\n   * or an AIR database.\n   *\n   * The function is given four parameters and no return is required. The\n   * parameters are:\n   *\n   * 1. _object_ - Data to send to the server\n   * 2. _function_ - Callback function that must be executed when the required\n   *    data has been obtained. That data should be passed into the callback\n   *    as the only parameter\n   * 3. _object_ - DataTables settings object for the table\n   */\n  \"ajax\": null,\n  /**\n   * This parameter allows you to readily specify the entries in the length drop\n   * down menu that DataTables shows when pagination is enabled. It can be\n   * either a 1D array of options which will be used for both the displayed\n   * option and the value, or a 2D array which will use the array in the first\n   * position as the value, and the array in the second position as the\n   * displayed options (useful for language strings such as 'All').\n   *\n   * Note that the `pageLength` property will be automatically set to the\n   * first value given in this array, unless `pageLength` is also provided.\n   */\n  \"aLengthMenu\": [10, 25, 50, 100],\n  /**\n   * The `columns` option in the initialisation parameter allows you to define\n   * details about the way individual columns behave. For a full list of\n   * column options that can be set, please see\n   * {@link DataTable.defaults.column}. Note that if you use `columns` to\n   * define your columns, you must have an entry in the array for every single\n   * column that you have in your table (these can be null if you don't which\n   * to specify any options).\n   */\n  \"aoColumns\": null,\n  /**\n   * Very similar to `columns`, `columnDefs` allows you to target a specific\n   * column, multiple columns, or all columns, using the `targets` property of\n   * each object in the array. This allows great flexibility when creating\n   * tables, as the `columnDefs` arrays can be of any length, targeting the\n   * columns you specifically want. `columnDefs` may use any of the column\n   * options available: {@link DataTable.defaults.column}, but it _must_\n   * have `targets` defined in each object in the array. Values in the `targets`\n   * array may be:\n   *   <ul>\n   *     <li>a string - class name will be matched on the TH for the column</li>\n   *     <li>0 or a positive integer - column index counting from the left</li>\n   *     <li>a negative integer - column index counting from the right</li>\n   *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n   *   </ul>\n   */\n  \"aoColumnDefs\": null,\n  /**\n   * Basically the same as `search`, this parameter defines the individual column\n   * filtering state at initialisation time. The array must be of the same size\n   * as the number of columns, and each element be an object with the parameters\n   * `search` and `escapeRegex` (the latter is optional). 'null' is also\n   * accepted and the default will be used.\n   */\n  \"aoSearchCols\": [],\n  /**\n   * Enable or disable automatic column width calculation. This can be disabled\n   * as an optimisation (it takes some time to calculate the widths) if the\n   * tables widths are passed in using `columns`.\n   */\n  \"bAutoWidth\": true,\n  /**\n   * Deferred rendering can provide DataTables with a huge speed boost when you\n   * are using an Ajax or JS data source for the table. This option, when set to\n   * true, will cause DataTables to defer the creation of the table elements for\n   * each row until they are needed for a draw - saving a significant amount of\n   * time.\n   */\n  \"bDeferRender\": true,\n  /**\n   * Replace a DataTable which matches the given selector and replace it with\n   * one which has the properties of the new initialisation object passed. If no\n   * table matches the selector, then the new DataTable will be constructed as\n   * per normal.\n   */\n  \"bDestroy\": false,\n  /**\n   * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n   * that it allows the end user to input multiple words (space separated) and\n   * will match a row containing those words, even if not in the order that was\n   * specified (this allow matching across multiple columns). Note that if you\n   * wish to use filtering in DataTables this must remain 'true' - to remove the\n   * default filtering input box and retain filtering abilities, please use\n   * {@link DataTable.defaults.dom}.\n   */\n  \"bFilter\": true,\n  /**\n   * Used only for compatiblity with DT1\n   * @deprecated\n   */\n  \"bInfo\": true,\n  /**\n   * Used only for compatiblity with DT1\n   * @deprecated\n   */\n  \"bLengthChange\": true,\n  /**\n   * Enable or disable pagination.\n   */\n  \"bPaginate\": true,\n  /**\n   * Enable or disable the display of a 'processing' indicator when the table is\n   * being processed (e.g. a sort). This is particularly useful for tables with\n   * large amounts of data where it can take a noticeable amount of time to sort\n   * the entries.\n   */\n  \"bProcessing\": false,\n  /**\n   * Retrieve the DataTables object for the given selector. Note that if the\n   * table has already been initialised, this parameter will cause DataTables\n   * to simply return the object that has already been set up - it will not take\n   * account of any changes you might have made to the initialisation object\n   * passed to DataTables (setting this parameter to true is an acknowledgement\n   * that you understand this). `destroy` can be used to reinitialise a table if\n   * you need.\n   */\n  \"bRetrieve\": false,\n  /**\n   * When vertical (y) scrolling is enabled, DataTables will force the height of\n   * the table's viewport to the given height at all times (useful for layout).\n   * However, this can look odd when filtering data down to a small data set,\n   * and the footer is left \"floating\" further down. This parameter (when\n   * enabled) will cause DataTables to collapse the table's viewport down when\n   * the result set will fit within the given Y height.\n   */\n  \"bScrollCollapse\": false,\n  /**\n   * Configure DataTables to use server-side processing. Note that the\n   * `ajax` parameter must also be given in order to give DataTables a\n   * source to obtain the required data for each draw.\n   */\n  \"bServerSide\": false,\n  /**\n   * Enable or disable sorting of columns. Sorting of individual columns can be\n   * disabled by the `sortable` option for each column.\n   */\n  \"bSort\": true,\n  /**\n   * Enable or display DataTables' ability to sort multiple columns at the\n   * same time (activated by shift-click by the user).\n   */\n  \"bSortMulti\": true,\n  /**\n   * Allows control over whether DataTables should use the top (true) unique\n   * cell that is found for a single column, or the bottom (false - default).\n   * This is useful when using complex headers.\n   */\n  \"bSortCellsTop\": null,\n  /**\n   * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n   * `sorting\\_3` to the columns which are currently being sorted on. This is\n   * presented as a feature switch as it can increase processing time (while\n   * classes are removed and added) so for large data sets you might want to\n   * turn this off.\n   */\n  \"bSortClasses\": true,\n  /**\n   * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n   * used to save table display information such as pagination information,\n   * display length, filtering and sorting. As such when the end user reloads\n   * the page the display display will match what thy had previously set up.\n   */\n  \"bStateSave\": false,\n  /**\n   * This function is called when a TR element is created (and all TD child\n   * elements have been inserted), or registered if using a DOM source, allowing\n   * manipulation of the TR element (adding classes etc).\n   */\n  \"fnCreatedRow\": null,\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify any aspect you want about the created DOM.\n   */\n  \"fnDrawCallback\": null,\n  /**\n   * Identical to fnHeaderCallback() but for the table footer this function\n   * allows you to modify the table footer on every 'draw' event.\n   */\n  \"fnFooterCallback\": null,\n  /**\n   * When rendering large numbers in the information element for the table\n   * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n   * to have a comma separator for the 'thousands' units (e.g. 1 million is\n   * rendered as \"1,000,000\") to help readability for the end user. This\n   * function will override the default method DataTables uses.\n   */\n  \"fnFormatNumber\": function (toFormat) {\n    return toFormat.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, this.oLanguage.sThousands);\n  },\n  /**\n   * This function is called on every 'draw' event, and allows you to\n   * dynamically modify the header row. This can be used to calculate and\n   * display useful information about the table.\n   */\n  \"fnHeaderCallback\": null,\n  /**\n   * The information element can be used to convey information about the current\n   * state of the table. Although the internationalisation options presented by\n   * DataTables are quite capable of dealing with most customisations, there may\n   * be times where you wish to customise the string further. This callback\n   * allows you to do exactly that.\n   */\n  \"fnInfoCallback\": null,\n  /**\n   * Called when the table has been initialised. Normally DataTables will\n   * initialise sequentially and there will be no need for this function,\n   * however, this does not hold true when using external language information\n   * since that is obtained using an async XHR call.\n   */\n  \"fnInitComplete\": null,\n  /**\n   * Called at the very start of each table draw and can be used to cancel the\n   * draw by returning false, any other return (including undefined) results in\n   * the full draw occurring).\n   */\n  \"fnPreDrawCallback\": null,\n  /**\n   * This function allows you to 'post process' each row after it have been\n   * generated for each table draw, but before it is rendered on screen. This\n   * function might be used for setting the row class name etc.\n   */\n  \"fnRowCallback\": null,\n  /**\n   * Load the table state. With this function you can define from where, and how, the\n   * state of a table is loaded. By default DataTables will load from `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   */\n  \"fnStateLoadCallback\": function (settings) {\n    try {\n      return JSON.parse((settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem('DataTables_' + settings.sInstance + '_' + location.pathname));\n    } catch (e) {\n      return {};\n    }\n  },\n  /**\n   * Callback which allows modification of the saved state prior to loading that state.\n   * This callback is called when the table is loading state from the stored data, but\n   * prior to the settings object being modified by the saved state. Note that for\n   * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n   * a plug-in.\n   */\n  \"fnStateLoadParams\": null,\n  /**\n   * Callback that is called when the state has been loaded from the state saving method\n   * and the DataTables settings object has been modified as a result of the loaded state.\n   */\n  \"fnStateLoaded\": null,\n  /**\n   * Save the table state. This function allows you to define where and how the state\n   * information for the table is stored By default DataTables will use `localStorage`\n   * but you might wish to use a server-side database or cookies.\n   */\n  \"fnStateSaveCallback\": function (settings, data) {\n    try {\n      (settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem('DataTables_' + settings.sInstance + '_' + location.pathname, JSON.stringify(data));\n    } catch (e) {\n      // noop\n    }\n  },\n  /**\n   * Callback which allows modification of the state to be saved. Called when the table\n   * has changed state a new state save is required. This method allows modification of\n   * the state saving object prior to actually doing the save, including addition or\n   * other state properties or modification. Note that for plug-in authors, you should\n   * use the `stateSaveParams` event to save parameters for a plug-in.\n   */\n  \"fnStateSaveParams\": null,\n  /**\n   * Duration for which the saved state information is considered valid. After this period\n   * has elapsed the state will be returned to the default.\n   * Value is given in seconds.\n   */\n  \"iStateDuration\": 7200,\n  /**\n   * Number of rows to display on a single page when using pagination. If\n   * feature enabled (`lengthChange`) then the end user will be able to override\n   * this to a custom setting using a pop-up menu.\n   */\n  \"iDisplayLength\": 10,\n  /**\n   * Define the starting point for data display when using DataTables with\n   * pagination. Note that this parameter is the number of records, rather than\n   * the page number, so if you have 10 records per page and want to start on\n   * the third page, it should be \"20\".\n   */\n  \"iDisplayStart\": 0,\n  /**\n   * By default DataTables allows keyboard navigation of the table (sorting, paging,\n   * and filtering) by adding a `tabindex` attribute to the required elements. This\n   * allows you to tab through the controls and press the enter key to activate them.\n   * The tabindex is default 0, meaning that the tab follows the flow of the document.\n   * You can overrule this using this parameter if you wish. Use a value of -1 to\n   * disable built-in keyboard navigation.\n   */\n  \"iTabIndex\": 0,\n  /**\n   * Classes that DataTables assigns to the various components and features\n   * that it adds to the HTML table. This allows classes to be configured\n   * during initialisation in addition to through the static\n   * {@link DataTable.ext.oStdClasses} object).\n   */\n  \"oClasses\": {},\n  /**\n   * All strings that DataTables uses in the user interface that it creates\n   * are defined in this object, allowing you to modified them individually or\n   * completely replace them all as required.\n   */\n  \"oLanguage\": {\n    /**\n     * Strings that are used for WAI-ARIA labels and controls only (these are not\n     * actually visible on the page, but will be read by screenreaders, and thus\n     * must be internationalised as well).\n     */\n    \"oAria\": {\n      /**\n       * ARIA label that is added to the table headers when the column may be sorted\n       */\n      \"orderable\": \": Activate to sort\",\n      /**\n       * ARIA label that is added to the table headers when the column is currently being sorted\n       */\n      \"orderableReverse\": \": Activate to invert sorting\",\n      /**\n       * ARIA label that is added to the table headers when the column is currently being \n       * sorted and next step is to remove sorting\n       */\n      \"orderableRemove\": \": Activate to remove sorting\",\n      paginate: {\n        first: 'First',\n        last: 'Last',\n        next: 'Next',\n        previous: 'Previous',\n        number: ''\n      }\n    },\n    /**\n     * Pagination string used by DataTables for the built-in pagination\n     * control types.\n     */\n    \"oPaginate\": {\n      /**\n       * Label and character for first page button (Â«)\n       */\n      \"sFirst\": \"\\u00AB\",\n      /**\n       * Last page button (Â»)\n       */\n      \"sLast\": \"\\u00BB\",\n      /**\n       * Next page button (âº)\n       */\n      \"sNext\": \"\\u203A\",\n      /**\n       * Previous page button (â¹)\n       */\n      \"sPrevious\": \"\\u2039\"\n    },\n    /**\n     * Plural object for the data type the table is showing\n     */\n    entries: {\n      _: \"entries\",\n      1: \"entry\"\n    },\n    /**\n     * This string is shown in preference to `zeroRecords` when the table is\n     * empty of data (regardless of filtering). Note that this is an optional\n     * parameter - if it is not given, the value of `zeroRecords` will be used\n     * instead (either the default or given value).\n     */\n    \"sEmptyTable\": \"No data available in table\",\n    /**\n     * This string gives information to the end user about the information\n     * that is current on display on the page. The following tokens can be\n     * used in the string and will be dynamically replaced as the table\n     * display updates. This tokens can be placed anywhere in the string, or\n     * removed as needed by the language requires:\n     *\n     * * `\\_START\\_` - Display index of the first record on the current page\n     * * `\\_END\\_` - Display index of the last record on the current page\n     * * `\\_TOTAL\\_` - Number of records in the table after filtering\n     * * `\\_MAX\\_` - Number of records in the table without filtering\n     * * `\\_PAGE\\_` - Current page number\n     * * `\\_PAGES\\_` - Total number of pages of data in the table\n     */\n    \"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n    /**\n     * Display information string for when the table is empty. Typically the\n     * format of this string should match `info`.\n     */\n    \"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n    /**\n     * When a user filters the information in a table, this string is appended\n     * to the information (`info`) to give an idea of how strong the filtering\n     * is. The variable _MAX_ is dynamically updated.\n     */\n    \"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n    /**\n     * If can be useful to append extra information to the info string at times,\n     * and this variable does exactly that. This information will be appended to\n     * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n     * being used) at all times.\n     */\n    \"sInfoPostFix\": \"\",\n    /**\n     * This decimal place operator is a little different from the other\n     * language options since DataTables doesn't output floating point\n     * numbers, so it won't ever use this for display of a number. Rather,\n     * what this parameter does is modify the sort methods of the table so\n     * that numbers which are in a format which has a character other than\n     * a period (`.`) as a decimal place will be sorted numerically.\n     *\n     * Note that numbers with different decimal places cannot be shown in\n     * the same table and still be sortable, the table must be consistent.\n     * However, multiple different tables on the page can use different\n     * decimal place characters.\n     */\n    \"sDecimal\": \"\",\n    /**\n     * DataTables has a build in number formatter (`formatNumber`) which is\n     * used to format large numbers that are used in the table information.\n     * By default a comma is used, but this can be trivially changed to any\n     * character you wish with this parameter.\n     */\n    \"sThousands\": \",\",\n    /**\n     * Detail the action that will be taken when the drop down menu for the\n     * pagination length option is changed. The '_MENU_' variable is replaced\n     * with a default select list of 10, 25, 50 and 100, and can be replaced\n     * with a custom select box if required.\n     */\n    \"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n    /**\n     * When using Ajax sourced data and during the first draw when DataTables is\n     * gathering the data, this message is shown in an empty row in the table to\n     * indicate to the end user the the data is being loaded. Note that this\n     * parameter is not used when loading data by server-side processing, just\n     * Ajax sourced data with client-side processing.\n     */\n    \"sLoadingRecords\": \"Loading...\",\n    /**\n     * Text which is displayed when the table is processing a user action\n     * (usually a sort command or similar).\n     */\n    \"sProcessing\": \"\",\n    /**\n     * Details the actions that will be taken when the user types into the\n     * filtering input text box. The variable \"_INPUT_\", if used in the string,\n     * is replaced with the HTML text box for the filtering input allowing\n     * control over where it appears in the string. If \"_INPUT_\" is not given\n     * then the input box is appended to the string automatically.\n     */\n    \"sSearch\": \"Search:\",\n    /**\n     * Assign a `placeholder` attribute to the search `input` element\n     *  @type string\n     *  @default \n     *\n     *  @dtopt Language\n     *  @name DataTable.defaults.language.searchPlaceholder\n     */\n    \"sSearchPlaceholder\": \"\",\n    /**\n     * All of the language information can be stored in a file on the\n     * server-side, which DataTables will look up if this parameter is passed.\n     * It must store the URL of the language file, which is in a JSON format,\n     * and the object has the same properties as the oLanguage object in the\n     * initialiser object (i.e. the above parameters). Please refer to one of\n     * the example language files to see how this works in action.\n     */\n    \"sUrl\": \"\",\n    /**\n     * Text shown inside the table records when the is no information to be\n     * displayed after filtering. `emptyTable` is shown when there is simply no\n     * information in the table at all (regardless of filtering).\n     */\n    \"sZeroRecords\": \"No matching records found\"\n  },\n  /** The initial data order is reversed when `desc` ordering */\n  orderDescReverse: true,\n  /**\n   * This parameter allows you to have define the global filtering state at\n   * initialisation time. As an object the `search` parameter must be\n   * defined, but all other parameters are optional. When `regex` is true,\n   * the search string will be treated as a regular expression, when false\n   * (default) it will be treated as a straight string. When `smart`\n   * DataTables will use it's smart filtering methods (to word match at\n   * any point in the data), when false this will not be done.\n   */\n  \"oSearch\": $.extend({}, DataTable.models.oSearch),\n  /**\n   * Table and control layout. This replaces the legacy `dom` option.\n   */\n  layout: {\n    topStart: 'pageLength',\n    topEnd: 'search',\n    bottomStart: 'info',\n    bottomEnd: 'paging'\n  },\n  /**\n   * Legacy DOM layout option\n   */\n  \"sDom\": null,\n  /**\n   * Search delay option. This will throttle full table searches that use the\n   * DataTables provided search input element (it does not effect calls to\n   * `dt-api search()`, providing a delay before the search is made.\n   */\n  \"searchDelay\": null,\n  /**\n   * DataTables features six different built-in options for the buttons to\n   * display for pagination control:\n   *\n   * * `numbers` - Page number buttons only\n   * * `simple` - 'Previous' and 'Next' buttons only\n   * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n   * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n   * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n   * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n   */\n  \"sPaginationType\": \"\",\n  /**\n   * Enable horizontal scrolling. When a table is too wide to fit into a\n   * certain layout, or you have a large number of columns in the table, you\n   * can enable x-scrolling to show the table in a viewport, which can be\n   * scrolled. This property can be `true` which will allow the table to\n   * scroll horizontally when needed, or any CSS unit, or a number (in which\n   * case it will be treated as a pixel measurement). Setting as simply `true`\n   * is recommended.\n   */\n  \"sScrollX\": \"\",\n  /**\n   * This property can be used to force a DataTable to use more width than it\n   * might otherwise do when x-scrolling is enabled. For example if you have a\n   * table which requires to be well spaced, this parameter is useful for\n   * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n   * any CSS unit, or a number (in which case it will be treated as a pixel\n   * measurement).\n   */\n  \"sScrollXInner\": \"\",\n  /**\n   * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n   * to the given height, and enable scrolling for any data which overflows the\n   * current viewport. This can be used as an alternative to paging to display\n   * a lot of data in a small area (although paging and scrolling can both be\n   * enabled at the same time). This property can be any CSS unit, or a number\n   * (in which case it will be treated as a pixel measurement).\n   */\n  \"sScrollY\": \"\",\n  /**\n   * __Deprecated__ The functionality provided by this parameter has now been\n   * superseded by that provided through `ajax`, which should be used instead.\n   *\n   * Set the HTTP method that is used to make the Ajax call for server-side\n   * processing or Ajax sourced data.\n   */\n  \"sServerMethod\": \"GET\",\n  /**\n   * DataTables makes use of renderers when displaying HTML elements for\n   * a table. These renderers can be added or modified by plug-ins to\n   * generate suitable mark-up for a site. For example the Bootstrap\n   * integration plug-in for DataTables uses a paging button renderer to\n   * display pagination buttons in the mark-up required by Bootstrap.\n   *\n   * For further information about the renderers available see\n   * DataTable.ext.renderer\n   */\n  \"renderer\": null,\n  /**\n   * Set the data property name that DataTables should use to get a row's id\n   * to set as the `id` property in the node.\n   */\n  \"rowId\": \"DT_RowId\",\n  /**\n   * Caption value\n   */\n  \"caption\": null,\n  /**\n   * For server-side processing - use the data from the DOM for the first draw\n   */\n  iDeferLoading: null\n};\n_fnHungarianMap(DataTable.defaults);\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n  /**\n   * Define which column(s) an order will occur on for this column. This\n   * allows a column's ordering to take multiple columns into account when\n   * doing a sort or use the data from a different column. For example first\n   * name / last name columns make sense to do a multi-column sort over the\n   * two columns.\n   */\n  \"aDataSort\": null,\n  \"iDataSort\": -1,\n  ariaTitle: '',\n  /**\n   * You can control the default ordering direction, and even alter the\n   * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n   * using this parameter.\n   */\n  \"asSorting\": ['asc', 'desc', ''],\n  /**\n   * Enable or disable filtering on the data in this column.\n   */\n  \"bSearchable\": true,\n  /**\n   * Enable or disable ordering on this column.\n   */\n  \"bSortable\": true,\n  /**\n   * Enable or disable the display of this column.\n   */\n  \"bVisible\": true,\n  /**\n   * Developer definable function that is called whenever a cell is created (Ajax source,\n   * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n   * allowing you to modify the DOM element (add background colour for example) when the\n   * element is available.\n   */\n  \"fnCreatedCell\": null,\n  /**\n   * This property can be used to read data from any data source property,\n   * including deeply nested objects / properties. `data` can be given in a\n   * number of different ways which effect its behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object. Note that\n   *      function notation is recommended for use in `render` rather than\n   *      `data` as it is much simpler to use as a renderer.\n   * * `null` - use the original data source for the row rather than plucking\n   *   data directly from it. This action has effects on two other\n   *   initialisation options:\n   *    * `defaultContent` - When null is given as the `data` option and\n   *      `defaultContent` is specified for the column, the value defined by\n   *      `defaultContent` will be used for the cell.\n   *    * `render` - When null is used for the `data` option and the `render`\n   *      option is specified for the column, the whole data source for the\n   *      row is used for the renderer.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * `{array|object}` The data source for the row\n   *      * `{string}` The type call data requested - this will be 'set' when\n   *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n   *        when gathering data. Note that when `undefined` is given for the\n   *        type DataTables expects to get the raw data for the object back<\n   *      * `{*}` Data to set when the second parameter is 'set'.\n   *    * Return:\n   *      * The return value from the function is not required when 'set' is\n   *        the type of call, but otherwise the return is what will be used\n   *        for the data requested.\n   *\n   * Note that `data` is a getter and setter option. If you just require\n   * formatting of data for output, you will likely want to use `render` which\n   * is simply a getter and thus simpler to use.\n   *\n   * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n   * name change reflects the flexibility of this property and is consistent\n   * with the naming of mRender. If 'mDataProp' is given, then it will still\n   * be used by DataTables, as it automatically maps the old name to the new\n   * if required.\n   */\n  \"mData\": null,\n  /**\n   * This property is the rendering partner to `data` and it is suggested that\n   * when you want to manipulate data for display (including filtering,\n   * sorting etc) without altering the underlying data for the table, use this\n   * property. `render` can be considered to be the the read only companion to\n   * `data` which is read / write (then as such more complex). Like `data`\n   * this option can be given in a number of different ways to effect its\n   * behaviour:\n   *\n   * * `integer` - treated as an array index for the data source. This is the\n   *   default that DataTables uses (incrementally increased for each column).\n   * * `string` - read an object property from the data source. There are\n   *   three 'special' options that can be used in the string to alter how\n   *   DataTables reads the data from the source object:\n   *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n   *      Javascript to read from nested objects, so to can the options\n   *      specified in `data`. For example: `browser.version` or\n   *      `browser.name`. If your object parameter name contains a period, use\n   *      `\\\\` to escape it - i.e. `first\\\\.name`.\n   *    * `[]` - Array notation. DataTables can automatically combine data\n   *      from and array source, joining the data with the characters provided\n   *      between the two brackets. For example: `name[, ]` would provide a\n   *      comma-space separated list from the source array. If no characters\n   *      are provided between the brackets, the original array source is\n   *      returned.\n   *    * `()` - Function notation. Adding `()` to the end of a parameter will\n   *      execute a function of the name given. For example: `browser()` for a\n   *      simple function on the data source, `browser.version()` for a\n   *      function in a nested property or even `browser().version` to get an\n   *      object property if the function called returns an object.\n   * * `object` - use different data for the different data types requested by\n   *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n   *   of the object is the data type the property refers to and the value can\n   *   defined using an integer, string or function using the same rules as\n   *   `render` normally does. Note that an `_` option _must_ be specified.\n   *   This is the default value to use if you haven't specified a value for\n   *   the data type requested by DataTables.\n   * * `function` - the function given will be executed whenever DataTables\n   *   needs to set or get the data for a cell in the column. The function\n   *   takes three parameters:\n   *    * Parameters:\n   *      * {array|object} The data source for the row (based on `data`)\n   *      * {string} The type call data requested - this will be 'filter',\n   *        'display', 'type' or 'sort'.\n   *      * {array|object} The full data source for the row (not based on\n   *        `data`)\n   *    * Return:\n   *      * The return value from the function is what will be used for the\n   *        data requested.\n   */\n  \"mRender\": null,\n  /**\n   * Change the cell type created for the column - either TD cells or TH cells. This\n   * can be useful as TH cells have semantic meaning in the table body, allowing them\n   * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n   */\n  \"sCellType\": \"td\",\n  /**\n   * Class to give to each cell in this column.\n   */\n  \"sClass\": \"\",\n  /**\n   * When DataTables calculates the column widths to assign to each column,\n   * it finds the longest string in each column and then constructs a\n   * temporary table and reads the widths from that. The problem with this\n   * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n   * string - thus the calculation can go wrong (doing it properly and putting\n   * it into an DOM object and measuring that is horribly(!) slow). Thus as\n   * a \"work around\" we provide this option. It will append its value to the\n   * text that is found to be the longest string for the column - i.e. padding.\n   * Generally you shouldn't need this!\n   */\n  \"sContentPadding\": \"\",\n  /**\n   * Allows a default value to be given for a column's data, and will be used\n   * whenever a null data source is encountered (this can be because `data`\n   * is set to null, or because the data source itself is null).\n   */\n  \"sDefaultContent\": null,\n  /**\n   * This parameter is only used in DataTables' server-side processing. It can\n   * be exceptionally useful to know what columns are being displayed on the\n   * client side, and to map these to database fields. When defined, the names\n   * also allow DataTables to reorder information from the server if it comes\n   * back in an unexpected order (i.e. if you switch your columns around on the\n   * client-side, your server-side code does not also need updating).\n   */\n  \"sName\": \"\",\n  /**\n   * Defines a data source type for the ordering which can be used to read\n   * real-time information from the table (updating the internally cached\n   * version) prior to ordering. This allows ordering to occur on user\n   * editable elements such as form inputs.\n   */\n  \"sSortDataType\": \"std\",\n  /**\n   * The title of this column.\n   */\n  \"sTitle\": null,\n  /**\n   * The type allows you to specify how the data for this column will be\n   * ordered. Four types (string, numeric, date and html (which will strip\n   * HTML tags before ordering)) are currently available. Note that only date\n   * formats understood by Javascript's Date() object will be accepted as type\n   * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n   * 'numeric', 'date' or 'html' (by default). Further types can be adding\n   * through plug-ins.\n   */\n  \"sType\": null,\n  /**\n   * Defining the width of the column, this parameter may take any CSS value\n   * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n   * been given a specific width through this interface ensuring that the table\n   * remains readable.\n   */\n  \"sWidth\": null\n};\n_fnHungarianMap(DataTable.defaults.column);\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n */\nDataTable.models.oSettings = {\n  /**\n   * Primary features of DataTables and their enablement state.\n   */\n  \"oFeatures\": {\n    /**\n     * Flag to say if DataTables should automatically try to calculate the\n     * optimum table and columns widths (true) or not (false).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bAutoWidth\": null,\n    /**\n     * Delay the creation of TR and TD elements until they are actually\n     * needed by a driven page draw. This can give a significant speed\n     * increase for Ajax source and Javascript source data, but makes no\n     * difference at all for DOM and server-side processing tables.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bDeferRender\": null,\n    /**\n     * Enable filtering on the table or not. Note that if this is disabled\n     * then there is no filtering at all on the table, including fnFilter.\n     * To just remove the filtering input use sDom and remove the 'f' option.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bFilter\": null,\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    \"bInfo\": true,\n    /**\n     * Used only for compatiblity with DT1\n     * @deprecated\n     */\n    \"bLengthChange\": true,\n    /**\n     * Pagination enabled or not. Note that if this is disabled then length\n     * changing must also be disabled.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bPaginate\": null,\n    /**\n     * Processing indicator enable flag whenever DataTables is enacting a\n     * user request - typically an Ajax request for server-side processing.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bProcessing\": null,\n    /**\n     * Server-side processing enabled flag - when enabled DataTables will\n     * get all data from the server for every draw - there is no filtering,\n     * sorting or paging done on the client-side.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bServerSide\": null,\n    /**\n     * Sorting enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSort\": null,\n    /**\n     * Multi-column sorting\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSortMulti\": null,\n    /**\n     * Apply a class to the columns which are being sorted to provide a\n     * visual highlight or not. This can slow things down when enabled since\n     * there is a lot of DOM interaction.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bSortClasses\": null,\n    /**\n     * State saving enablement flag.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bStateSave\": null\n  },\n  /**\n   * Scrolling settings for a table.\n   */\n  \"oScroll\": {\n    /**\n     * When the table is shorter in height than sScrollY, collapse the\n     * table container down to the height of the table (when true).\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"bCollapse\": null,\n    /**\n     * Width of the scrollbar for the web-browser's platform. Calculated\n     * during table initialisation.\n     */\n    \"iBarWidth\": 0,\n    /**\n     * Viewport width for horizontal scrolling. Horizontal scrolling is\n     * disabled if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"sX\": null,\n    /**\n     * Width to expand the table to when using x-scrolling. Typically you\n     * should not need to use this.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     *  @deprecated\n     */\n    \"sXInner\": null,\n    /**\n     * Viewport height for vertical scrolling. Vertical scrolling is disabled\n     * if an empty string.\n     * Note that this parameter will be set by the initialisation routine. To\n     * set a default use {@link DataTable.defaults}.\n     */\n    \"sY\": null\n  },\n  /**\n   * Language information for the table.\n   */\n  \"oLanguage\": {\n    /**\n     * Information callback function. See\n     * {@link DataTable.defaults.fnInfoCallback}\n     */\n    \"fnInfoCallback\": null\n  },\n  /**\n   * Browser support parameters\n   */\n  \"oBrowser\": {\n    /**\n     * Determine if the vertical scrollbar is on the right or left of the\n     * scrolling container - needed for rtl language layout, although not\n     * all browsers move the scrollbar (Safari).\n     */\n    \"bScrollbarLeft\": false,\n    /**\n     * Browser scrollbar width\n     */\n    \"barWidth\": 0\n  },\n  \"ajax\": null,\n  /**\n   * Array referencing the nodes which are used for the features. The\n   * parameters of this object match what is allowed by sDom - i.e.\n   *   <ul>\n   *     <li>'l' - Length changing</li>\n   *     <li>'f' - Filtering input</li>\n   *     <li>'t' - The table!</li>\n   *     <li>'i' - Information</li>\n   *     <li>'p' - Pagination</li>\n   *     <li>'r' - pRocessing</li>\n   *   </ul>\n   */\n  \"aanFeatures\": [],\n  /**\n   * Store data information - see {@link DataTable.models.oRow} for detailed\n   * information.\n   */\n  \"aoData\": [],\n  /**\n   * Array of indexes which are in the current display (after filtering etc)\n   */\n  \"aiDisplay\": [],\n  /**\n   * Array of indexes for display - no filtering\n   */\n  \"aiDisplayMaster\": [],\n  /**\n   * Map of row ids to data indexes\n   */\n  \"aIds\": {},\n  /**\n   * Store information about each column that is in use\n   */\n  \"aoColumns\": [],\n  /**\n   * Store information about the table's header\n   */\n  \"aoHeader\": [],\n  /**\n   * Store information about the table's footer\n   */\n  \"aoFooter\": [],\n  /**\n   * Store the applied global search information in case we want to force a\n   * research or compare the old search to a new one.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"oPreviousSearch\": {},\n  /**\n   * Store for named searches\n   */\n  searchFixed: {},\n  /**\n   * Store the applied search for each column - see\n   * {@link DataTable.models.oSearch} for the format that is used for the\n   * filtering information for each column.\n   */\n  \"aoPreSearchCols\": [],\n  /**\n   * Sorting that is applied to the table. Note that the inner arrays are\n   * used in the following manner:\n   * <ul>\n   *   <li>Index 0 - column number</li>\n   *   <li>Index 1 - current sorting direction</li>\n   * </ul>\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aaSorting\": null,\n  /**\n   * Sorting that is always applied to the table (i.e. prefixed in front of\n   * aaSorting).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aaSortingFixed\": [],\n  /**\n   * If restoring a table - we should restore its width\n   */\n  \"sDestroyWidth\": 0,\n  /**\n   * Callback functions array for every time a row is inserted (i.e. on a draw).\n   */\n  \"aoRowCallback\": [],\n  /**\n   * Callback functions for the header on each draw.\n   */\n  \"aoHeaderCallback\": [],\n  /**\n   * Callback function for the footer on each draw.\n   */\n  \"aoFooterCallback\": [],\n  /**\n   * Array of callback functions for draw callback functions\n   */\n  \"aoDrawCallback\": [],\n  /**\n   * Array of callback functions for row created function\n   */\n  \"aoRowCreatedCallback\": [],\n  /**\n   * Callback functions for just before the table is redrawn. A return of\n   * false will be used to cancel the draw.\n   */\n  \"aoPreDrawCallback\": [],\n  /**\n   * Callback functions for when the table has been initialised.\n   */\n  \"aoInitComplete\": [],\n  /**\n   * Callbacks for modifying the settings to be stored for state saving, prior to\n   * saving state.\n   */\n  \"aoStateSaveParams\": [],\n  /**\n   * Callbacks for modifying the settings that have been stored for state saving\n   * prior to using the stored values to restore the state.\n   */\n  \"aoStateLoadParams\": [],\n  /**\n   * Callbacks for operating on the settings object once the saved state has been\n   * loaded\n   */\n  \"aoStateLoaded\": [],\n  /**\n   * Cache the table ID for quick access\n   */\n  \"sTableId\": \"\",\n  /**\n   * The TABLE node for the main table\n   */\n  \"nTable\": null,\n  /**\n   * Permanent ref to the thead element\n   */\n  \"nTHead\": null,\n  /**\n   * Permanent ref to the tfoot element - if it exists\n   */\n  \"nTFoot\": null,\n  /**\n   * Permanent ref to the tbody element\n   */\n  \"nTBody\": null,\n  /**\n   * Cache the wrapper node (contains all DataTables controlled elements)\n   */\n  \"nTableWrapper\": null,\n  /**\n   * Indicate if all required information has been read in\n   */\n  \"bInitialised\": false,\n  /**\n   * Information about open rows. Each object in the array has the parameters\n   * 'nTr' and 'nParent'\n   */\n  \"aoOpenRows\": [],\n  /**\n   * Dictate the positioning of DataTables' control elements - see\n   * {@link DataTable.model.oInit.sDom}.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sDom\": null,\n  /**\n   * Search delay (in mS)\n   */\n  \"searchDelay\": null,\n  /**\n   * Which type of pagination should be used.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sPaginationType\": \"two_button\",\n  /**\n   * Number of paging controls on the page. Only used for backwards compatibility\n   */\n  pagingControls: 0,\n  /**\n   * The state duration (for `stateSave`) in seconds.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"iStateDuration\": 0,\n  /**\n   * Array of callback functions for state saving. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the JSON string to save that has been thus far created. Returns\n   *       a JSON string to be inserted into a json object\n   *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   */\n  \"aoStateSave\": [],\n  /**\n   * Array of callback functions for state loading. Each array element is an\n   * object with the following parameters:\n   *   <ul>\n   *     <li>function:fn - function to call. Takes two parameters, oSettings\n   *       and the object stored. May return false to cancel state loading</li>\n   *     <li>string:sName - name of callback</li>\n   *   </ul>\n   */\n  \"aoStateLoad\": [],\n  /**\n   * State that was saved. Useful for back reference\n   */\n  \"oSavedState\": null,\n  /**\n   * State that was loaded. Useful for back reference\n   */\n  \"oLoadedState\": null,\n  /**\n   * Note if draw should be blocked while getting data\n   */\n  \"bAjaxDataGet\": true,\n  /**\n   * The last jQuery XHR object that was used for server-side data gathering.\n   * This can be used for working with the XHR information in one of the\n   * callbacks\n   */\n  \"jqXHR\": null,\n  /**\n   * JSON returned from the server in the last Ajax request\n   */\n  \"json\": undefined,\n  /**\n   * Data submitted as part of the last Ajax request\n   */\n  \"oAjaxData\": undefined,\n  /**\n   * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n   * required).\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"sServerMethod\": null,\n  /**\n   * Format numbers for display.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"fnFormatNumber\": null,\n  /**\n   * List of options that can be used for the user selectable length menu.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"aLengthMenu\": null,\n  /**\n   * Counter for the draws that the table does. Also used as a tracker for\n   * server-side processing\n   */\n  \"iDraw\": 0,\n  /**\n   * Indicate if a redraw is being done - useful for Ajax\n   */\n  \"bDrawing\": false,\n  /**\n   * Draw index (iDraw) of the last error when parsing the returned data\n   */\n  \"iDrawError\": -1,\n  /**\n   * Paging display length\n   */\n  \"_iDisplayLength\": 10,\n  /**\n   * Paging start point - aiDisplay index\n   */\n  \"_iDisplayStart\": 0,\n  /**\n   * Server-side processing - number of records in the result set\n   * (i.e. before filtering), Use fnRecordsTotal rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   */\n  \"_iRecordsTotal\": 0,\n  /**\n   * Server-side processing - number of records in the current display set\n   * (i.e. after filtering). Use fnRecordsDisplay rather than\n   * this property to get the value of the number of records, regardless of\n   * the server-side processing setting.\n   */\n  \"_iRecordsDisplay\": 0,\n  /**\n   * The classes to use for the table\n   */\n  \"oClasses\": {},\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if filtering has been done in the draw. Deprecated in favour of\n   * events.\n   *  @deprecated\n   */\n  \"bFiltered\": false,\n  /**\n   * Flag attached to the settings object so you can check in the draw\n   * callback if sorting has been done in the draw. Deprecated in favour of\n   * events.\n   *  @deprecated\n   */\n  \"bSorted\": false,\n  /**\n   * Indicate that if multiple rows are in the header and there is more than\n   * one unique cell per column, if the top one (true) or bottom one (false)\n   * should be used for sorting / title by DataTables.\n   * Note that this parameter will be set by the initialisation routine. To\n   * set a default use {@link DataTable.defaults}.\n   */\n  \"bSortCellsTop\": null,\n  /**\n   * Initialisation object that is used for the table\n   */\n  \"oInit\": null,\n  /**\n   * Destroy callback functions - for plug-ins to attach themselves to the\n   * destroy so they can clean up markup and events.\n   */\n  \"aoDestroyCallback\": [],\n  /**\n   * Get the number of records in the current record set, before filtering\n   */\n  \"fnRecordsTotal\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsTotal * 1 : this.aiDisplayMaster.length;\n  },\n  /**\n   * Get the number of records in the current record set, after filtering\n   */\n  \"fnRecordsDisplay\": function () {\n    return _fnDataSource(this) == 'ssp' ? this._iRecordsDisplay * 1 : this.aiDisplay.length;\n  },\n  /**\n   * Get the display end point - aiDisplay index\n   */\n  \"fnDisplayEnd\": function () {\n    var len = this._iDisplayLength,\n      start = this._iDisplayStart,\n      calc = start + len,\n      records = this.aiDisplay.length,\n      features = this.oFeatures,\n      paginate = features.bPaginate;\n    if (features.bServerSide) {\n      return paginate === false || len === -1 ? start + records : Math.min(start + len, this._iRecordsDisplay);\n    } else {\n      return !paginate || calc > records || len === -1 ? records : calc;\n    }\n  },\n  /**\n   * The DataTables object for this table\n   */\n  \"oInstance\": null,\n  /**\n   * Unique identifier for each instance of the DataTables object. If there\n   * is an ID on the table node, then it takes that value, otherwise an\n   * incrementing internal counter is used.\n   */\n  \"sInstance\": null,\n  /**\n   * tabindex attribute value that is added to DataTables control elements, allowing\n   * keyboard navigation of the table and its controls.\n   */\n  \"iTabIndex\": 0,\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollHead\": null,\n  /**\n   * DIV container for the footer scrolling table if scrolling\n   */\n  \"nScrollFoot\": null,\n  /**\n   * Last applied sort\n   */\n  \"aLastSort\": [],\n  /**\n   * Stored plug-in instances\n   */\n  \"oPlugins\": {},\n  /**\n   * Function used to get a row's id from the row's data\n   */\n  \"rowIdFn\": null,\n  /**\n   * Data location where to store a row's id\n   */\n  \"rowId\": null,\n  caption: '',\n  captionNode: null,\n  colgroup: null,\n  /** Delay loading of data */\n  deferLoading: null,\n  /** Allow auto type detection */\n  typeDetect: true\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\nvar extPagination = DataTable.ext.pager;\n\n// Paging buttons configuration\n$.extend(extPagination, {\n  simple: function () {\n    return ['previous', 'next'];\n  },\n  full: function () {\n    return ['first', 'previous', 'next', 'last'];\n  },\n  numbers: function () {\n    return ['numbers'];\n  },\n  simple_numbers: function () {\n    return ['previous', 'numbers', 'next'];\n  },\n  full_numbers: function () {\n    return ['first', 'previous', 'numbers', 'next', 'last'];\n  },\n  first_last: function () {\n    return ['first', 'last'];\n  },\n  first_last_numbers: function () {\n    return ['first', 'numbers', 'last'];\n  },\n  // For testing and plug-ins to use\n  _numbers: _pagingNumbers,\n  // Number of number buttons - legacy, use `numbers` option for paging feature\n  numbers_length: 7\n});\n$.extend(true, DataTable.ext.renderer, {\n  pagingButton: {\n    _: function (settings, buttonType, content, active, disabled) {\n      var classes = settings.oClasses.paging;\n      var btnClasses = [classes.button];\n      var btn;\n      if (active) {\n        btnClasses.push(classes.active);\n      }\n      if (disabled) {\n        btnClasses.push(classes.disabled);\n      }\n      if (buttonType === 'ellipsis') {\n        btn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n      } else {\n        btn = $('<button>', {\n          class: btnClasses.join(' '),\n          role: 'link',\n          type: 'button'\n        }).html(content);\n      }\n      return {\n        display: btn,\n        clicker: btn\n      };\n    }\n  },\n  pagingContainer: {\n    _: function (settings, buttons) {\n      // No wrapping element - just append directly to the host\n      return buttons;\n    }\n  }\n});\n\n// Common function to remove new lines, strip HTML and diacritic control\nvar _filterString = function (stripHtml, normalize) {\n  return function (str) {\n    if (_empty(str) || typeof str !== 'string') {\n      return str;\n    }\n    str = str.replace(_re_new_lines, \" \");\n    if (stripHtml) {\n      str = _stripHtml(str);\n    }\n    if (normalize) {\n      str = _normalize(str, false);\n    }\n    return str;\n  };\n};\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\n/**\n * Common logic for moment, luxon or a date action.\n *\n * Happens after __mldObj, so don't need to call `resolveWindowsLibs` again\n */\nfunction __mld(dtLib, momentFn, luxonFn, dateFn, arg1) {\n  if (__moment) {\n    return dtLib[momentFn](arg1);\n  } else if (__luxon) {\n    return dtLib[luxonFn](arg1);\n  }\n  return dateFn ? dtLib[dateFn](arg1) : dtLib;\n}\nvar __mlWarning = false;\nvar __luxon; // Can be assigned in DateTeble.use()\nvar __moment; // Can be assigned in DateTeble.use()\n\n/**\n * \n */\nfunction resolveWindowLibs() {\n  if (window.luxon && !__luxon) {\n    __luxon = window.luxon;\n  }\n  if (window.moment && !__moment) {\n    __moment = window.moment;\n  }\n}\nfunction __mldObj(d, format, locale) {\n  var dt;\n  resolveWindowLibs();\n  if (__moment) {\n    dt = __moment.utc(d, format, locale, true);\n    if (!dt.isValid()) {\n      return null;\n    }\n  } else if (__luxon) {\n    dt = format && typeof d === 'string' ? __luxon.DateTime.fromFormat(d, format) : __luxon.DateTime.fromISO(d);\n    if (!dt.isValid) {\n      return null;\n    }\n    dt.setLocale(locale);\n  } else if (!format) {\n    // No format given, must be ISO\n    dt = new Date(d);\n  } else {\n    if (!__mlWarning) {\n      alert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n    }\n    __mlWarning = true;\n  }\n  return dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper(localeString) {\n  return function (from, to, locale, def) {\n    // Luxon and Moment support\n    // Argument shifting\n    if (arguments.length === 0) {\n      locale = 'en';\n      to = null; // means toLocaleString\n      from = null; // means iso8601\n    } else if (arguments.length === 1) {\n      locale = 'en';\n      to = from;\n      from = null;\n    } else if (arguments.length === 2) {\n      locale = to;\n      to = from;\n      from = null;\n    }\n    var typeName = 'datetime' + (to ? '-' + to : '');\n\n    // Add type detection and sorting specific to this date format - we need to be able to identify\n    // date type columns as such, rather than as numbers in extensions. Hence the need for this.\n    if (!DataTable.ext.type.order[typeName + '-pre']) {\n      DataTable.type(typeName, {\n        detect: function (d) {\n          // The renderer will give the value to type detect as the type!\n          return d === typeName ? typeName : false;\n        },\n        order: {\n          pre: function (d) {\n            // The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n            // `valueOf` which gives milliseconds epoch\n            return d.valueOf();\n          }\n        },\n        className: 'dt-right'\n      });\n    }\n    return function (d, type) {\n      // Allow for a default value\n      if (d === null || d === undefined) {\n        if (def === '--now') {\n          // We treat everything as UTC further down, so no changes are\n          // made, as such need to get the local date / time as if it were\n          // UTC\n          var local = new Date();\n          d = new Date(Date.UTC(local.getFullYear(), local.getMonth(), local.getDate(), local.getHours(), local.getMinutes(), local.getSeconds()));\n        } else {\n          d = '';\n        }\n      }\n      if (type === 'type') {\n        // Typing uses the type name for fast matching\n        return typeName;\n      }\n      if (d === '') {\n        return type !== 'sort' ? '' : __mldObj('0000-01-01 00:00:00', null, locale);\n      }\n\n      // Shortcut. If `from` and `to` are the same, we are using the renderer to\n      // format for ordering, not display - its already in the display format.\n      if (to !== null && from === to && type !== 'sort' && type !== 'type' && !(d instanceof Date)) {\n        return d;\n      }\n      var dt = __mldObj(d, from, locale);\n      if (dt === null) {\n        return d;\n      }\n      if (type === 'sort') {\n        return dt;\n      }\n      var formatted = to === null ? __mld(dt, 'toDate', 'toJSDate', '')[localeString]() : __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n      // XSS protection\n      return type === 'display' ? _escapeHtml(formatted) : formatted;\n    };\n  };\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\nif (window.Intl !== undefined) {\n  try {\n    var num = new Intl.NumberFormat().formatToParts(100000.1);\n    for (var i = 0; i < num.length; i++) {\n      if (num[i].type === 'group') {\n        __thousands = num[i].value;\n      } else if (num[i].type === 'decimal') {\n        __decimal = num[i].value;\n      }\n    }\n  } catch (e) {\n    // noop\n  }\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function (format, locale) {\n  var typeName = 'datetime-' + format;\n  if (!locale) {\n    locale = 'en';\n  }\n  if (!DataTable.ext.type.order[typeName]) {\n    DataTable.type(typeName, {\n      detect: function (d) {\n        var dt = __mldObj(d, format, locale);\n        return d === '' || dt ? typeName : false;\n      },\n      order: {\n        pre: function (d) {\n          return __mldObj(d, format, locale) || 0;\n        }\n      },\n      className: 'dt-right'\n    });\n  }\n};\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\n * This renderer has three overloads:\n *   * 1 parameter:\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n *   * 2 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to. Assumes `en` locale\n *   * 3 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to\n *     * `string` - Locale\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n  date: __mlHelper('toLocaleDateString'),\n  datetime: __mlHelper('toLocaleString'),\n  time: __mlHelper('toLocaleTimeString'),\n  number: function (thousands, decimal, precision, prefix, postfix) {\n    // Auto locale detection\n    if (thousands === null || thousands === undefined) {\n      thousands = __thousands;\n    }\n    if (decimal === null || decimal === undefined) {\n      decimal = __decimal;\n    }\n    return {\n      display: function (d) {\n        if (typeof d !== 'number' && typeof d !== 'string') {\n          return d;\n        }\n        if (d === '' || d === null) {\n          return d;\n        }\n        var negative = d < 0 ? '-' : '';\n        var flo = parseFloat(d);\n        var abs = Math.abs(flo);\n\n        // Scientific notation for large and small numbers\n        if (abs >= 100000000000 || abs < 0.0001 && abs !== 0) {\n          var exp = flo.toExponential(precision).split(/e\\+?/);\n          return exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n        }\n\n        // If NaN then there isn't much formatting that we can do - just\n        // return immediately, escaping any HTML (this was supposed to\n        // be a number after all)\n        if (isNaN(flo)) {\n          return _escapeHtml(d);\n        }\n        flo = flo.toFixed(precision);\n        d = Math.abs(flo);\n        var intPart = parseInt(d, 10);\n        var floatPart = precision ? decimal + (d - intPart).toFixed(precision).substring(2) : '';\n\n        // If zero, then can't have a negative prefix\n        if (intPart === 0 && parseFloat(floatPart) === 0) {\n          negative = '';\n        }\n        return negative + (prefix || '') + intPart.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands) + floatPart + (postfix || '');\n      }\n    };\n  },\n  text: function () {\n    return {\n      display: _escapeHtml,\n      filter: _escapeHtml\n    };\n  }\n};\nvar _extTypes = DataTable.ext.type;\n\n// Get / set type\nDataTable.type = function (name, prop, val) {\n  if (!prop) {\n    return {\n      className: _extTypes.className[name],\n      detect: _extTypes.detect.find(function (fn) {\n        return fn._name === name;\n      }),\n      order: {\n        pre: _extTypes.order[name + '-pre'],\n        asc: _extTypes.order[name + '-asc'],\n        desc: _extTypes.order[name + '-desc']\n      },\n      render: _extTypes.render[name],\n      search: _extTypes.search[name]\n    };\n  }\n  var setProp = function (prop, propVal) {\n    _extTypes[prop][name] = propVal;\n  };\n  var setDetect = function (detect) {\n    // `detect` can be a function or an object - we set a name\n    // property for either - that is used for the detection\n    Object.defineProperty(detect, \"_name\", {\n      value: name\n    });\n    var idx = _extTypes.detect.findIndex(function (item) {\n      return item._name === name;\n    });\n    if (idx === -1) {\n      _extTypes.detect.unshift(detect);\n    } else {\n      _extTypes.detect.splice(idx, 1, detect);\n    }\n  };\n  var setOrder = function (obj) {\n    _extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n    _extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n    _extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n  };\n\n  // prop is optional\n  if (val === undefined) {\n    val = prop;\n    prop = null;\n  }\n  if (prop === 'className') {\n    setProp('className', val);\n  } else if (prop === 'detect') {\n    setDetect(val);\n  } else if (prop === 'order') {\n    setOrder(val);\n  } else if (prop === 'render') {\n    setProp('render', val);\n  } else if (prop === 'search') {\n    setProp('search', val);\n  } else if (!prop) {\n    if (val.className) {\n      setProp('className', val.className);\n    }\n    if (val.detect !== undefined) {\n      setDetect(val.detect);\n    }\n    if (val.order) {\n      setOrder(val.order);\n    }\n    if (val.render !== undefined) {\n      setProp('render', val.render);\n    }\n    if (val.search !== undefined) {\n      setProp('search', val.search);\n    }\n  }\n};\n\n// Get a list of types\nDataTable.types = function () {\n  return _extTypes.detect.map(function (fn) {\n    return fn._name;\n  });\n};\nvar __diacriticSort = function (a, b) {\n  a = a !== null && a !== undefined ? a.toString().toLowerCase() : '';\n  b = b !== null && b !== undefined ? b.toString().toLowerCase() : '';\n\n  // Checked for `navigator.languages` support in `oneOf` so this code can't execute in old\n  // Safari and thus can disable this check\n  // eslint-disable-next-line compat/compat\n  return a.localeCompare(b, navigator.languages[0] || navigator.language, {\n    numeric: true,\n    ignorePunctuation: true\n  });\n};\n\n//\n// Built in data types\n//\n\nDataTable.type('string', {\n  detect: function () {\n    return 'string';\n  },\n  order: {\n    pre: function (a) {\n      // This is a little complex, but faster than always calling toString,\n      // http://jsperf.com/tostring-v-check\n      return _empty(a) && typeof a !== 'boolean' ? '' : typeof a === 'string' ? a.toLowerCase() : !a.toString ? '' : a.toString();\n    }\n  },\n  search: _filterString(false, true)\n});\nDataTable.type('string-utf8', {\n  detect: {\n    allOf: function (d) {\n      return true;\n    },\n    oneOf: function (d) {\n      // At least one data point must contain a non-ASCII character\n      // This line will also check if navigator.languages is supported or not. If not (Safari 10.0-)\n      // this data type won't be supported.\n      // eslint-disable-next-line compat/compat\n      return !_empty(d) && navigator.languages && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n    }\n  },\n  order: {\n    asc: __diacriticSort,\n    desc: function (a, b) {\n      return __diacriticSort(a, b) * -1;\n    }\n  },\n  search: _filterString(false, true)\n});\nDataTable.type('html', {\n  detect: {\n    allOf: function (d) {\n      return _empty(d) || typeof d === 'string' && d.indexOf('<') !== -1;\n    },\n    oneOf: function (d) {\n      // At least one data point must contain a `<`\n      return !_empty(d) && typeof d === 'string' && d.indexOf('<') !== -1;\n    }\n  },\n  order: {\n    pre: function (a) {\n      return _empty(a) ? '' : a.replace ? _stripHtml(a).trim().toLowerCase() : a + '';\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('date', {\n  className: 'dt-type-date',\n  detect: {\n    allOf: function (d) {\n      // V8 tries _very_ hard to make a string passed into `Date.parse()`\n      // valid, so we need to use a regex to restrict date formats. Use a\n      // plug-in for anything other than ISO8601 style strings\n      if (d && !(d instanceof Date) && !_re_date.test(d)) {\n        return null;\n      }\n      var parsed = Date.parse(d);\n      return parsed !== null && !isNaN(parsed) || _empty(d);\n    },\n    oneOf: function (d) {\n      // At least one entry must be a date or a string with a date\n      return d instanceof Date || typeof d === 'string' && _re_date.test(d);\n    }\n  },\n  order: {\n    pre: function (d) {\n      var ts = Date.parse(d);\n      return isNaN(ts) ? -Infinity : ts;\n    }\n  }\n});\nDataTable.type('html-num-fmt', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, true, false);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, true, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_html, _re_formatted_numeric);\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('html-num', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, false, true);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _htmlNumeric(d, decimal, false, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_html);\n    }\n  },\n  search: _filterString(true, true)\n});\nDataTable.type('num-fmt', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, true, true);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, true, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp, _re_formatted_numeric);\n    }\n  }\n});\nDataTable.type('num', {\n  className: 'dt-type-numeric',\n  detect: {\n    allOf: function (d, settings) {\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, false, true);\n    },\n    oneOf: function (d, settings) {\n      // At least one data point must contain a numeric value\n      var decimal = settings.oLanguage.sDecimal;\n      return _isNumber(d, decimal, false, false);\n    }\n  },\n  order: {\n    pre: function (d, s) {\n      var dp = s.oLanguage.sDecimal;\n      return __numericReplace(d, dp);\n    }\n  }\n});\nvar __numericReplace = function (d, decimalPlace, re1, re2) {\n  if (d !== 0 && (!d || d === '-')) {\n    return -Infinity;\n  }\n  var type = typeof d;\n  if (type === 'number' || type === 'bigint') {\n    return d;\n  }\n\n  // If a decimal place other than `.` is used, it needs to be given to the\n  // function so we can detect it and replace with a `.` which is the only\n  // decimal place Javascript recognises - it is not locale aware.\n  if (decimalPlace) {\n    d = _numToDecimal(d, decimalPlace);\n  }\n  if (d.replace) {\n    if (re1) {\n      d = d.replace(re1, '');\n    }\n    if (re2) {\n      d = d.replace(re2, '');\n    }\n  }\n  return d * 1;\n};\n$.extend(true, DataTable.ext.renderer, {\n  footer: {\n    _: function (settings, cell, classes) {\n      cell.addClass(classes.tfoot.cell);\n    }\n  },\n  header: {\n    _: function (settings, cell, classes) {\n      cell.addClass(classes.thead.cell);\n      if (!settings.oFeatures.bSort) {\n        cell.addClass(classes.order.none);\n      }\n      var legacyTop = settings.bSortCellsTop;\n      var headerRows = cell.closest('thead').find('tr');\n      var rowIdx = cell.parent().index();\n\n      // Conditions to not apply the ordering icons\n      if (\n      // Cells and rows which have the attribute to disable the icons\n      cell.attr('data-dt-order') === 'disable' || cell.parent().attr('data-dt-order') === 'disable' ||\n      // Legacy support for `orderCellsTop`. If it is set, then cells\n      // which are not in the top or bottom row of the header (depending\n      // on the value) do not get the sorting classes applied to them\n      legacyTop === true && rowIdx !== 0 || legacyTop === false && rowIdx !== headerRows.length - 1) {\n        return;\n      }\n\n      // No additional mark-up required\n      // Attach a sort listener to update on sort - note that using the\n      // `DT` namespace will allow the event to be removed automatically\n      // on destroy, while the `dt` namespaced event is the one we are\n      // listening for\n      $(settings.nTable).on('order.dt.DT column-visibility.dt.DT', function (e, ctx) {\n        if (settings !== ctx) {\n          // need to check this this is the host\n          return; // table, not a nested one\n        }\n        var sorting = ctx.sortDetails;\n        if (!sorting) {\n          return;\n        }\n        var i;\n        var orderClasses = classes.order;\n        var columns = ctx.api.columns(cell);\n        var col = settings.aoColumns[columns.flatten()[0]];\n        var orderable = columns.orderable().includes(true);\n        var ariaType = '';\n        var indexes = columns.indexes();\n        var sortDirs = columns.orderable(true).flatten();\n        var orderedColumns = _pluck(sorting, 'col');\n        cell.removeClass(orderClasses.isAsc + ' ' + orderClasses.isDesc).toggleClass(orderClasses.none, !orderable).toggleClass(orderClasses.canAsc, orderable && sortDirs.includes('asc')).toggleClass(orderClasses.canDesc, orderable && sortDirs.includes('desc'));\n\n        // Determine if all of the columns that this cell covers are included in the\n        // current ordering\n        var isOrdering = true;\n        for (i = 0; i < indexes.length; i++) {\n          if (!orderedColumns.includes(indexes[i])) {\n            isOrdering = false;\n          }\n        }\n        if (isOrdering) {\n          // Get the ordering direction for the columns under this cell\n          // Note that it is possible for a cell to be asc and desc sorting\n          // (column spanning cells)\n          var orderDirs = columns.order();\n          cell.addClass(orderDirs.includes('asc') ? orderClasses.isAsc : '' + orderDirs.includes('desc') ? orderClasses.isDesc : '');\n        }\n\n        // Find the first visible column that has ordering applied to it - it get's\n        // the aria information, as the ARIA spec says that only one column should\n        // be marked with aria-sort\n        var firstVis = -1; // column index\n\n        for (i = 0; i < orderedColumns.length; i++) {\n          if (settings.aoColumns[orderedColumns[i]].bVisible) {\n            firstVis = orderedColumns[i];\n            break;\n          }\n        }\n        if (indexes[0] == firstVis) {\n          var firstSort = sorting[0];\n          var sortOrder = col.asSorting;\n          cell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\n\n          // Determine if the next click will remove sorting or change the sort\n          ariaType = !sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n        } else {\n          cell.removeAttr('aria-sort');\n        }\n        cell.attr('aria-label', orderable ? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType) : col.ariaTitle);\n\n        // Make the headers tab-able for keyboard navigation\n        if (orderable) {\n          cell.find('.dt-column-title').attr('role', 'button');\n          cell.attr('tabindex', 0);\n        }\n      });\n    }\n  },\n  layout: {\n    _: function (settings, container, items) {\n      var classes = settings.oClasses.layout;\n      var row = $('<div/>').attr('id', items.id || null).addClass(items.className || classes.row).appendTo(container);\n      $.each(items, function (key, val) {\n        if (key === 'id' || key === 'className') {\n          return;\n        }\n        var klass = '';\n        if (val.table) {\n          row.addClass(classes.tableRow);\n          klass += classes.tableCell + ' ';\n        }\n        if (key === 'start') {\n          klass += classes.start;\n        } else if (key === 'end') {\n          klass += classes.end;\n        } else {\n          klass += classes.full;\n        }\n        $('<div/>').attr({\n          id: val.id || null,\n          \"class\": val.className ? val.className : classes.cell + ' ' + klass\n        }).append(val.contents).appendTo(row);\n      });\n    }\n  }\n});\nDataTable.feature = {};\n\n// Third parameter is internal only!\nDataTable.feature.register = function (name, cb, legacy) {\n  DataTable.ext.features[name] = cb;\n  if (legacy) {\n    _ext.feature.push({\n      cFeature: legacy,\n      fnInit: cb\n    });\n  }\n};\nfunction _divProp(el, prop, val) {\n  if (val) {\n    el[prop] = val;\n  }\n}\nDataTable.feature.register('div', function (settings, opts) {\n  var n = $('<div>')[0];\n  if (opts) {\n    _divProp(n, 'className', opts.className);\n    _divProp(n, 'id', opts.id);\n    _divProp(n, 'innerHTML', opts.html);\n    _divProp(n, 'textContent', opts.text);\n  }\n  return n;\n});\nDataTable.feature.register('info', function (settings, opts) {\n  // For compatibility with the legacy `info` top level option\n  if (!settings.oFeatures.bInfo) {\n    return null;\n  }\n  var lang = settings.oLanguage,\n    tid = settings.sTableId,\n    n = $('<div/>', {\n      'class': settings.oClasses.info.container\n    });\n  opts = $.extend({\n    callback: lang.fnInfoCallback,\n    empty: lang.sInfoEmpty,\n    postfix: lang.sInfoPostFix,\n    search: lang.sInfoFiltered,\n    text: lang.sInfo\n  }, opts);\n\n  // Update display on each draw\n  settings.aoDrawCallback.push(function (s) {\n    _fnUpdateInfo(s, opts, n);\n  });\n\n  // For the first info display in the table, we add a callback and aria information.\n  if (!settings._infoEl) {\n    n.attr({\n      'aria-live': 'polite',\n      id: tid + '_info',\n      role: 'status'\n    });\n\n    // Table is described by our info div\n    $(settings.nTable).attr('aria-describedby', tid + '_info');\n    settings._infoEl = n;\n  }\n  return n;\n}, 'i');\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo(settings, opts, node) {\n  var start = settings._iDisplayStart + 1,\n    end = settings.fnDisplayEnd(),\n    max = settings.fnRecordsTotal(),\n    total = settings.fnRecordsDisplay(),\n    out = total ? opts.text : opts.empty;\n  if (total !== max) {\n    // Record set after filtering\n    out += ' ' + opts.search;\n  }\n\n  // Convert the macros\n  out += opts.postfix;\n  out = _fnMacros(settings, out);\n  if (opts.callback) {\n    out = opts.callback.call(settings.oInstance, settings, start, end, max, total, out);\n  }\n  node.html(out);\n  _fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n}\nvar __searchCounter = 0;\n\n// opts\n// - text\n// - placeholder\nDataTable.feature.register('search', function (settings, opts) {\n  // Don't show the input if filtering isn't available on the table\n  if (!settings.oFeatures.bFilter) {\n    return null;\n  }\n  var classes = settings.oClasses.search;\n  var tableId = settings.sTableId;\n  var language = settings.oLanguage;\n  var previousSearch = settings.oPreviousSearch;\n  var input = '<input type=\"search\" class=\"' + classes.input + '\"/>';\n  opts = $.extend({\n    placeholder: language.sSearchPlaceholder,\n    processing: false,\n    text: language.sSearch\n  }, opts);\n\n  // The _INPUT_ is optional - is appended if not present\n  if (opts.text.indexOf('_INPUT_') === -1) {\n    opts.text += '_INPUT_';\n  }\n  opts.text = _fnMacros(settings, opts.text);\n\n  // We can put the <input> outside of the label if it is at the start or end\n  // which helps improve accessability (not all screen readers like implicit\n  // for elements).\n  var end = opts.text.match(/_INPUT_$/);\n  var start = opts.text.match(/^_INPUT_/);\n  var removed = opts.text.replace(/_INPUT_/, '');\n  var str = '<label>' + opts.text + '</label>';\n  if (start) {\n    str = '_INPUT_<label>' + removed + '</label>';\n  } else if (end) {\n    str = '<label>' + removed + '</label>_INPUT_';\n  }\n  var filter = $('<div>').addClass(classes.container).append(str.replace(/_INPUT_/, input));\n\n  // add for and id to label and input\n  filter.find('label').attr('for', 'dt-search-' + __searchCounter);\n  filter.find('input').attr('id', 'dt-search-' + __searchCounter);\n  __searchCounter++;\n  var searchFn = function (event) {\n    var val = this.value;\n    if (previousSearch.return && event.key !== \"Enter\") {\n      return;\n    }\n\n    /* Now do the filter */\n    if (val != previousSearch.search) {\n      _fnProcessingRun(settings, opts.processing, function () {\n        previousSearch.search = val;\n        _fnFilterComplete(settings, previousSearch);\n\n        // Need to redraw, without resorting\n        settings._iDisplayStart = 0;\n        _fnDraw(settings);\n      });\n    }\n  };\n  var searchDelay = settings.searchDelay !== null ? settings.searchDelay : 0;\n  var jqFilter = $('input', filter).val(previousSearch.search).attr('placeholder', opts.placeholder).on('keyup.DT search.DT input.DT paste.DT cut.DT', searchDelay ? DataTable.util.debounce(searchFn, searchDelay) : searchFn).on('mouseup.DT', function (e) {\n    // Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n    // on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n    // checks the value to see if it has changed. In other browsers it won't have.\n    setTimeout(function () {\n      searchFn.call(jqFilter[0], e);\n    }, 10);\n  }).on('keypress.DT', function (e) {\n    /* Prevent form submission */\n    if (e.keyCode == 13) {\n      return false;\n    }\n  }).attr('aria-controls', tableId);\n\n  // Update the input elements whenever the table is filtered\n  $(settings.nTable).on('search.dt.DT', function (ev, s) {\n    if (settings === s && jqFilter[0] !== document.activeElement) {\n      jqFilter.val(typeof previousSearch.search !== 'function' ? previousSearch.search : '');\n    }\n  });\n  return filter;\n}, 'f');\n\n// opts\n// - type - button configuration\n// - buttons - number of buttons to show - must be odd\nDataTable.feature.register('paging', function (settings, opts) {\n  // Don't show the paging input if the table doesn't have paging enabled\n  if (!settings.oFeatures.bPaginate) {\n    return null;\n  }\n  opts = $.extend({\n    buttons: DataTable.ext.pager.numbers_length,\n    type: settings.sPaginationType,\n    boundaryNumbers: true,\n    firstLast: true,\n    previousNext: true,\n    numbers: true\n  }, opts);\n  var host = $('<div/>').addClass(settings.oClasses.paging.container + (opts.type ? ' paging_' + opts.type : '')).append($('<nav>').attr('aria-label', 'pagination').addClass(settings.oClasses.paging.nav));\n  var draw = function () {\n    _pagingDraw(settings, host.children(), opts);\n  };\n  settings.aoDrawCallback.push(draw);\n\n  // Responsive redraw of paging control\n  $(settings.nTable).on('column-sizing.dt.DT', draw);\n  return host;\n}, 'p');\n\n/**\n * Dynamically create the button type array based on the configuration options.\n * This will only happen if the paging type is not defined.\n */\nfunction _pagingDynamic(opts) {\n  var out = [];\n  if (opts.numbers) {\n    out.push('numbers');\n  }\n  if (opts.previousNext) {\n    out.unshift('previous');\n    out.push('next');\n  }\n  if (opts.firstLast) {\n    out.unshift('first');\n    out.push('last');\n  }\n  return out;\n}\nfunction _pagingDraw(settings, host, opts) {\n  if (!settings._bInitComplete) {\n    return;\n  }\n  var plugin = opts.type ? DataTable.ext.pager[opts.type] : _pagingDynamic,\n    aria = settings.oLanguage.oAria.paginate || {},\n    start = settings._iDisplayStart,\n    len = settings._iDisplayLength,\n    visRecords = settings.fnRecordsDisplay(),\n    all = len === -1,\n    page = all ? 0 : Math.ceil(start / len),\n    pages = all ? 1 : Math.ceil(visRecords / len),\n    buttons = [],\n    buttonEls = [],\n    buttonsNested = plugin(opts).map(function (val) {\n      return val === 'numbers' ? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers) : val;\n    });\n\n  // .flat() would be better, but not supported in old Safari\n  buttons = buttons.concat.apply(buttons, buttonsNested);\n  for (var i = 0; i < buttons.length; i++) {\n    var button = buttons[i];\n    var btnInfo = _pagingButtonInfo(settings, button, page, pages);\n    var btn = _fnRenderer(settings, 'pagingButton')(settings, button, btnInfo.display, btnInfo.active, btnInfo.disabled);\n    var ariaLabel = typeof button === 'string' ? aria[button] : aria.number ? aria.number + (button + 1) : null;\n\n    // Common attributes\n    $(btn.clicker).attr({\n      'aria-controls': settings.sTableId,\n      'aria-disabled': btnInfo.disabled ? 'true' : null,\n      'aria-current': btnInfo.active ? 'page' : null,\n      'aria-label': ariaLabel,\n      'data-dt-idx': button,\n      'tabIndex': btnInfo.disabled ? -1 : settings.iTabIndex ? settings.iTabIndex : null // `0` doesn't need a tabIndex since it is the default\n    });\n    if (typeof button !== 'number') {\n      $(btn.clicker).addClass(button);\n    }\n    _fnBindAction(btn.clicker, {\n      action: button\n    }, function (e) {\n      e.preventDefault();\n      _fnPageChange(settings, e.data.action, true);\n    });\n    buttonEls.push(btn.display);\n  }\n  var wrapped = _fnRenderer(settings, 'pagingContainer')(settings, buttonEls);\n  var activeEl = host.find(document.activeElement).data('dt-idx');\n  host.empty().append(wrapped);\n  if (activeEl !== undefined) {\n    host.find('[data-dt-idx=' + activeEl + ']').trigger('focus');\n  }\n\n  // Responsive - check if the buttons are over two lines based on the\n  // height of the buttons and the container.\n  if (buttonEls.length &&\n  // any buttons\n  opts.buttons > 1 &&\n  // prevent infinite\n  $(host).height() >= $(buttonEls[0]).outerHeight() * 2 - 10) {\n    _pagingDraw(settings, host, $.extend({}, opts, {\n      buttons: opts.buttons - 2\n    }));\n  }\n}\n\n/**\n * Get properties for a button based on the current paging state of the table\n *\n * @param {*} settings DT settings object\n * @param {*} button The button type in question\n * @param {*} page Table's current page\n * @param {*} pages Number of pages\n * @returns Info object\n */\nfunction _pagingButtonInfo(settings, button, page, pages) {\n  var lang = settings.oLanguage.oPaginate;\n  var o = {\n    display: '',\n    active: false,\n    disabled: false\n  };\n  switch (button) {\n    case 'ellipsis':\n      o.display = '&#x2026;';\n      o.disabled = true;\n      break;\n    case 'first':\n      o.display = lang.sFirst;\n      if (page === 0) {\n        o.disabled = true;\n      }\n      break;\n    case 'previous':\n      o.display = lang.sPrevious;\n      if (page === 0) {\n        o.disabled = true;\n      }\n      break;\n    case 'next':\n      o.display = lang.sNext;\n      if (pages === 0 || page === pages - 1) {\n        o.disabled = true;\n      }\n      break;\n    case 'last':\n      o.display = lang.sLast;\n      if (pages === 0 || page === pages - 1) {\n        o.disabled = true;\n      }\n      break;\n    default:\n      if (typeof button === 'number') {\n        o.display = settings.fnFormatNumber(button + 1);\n        if (page === button) {\n          o.active = true;\n        }\n      }\n      break;\n  }\n  return o;\n}\n\n/**\n * Compute what number buttons to show in the paging control\n *\n * @param {*} page Current page\n * @param {*} pages Total number of pages\n * @param {*} buttons Target number of number buttons\n * @param {boolean} addFirstLast Indicate if page 1 and end should be included\n * @returns Buttons to show\n */\nfunction _pagingNumbers(page, pages, buttons, addFirstLast) {\n  var numbers = [],\n    half = Math.floor(buttons / 2),\n    before = addFirstLast ? 2 : 1,\n    after = addFirstLast ? 1 : 0;\n  if (pages <= buttons) {\n    numbers = _range(0, pages);\n  } else if (buttons === 1) {\n    // Single button - current page only\n    numbers = [page];\n  } else if (buttons === 3) {\n    // Special logic for just three buttons\n    if (page <= 1) {\n      numbers = [0, 1, 'ellipsis'];\n    } else if (page >= pages - 2) {\n      numbers = _range(pages - 2, pages);\n      numbers.unshift('ellipsis');\n    } else {\n      numbers = ['ellipsis', page, 'ellipsis'];\n    }\n  } else if (page <= half) {\n    numbers = _range(0, buttons - before);\n    numbers.push('ellipsis');\n    if (addFirstLast) {\n      numbers.push(pages - 1);\n    }\n  } else if (page >= pages - 1 - half) {\n    numbers = _range(pages - (buttons - before), pages);\n    numbers.unshift('ellipsis');\n    if (addFirstLast) {\n      numbers.unshift(0);\n    }\n  } else {\n    numbers = _range(page - half + before, page + half - after);\n    numbers.push('ellipsis');\n    numbers.unshift('ellipsis');\n    if (addFirstLast) {\n      numbers.push(pages - 1);\n      numbers.unshift(0);\n    }\n  }\n  return numbers;\n}\nvar __lengthCounter = 0;\n\n// opts\n// - menu\n// - text\nDataTable.feature.register('pageLength', function (settings, opts) {\n  var features = settings.oFeatures;\n\n  // For compatibility with the legacy `pageLength` top level option\n  if (!features.bPaginate || !features.bLengthChange) {\n    return null;\n  }\n  opts = $.extend({\n    menu: settings.aLengthMenu,\n    text: settings.oLanguage.sLengthMenu\n  }, opts);\n  var classes = settings.oClasses.length,\n    tableId = settings.sTableId,\n    menu = opts.menu,\n    lengths = [],\n    language = [],\n    i;\n\n  // Options can be given in a number of ways\n  if (Array.isArray(menu[0])) {\n    // Old 1.x style - 2D array\n    lengths = menu[0];\n    language = menu[1];\n  } else {\n    for (i = 0; i < menu.length; i++) {\n      // An object with different label and value\n      if ($.isPlainObject(menu[i])) {\n        lengths.push(menu[i].value);\n        language.push(menu[i].label);\n      } else {\n        // Or just a number to display and use\n        lengths.push(menu[i]);\n        language.push(menu[i]);\n      }\n    }\n  }\n\n  // We can put the <select> outside of the label if it is at the start or\n  // end which helps improve accessability (not all screen readers like\n  // implicit for elements).\n  var end = opts.text.match(/_MENU_$/);\n  var start = opts.text.match(/^_MENU_/);\n  var removed = opts.text.replace(/_MENU_/, '');\n  var str = '<label>' + opts.text + '</label>';\n  if (start) {\n    str = '_MENU_<label>' + removed + '</label>';\n  } else if (end) {\n    str = '<label>' + removed + '</label>_MENU_';\n  }\n\n  // Wrapper element - use a span as a holder for where the select will go\n  var tmpId = 'tmp-' + +new Date();\n  var div = $('<div/>').addClass(classes.container).append(str.replace('_MENU_', '<span id=\"' + tmpId + '\"></span>'));\n\n  // Save text node content for macro updating\n  var textNodes = [];\n  Array.from(div.find('label')[0].childNodes).forEach(function (el) {\n    if (el.nodeType === Node.TEXT_NODE) {\n      textNodes.push({\n        el: el,\n        text: el.textContent\n      });\n    }\n  });\n\n  // Update the label text in case it has an entries value\n  var updateEntries = function (len) {\n    textNodes.forEach(function (node) {\n      node.el.textContent = _fnMacros(settings, node.text, len);\n    });\n  };\n\n  // Next, the select itself, along with the options\n  var select = $('<select/>', {\n    'name': tableId + '_length',\n    'aria-controls': tableId,\n    'class': classes.select\n  });\n  for (i = 0; i < lengths.length; i++) {\n    select[0][i] = new Option(typeof language[i] === 'number' ? settings.fnFormatNumber(language[i]) : language[i], lengths[i]);\n  }\n\n  // add for and id to label and input\n  div.find('label').attr('for', 'dt-length-' + __lengthCounter);\n  select.attr('id', 'dt-length-' + __lengthCounter);\n  __lengthCounter++;\n\n  // Swap in the select list\n  div.find('#' + tmpId).replaceWith(select);\n\n  // Can't use `select` variable as user might provide their own and the\n  // reference is broken by the use of outerHTML\n  $('select', div).val(settings._iDisplayLength).on('change.DT', function () {\n    _fnLengthChange(settings, $(this).val());\n    _fnDraw(settings);\n  });\n\n  // Update node value whenever anything changes the table's length\n  $(settings.nTable).on('length.dt.DT', function (e, s, len) {\n    if (settings === s) {\n      $('select', div).val(len);\n\n      // Resolve plurals in the text for the new length\n      updateEntries(len);\n    }\n  });\n  updateEntries(settings._iDisplayLength);\n  return div;\n}, 'l');\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function (opts) {\n  return $(this).dataTable(opts).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each(DataTable, function (prop, val) {\n  $.fn.DataTable[prop] = val;\n});\nexport default DataTable;","map":{"version":3,"names":["jQuery","$","DataTable","selector","options","factory","_that","emptyInit","undefined","len","length","api","_Api","each","o","oInit","_fnExtend","i","iLen","sId","getAttribute","defaults","$this","nodeName","toLowerCase","_fnLog","trigger","_fnCompatOpts","_fnCompatCols","column","_fnCamelToHungarian","extend","data","allSettings","settings","s","nTable","nTHead","parentNode","nTFoot","bRetrieve","bDestroy","oInstance","Api","destroy","sTableId","id","splice","ext","_unique","oSettings","models","style","width","colgroup","prependTo","fastData","row","type","_fnGetCellData","push","dataTable","aLengthMenu","iDisplayLength","Array","isArray","isPlainObject","value","_fnMap","oFeatures","oScroll","oLanguage","_fnCallbackReg","fnDrawCallback","fnStateSaveParams","fnStateLoadParams","fnStateLoaded","fnRowCallback","fnCreatedRow","fnHeaderCallback","fnFooterCallback","fnInitComplete","fnPreDrawCallback","rowIdFn","_fnGetObjectDataFn","rowId","_fnBrowserDetect","oClasses","classes","addClass","table","bPaginate","iDisplayStart","iInitDisplayStart","_iDisplayStart","defer","iDeferLoading","deferLoading","tmp","_iRecordsDisplay","_iRecordsTotal","columnsInit","thead","getElementsByTagName","initHeaderLayout","_fnDetectHeader","aoColumns","_fnAddColumn","_fnApplyColumnDefs","aoColumnDefs","iCol","oDef","_fnColumnOptions","rowOne","children","find","eq","a","cell","name","col","mData","sort","filter","_","_isArrayHost","_fnSaveState","features","bStateSave","aaSorting","sorting","asSorting","_fnSortingClasses","bSorted","_fnDataSource","bDeferRender","caption","appendTo","html","_captionSide","css","captionNode","tbody","insertAfter","nTBody","tfoot","aiDisplay","aiDisplayMaster","slice","bInitialised","sUrl","ajax","dataType","url","success","json","_fnCallbackFire","_fnInitialise","error","_ext","buttons","builder","errMode","feature","search","legacy","pager","renderer","pageButton","header","order","className","detect","render","fnVersionCheck","iApiIndex","sVersion","version","afnFiltering","aTypes","ofnSearch","oSort","afnSortData","aoFeatures","oStdClasses","oPagination","container","empty","info","layout","tableRow","tableCell","start","end","full","select","canAsc","canDesc","isAsc","isDesc","none","position","processing","scrolling","body","footer","self","inner","input","paging","active","button","disabled","nav","_api_register","_api_registerPlural","_re_dic","_re_new_lines","_re_html","_max_str_len","Math","pow","_re_date","_re_escape_regex","RegExp","join","_re_formatted_numeric","_empty","d","_intVal","integer","parseInt","isNaN","isFinite","_numToDecimal","num","decimalPoint","_fnEscapeRegex","replace","_isNumber","formatted","allowEmpty","strType","parseFloat","_isHtml","_htmlNumeric","match","_stripHtml","_pluck","prop","prop2","out","ien","_pluck_order","_range","_removeEmpty","Error","previous","_escapeHtml","_normalize","str","both","res","normalize","_areAllUnique","src","sorted","last","from","Set","val","j","k","again","_flatten","_addClass","el","split","forEach","n","classList","add","util","diacritics","mixed","debounce","fn","timeout","timer","that","args","arguments","clearTimeout","setTimeout","apply","throttle","freq","frequency","now","Date","escapeRegex","set","source","meta","indexOf","setData","_fnSplitObjNotation","b","aLast","arrayNotation","funcNotation","innerSrc","__reArray","__reFn","jLen","get","key","t","fetchData","substring","stripHtml","escapeHtml","unique","_fnHungarianMap","hungarian","newKey","map","_hungarianMap","user","force","hungarianKey","charAt","_fnCompatMap","knew","old","init","sScrollX","scrollX","searchCols","aoSearchCols","oSearch","serverSide","searchDelay","dataSort","aDataSort","__browser","browser","top","left","window","pageXOffset","height","overflow","append","outer","barWidth","offsetWidth","clientWidth","bScrollbarLeft","round","offset","remove","oBrowser","iBarWidth","oDefaults","oCol","oColumn","idx","searchFixed","colEl","attr","aoPreSearchCols","oOptions","mDataProp","sType","_sManualType","sClass","origClass","iDataSort","mDataSrc","mRender","copy","shift","_render","attrTest","_bAttrSrc","_setter","fnGetData","rowData","innerData","fnSetData","_fnSetObjectDataFn","_rowReadObject","bSort","bSortable","_fnAdjustColumnSizing","_fnCalculateColumnWidths","_fnColumnSizes","scroll","sY","sX","_fnScrollDraw","cols","_fnColumnsSumWidth","_fnVisibleToColumnIndex","iMatch","aiVis","_fnGetColumns","_fnColumnIndexToVisible","iPos","_fnVisbleColumns","aoHeader","columns","vis","bVisible","sParam","_typeResult","typeDetect","_name","_fnColumnTypes","aoData","types","jen","ken","detectedType","cache","oneOf","allOf","one","autoClass","_columnAutoClass","aoFooter","_columnAutoRender","colIdx","nTr","display","displayData","_fnWriteCell","anCells","aoColDefs","aoCols","headerLayout","kLen","def","sName","aTargets","target","targets","is","original","incVisible","_fnColumnsFromHeader","sum","unit","definedWidth","sWidthOrig","sWidth","matched","closest","_fnAddData","dataIn","tr","tds","rowIdx","rowModel","oRow","_aData","aIds","_fnCreateTr","_fnAddTr","trs","_fnGetRowElements","cells","draw","iDraw","defaultContent","sDefaultContent","cellData","innerHTML","iDrawError","call","fomatters","_fnSetCellData","td","parts","_fnGetDataMaster","_fnClearTable","_fnInvalidate","_aSortData","_aFilterData","_fnGetRowDisplay","maxLenString","_fnRowAttributes","firstChild","contents","objectRead","setter","cellProcess","trim","toUpperCase","nextSibling","rowNode","rowModal","iRow","nTrIn","anTds","nTd","create","trClass","document","createElement","_DT_RowIndex","sCellType","_DT_CellIndex","appendChild","removeChild","fnCreatedCell","DT_RowClass","__rowc","concat","removeClass","DT_RowAttr","DT_RowData","_fnBuildHead","side","titleProp","detected","_fnRenderer","_fnHeaderLayout","incColumns","local","structure","columnCount","rowspan","colspan","includes","titleSpan","title","_fnDrawHead","point","_fnDraw","ajaxComplete","_fnStart","aPreDraw","_fnProcessingDisplay","anRows","iRowCount","bServerSide","iDisplayEnd","fnDisplayEnd","bDrawing","bDestroying","_emptyRow","_fnAjaxUpdate","iStart","iEnd","iDataIndex","nRow","replaceChildren","detach","nTableWrapper","toggleClass","bFiltered","_fnReDraw","holdPosition","recompute","bFilter","_fnSort","_fnFilterComplete","oPreviousSearch","_drawHold","oLang","zero","sZeroRecords","dataSrc","sLoadingRecords","sEmptyTable","fnRecordsTotal","_layoutItems","align","items","rowCell","rowClass","Object","keys","opts","_layoutGetRow","rows","rowNum","_layoutArray","pos","order1","order2","ret","reverse","_layoutResolve","getFeature","resolve","item","line","node","inst","_fnAddOptionsHtml","insert","insertBefore","sDom","_fnLayoutDom","bottom","_fnFeatureHtmlTable","_processingHtml","dom","featureNode","option","newNode","next","parent","cFeature","fnInit","write","l","shifted","isHeader","columnDef","sTitle","autoTitle","ariaTitle","childNodes","setAttribute","fnRecordsDisplay","_fnBuildAjax","ajaxData","instance","callback","status","jqXHR","_fnAjaxDataSrc","sError","JSON","parse","e","newData","baseAjax","sServerMethod","xhr","readyState","oAjaxData","_fnAjaxParameters","_fnAjaxUpdateDraw","preSearch","preColSearch","colData","searchable","bSearchable","orderable","regex","fixed","term","toString","_fnSortFlatten","dir","_iDisplayLength","_fnAjaxDataSrcParam","recordsTotal","recordsFiltered","_fnInitComplete","dataProp","aaData","param","columnsSearch","_fnFilterData","_fnFilter","_fnFilterCustom","filters","displayRows","searchRows","searchFunc","rpSearch","_fnFilterCreateSearch","_sFilterRow","test","inOpts","not","boundary","caseInsensitive","exact","smart","word","negative","m","__filter_div","__filter_div_textContent","textContent","filterData","wasInvalidated","innerText","_fnLoadState","iAjaxStart","_fnSortInit","_colGroup","aData","_bInitComplete","_fnLengthChange","_fnLengthOverflow","_fnPageChange","action","redraw","records","floor","changed","bProcessing","sProcessing","on","show","_fnProcessingRun","enable","run","scrollY","captionSide","headerClone","cloneNode","footerClone","_div","size","_fnStringToCss","scroller","border","sXInner","removeAttr","scrollHead","scrollBody","scrollFoot","scrollLeft","bCollapse","nScrollHead","nScrollBody","nScrollFoot","aoDrawCallback","divHeader","divHeaderInner","divHeaderTable","divBodyEl","divBody","divFooter","divFooterInner","divFooterTable","headerCopy","footerCopy","scrollBarVis","scrollHeight","clientHeight","clone","firstTr","colSizes","outerWidth","colWidth","wrapAll","isScrolling","paddingSide","scrollTop","bAutoWidth","scrollXInner","visibleColumns","tableWidthAttr","tableContainer","columnIdx","styleWidth","visible","tmpTable","margin","padding","longest","_fnGetMaxLenString","text","sContentPadding","createTextNode","holder","right","total","bodyCells","bounding","getBoundingClientRect","_reszEvt","bindResize","sInstance","max","maxLen","cellString","nodeType","headerRows","querySelectorAll","legacyTop","bSortCellsTop","notSelector","_fnSortAttachListener","_fnSortResolve","_fnBindAction","_fnSortAdd","shiftKey","_fnSortDisplay","master","masterMap","nestedSort","z","aSort","extSort","srcCol","aaSortingFixed","fixedObj","pre","post","_idx","index","formatter","sorter","aiOrig","sortCol","displayMaster","_fnSortData","orderDescReverse","x","y","dataA","dataB","sortDetails","addIndex","nextSortIdx","bSortMulti","sortIdx","oldSort","aLastSort","sortClass","bSortClasses","customSort","sSortDataType","customData","_bLoadingState","state","time","oSavedState","fnStateSaveCallback","loaded","_fnImplementState","fnStateLoadCallback","duration","iStateDuration","abStateLoad","oLoadedState","page","adjust","level","msg","tn","sErrMode","alert","console","log","mappedName","extender","breakRefs","prototype","hasOwnProperty","which","preventDefault","store","callbackArr","eventName","bubbles","Event","dt","parents","result","host","_fnMacros","entries","fnFormatNumber","all","ceil","i18n","__apiStruct","__arrayProto","_toSettings","jq","tables","toArray","v","context","ctxSettings","any","count","flatten","ctx","iterator","alwaysNew","apiInst","_selector_row_indexes","apiSelector","lastIndexOf","pluck","pop","reduce","reduceRight","to$","toJQuery","unshift","_api_scope","scope","struc","methodExt","_api_find","obj","__dt_wrapper","struct","propExt","register","heir","method","registerPlural","pluralName","singularName","__table_selector","sel","nodes","indexes","prepend","visRecords","__reload","abort","resetPaging","_selector_run","selectFn","selectorType","_selector_opts","_selector_first","displayFiltered","displayFilteredMap","ordered","__row_selector","selInt","cellIdx","rowObj","r","hash","newRows","modRows","idFn","ids","_detailsShow","childRows","__details_state_load","every","__details_add","klass","addRow","created","colSpan","_details","__details_state","__details_remove","__details_display","__details_events","namespace","drawEvent","colvisEvent","destroyEvent","off","_emp","_child_obj","_child_mth","child","__re_column_selector","__columnData","r1","r2","__column_header","__column_selector","names","titles","visColumns","jqResult","__setColumnVis","span","calc","widths","visIdx","__cell_selector","allCells","fnSelector","rowSelector","columnSelector","internalOpts","cellsNoOpts","selected","columnVisible","directions","caseInsen","ignoreTime","setMutate","use","arg1","arg2","module","DateTime","__luxon","__moment","jquery","FixedOffsetZone","isMoment","root","versionCheck","version2","aThis","aThat","iThis","iThat","isDataTable","head","foot","camelToHungarian","jqRows","jqTable","jqTbody","jqWrapper","orderClasses","orig","removedMethod","sDestroyWidth","counter","selectedIdx","tableIdx","token","plural","resolved","toFormat","sThousands","sessionStorage","localStorage","getItem","location","pathname","setItem","stringify","paginate","first","number","topStart","topEnd","bottomStart","bottomEnd","pagingControls","min","extPagination","simple","numbers","simple_numbers","full_numbers","first_last","first_last_numbers","_numbers","_pagingNumbers","numbers_length","pagingButton","buttonType","content","btnClasses","btn","class","role","clicker","pagingContainer","_filterString","__mld","dtLib","momentFn","luxonFn","dateFn","__mlWarning","resolveWindowLibs","luxon","moment","__mldObj","format","locale","utc","isValid","fromFormat","fromISO","setLocale","__mlHelper","localeString","to","typeName","valueOf","UTC","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","__thousands","__decimal","Intl","NumberFormat","formatToParts","datetime","date","thousands","decimal","precision","prefix","postfix","flo","abs","exp","toExponential","toFixed","intPart","floatPart","_extTypes","asc","desc","setProp","propVal","setDetect","defineProperty","findIndex","setOrder","__diacriticSort","localeCompare","navigator","languages","language","numeric","ignorePunctuation","parsed","ts","Infinity","sDecimal","dp","__numericReplace","decimalPlace","re1","re2","ariaType","sortDirs","orderedColumns","isOrdering","orderDirs","firstVis","firstSort","sortOrder","cb","_divProp","bInfo","lang","tid","fnInfoCallback","sInfoEmpty","sInfoPostFix","sInfoFiltered","sInfo","_fnUpdateInfo","_infoEl","__searchCounter","tableId","previousSearch","placeholder","sSearchPlaceholder","sSearch","removed","searchFn","event","return","jqFilter","keyCode","ev","activeElement","sPaginationType","boundaryNumbers","firstLast","previousNext","_pagingDraw","_pagingDynamic","plugin","aria","oAria","pages","buttonEls","buttonsNested","btnInfo","_pagingButtonInfo","ariaLabel","iTabIndex","wrapped","activeEl","outerHeight","oPaginate","sFirst","sPrevious","sNext","sLast","addFirstLast","half","before","after","__lengthCounter","bLengthChange","menu","sLengthMenu","lengths","label","tmpId","div","textNodes","Node","TEXT_NODE","updateEntries","Option","replaceWith","dataTableSettings","dataTableExt"],"sources":["D:/jwelshopadmin/node_modules/datatables.net/js/dataTables.mjs"],"sourcesContent":["/*! DataTables 2.1.8\n * Â© SpryMedia Ltd - datatables.net/license\n */\n\nimport jQuery from 'jquery';\n\n// DataTables code uses $ internally, but we want to be able to\n// reassign $ with the `use` method, so it is a regular var.\nvar $ = jQuery;\n\n\nvar DataTable = function ( selector, options )\n{\n\t// Check if called with a window or jQuery object for DOM less applications\n\t// This is for backwards compatibility\n\tif (DataTable.factory(selector, options)) {\n\t\treturn DataTable;\n\t}\n\n\t// When creating with `new`, create a new DataTable, returning the API instance\n\tif (this instanceof DataTable) {\n\t\treturn $(selector).DataTable(options);\n\t}\n\telse {\n\t\t// Argument switching\n\t\toptions = selector;\n\t}\n\n\tvar _that = this;\n\tvar emptyInit = options === undefined;\n\tvar len = this.length;\n\n\tif ( emptyInit ) {\n\t\toptions = {};\n\t}\n\n\t// Method to get DT API instance from jQuery object\n\tthis.api = function ()\n\t{\n\t\treturn new _Api( this );\n\t};\n\n\tthis.each(function() {\n\t\t// For each initialisation we want to give it a clean initialisation\n\t\t// object that can be bashed around\n\t\tvar o = {};\n\t\tvar oInit = len > 1 ? // optimisation for single table case\n\t\t\t_fnExtend( o, options, true ) :\n\t\t\toptions;\n\n\t\t\n\t\tvar i=0, iLen;\n\t\tvar sId = this.getAttribute( 'id' );\n\t\tvar defaults = DataTable.defaults;\n\t\tvar $this = $(this);\n\t\t\n\t\t\n\t\t/* Sanity check */\n\t\tif ( this.nodeName.toLowerCase() != 'table' )\n\t\t{\n\t\t\t_fnLog( null, 0, 'Non-table node initialisation ('+this.nodeName+')', 2 );\n\t\t\treturn;\n\t\t}\n\t\t\n\t\t$(this).trigger( 'options.dt', oInit );\n\t\t\n\t\t/* Backwards compatibility for the defaults */\n\t\t_fnCompatOpts( defaults );\n\t\t_fnCompatCols( defaults.column );\n\t\t\n\t\t/* Convert the camel-case defaults to Hungarian */\n\t\t_fnCamelToHungarian( defaults, defaults, true );\n\t\t_fnCamelToHungarian( defaults.column, defaults.column, true );\n\t\t\n\t\t/* Setting up the initialisation object */\n\t\t_fnCamelToHungarian( defaults, $.extend( oInit, $this.data() ), true );\n\t\t\n\t\t\n\t\t\n\t\t/* Check to see if we are re-initialising a table */\n\t\tvar allSettings = DataTable.settings;\n\t\tfor ( i=0, iLen=allSettings.length ; i<iLen ; i++ )\n\t\t{\n\t\t\tvar s = allSettings[i];\n\t\t\n\t\t\t/* Base check on table node */\n\t\t\tif (\n\t\t\t\ts.nTable == this ||\n\t\t\t\t(s.nTHead && s.nTHead.parentNode == this) ||\n\t\t\t\t(s.nTFoot && s.nTFoot.parentNode == this)\n\t\t\t) {\n\t\t\t\tvar bRetrieve = oInit.bRetrieve !== undefined ? oInit.bRetrieve : defaults.bRetrieve;\n\t\t\t\tvar bDestroy = oInit.bDestroy !== undefined ? oInit.bDestroy : defaults.bDestroy;\n\t\t\n\t\t\t\tif ( emptyInit || bRetrieve )\n\t\t\t\t{\n\t\t\t\t\treturn s.oInstance;\n\t\t\t\t}\n\t\t\t\telse if ( bDestroy )\n\t\t\t\t{\n\t\t\t\t\tnew DataTable.Api(s).destroy();\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\t_fnLog( s, 0, 'Cannot reinitialise DataTable', 3 );\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\n\t\t\t/* If the element we are initialising has the same ID as a table which was previously\n\t\t\t * initialised, but the table nodes don't match (from before) then we destroy the old\n\t\t\t * instance by simply deleting it. This is under the assumption that the table has been\n\t\t\t * destroyed by other methods. Anyone using non-id selectors will need to do this manually\n\t\t\t */\n\t\t\tif ( s.sTableId == this.id )\n\t\t\t{\n\t\t\t\tallSettings.splice( i, 1 );\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t/* Ensure the table has an ID - required for accessibility */\n\t\tif ( sId === null || sId === \"\" )\n\t\t{\n\t\t\tsId = \"DataTables_Table_\"+(DataTable.ext._unique++);\n\t\t\tthis.id = sId;\n\t\t}\n\t\t\n\t\t/* Create the settings object for this table and set some of the default parameters */\n\t\tvar oSettings = $.extend( true, {}, DataTable.models.oSettings, {\n\t\t\t\"sDestroyWidth\": $this[0].style.width,\n\t\t\t\"sInstance\":     sId,\n\t\t\t\"sTableId\":      sId,\n\t\t\tcolgroup: $('<colgroup>').prependTo(this),\n\t\t\tfastData: function (row, column, type) {\n\t\t\t\treturn _fnGetCellData(oSettings, row, column, type);\n\t\t\t}\n\t\t} );\n\t\toSettings.nTable = this;\n\t\toSettings.oInit  = oInit;\n\t\t\n\t\tallSettings.push( oSettings );\n\t\t\n\t\t// Make a single API instance available for internal handling\n\t\toSettings.api = new _Api( oSettings );\n\t\t\n\t\t// Need to add the instance after the instance after the settings object has been added\n\t\t// to the settings array, so we can self reference the table instance if more than one\n\t\toSettings.oInstance = (_that.length===1) ? _that : $this.dataTable();\n\t\t\n\t\t// Backwards compatibility, before we apply all the defaults\n\t\t_fnCompatOpts( oInit );\n\t\t\n\t\t// If the length menu is given, but the init display length is not, use the length menu\n\t\tif ( oInit.aLengthMenu && ! oInit.iDisplayLength )\n\t\t{\n\t\t\toInit.iDisplayLength = Array.isArray(oInit.aLengthMenu[0])\n\t\t\t\t? oInit.aLengthMenu[0][0]\n\t\t\t\t: $.isPlainObject( oInit.aLengthMenu[0] )\n\t\t\t\t\t? oInit.aLengthMenu[0].value\n\t\t\t\t\t: oInit.aLengthMenu[0];\n\t\t}\n\t\t\n\t\t// Apply the defaults and init options to make a single init object will all\n\t\t// options defined from defaults and instance options.\n\t\toInit = _fnExtend( $.extend( true, {}, defaults ), oInit );\n\t\t\n\t\t\n\t\t// Map the initialisation options onto the settings object\n\t\t_fnMap( oSettings.oFeatures, oInit, [\n\t\t\t\"bPaginate\",\n\t\t\t\"bLengthChange\",\n\t\t\t\"bFilter\",\n\t\t\t\"bSort\",\n\t\t\t\"bSortMulti\",\n\t\t\t\"bInfo\",\n\t\t\t\"bProcessing\",\n\t\t\t\"bAutoWidth\",\n\t\t\t\"bSortClasses\",\n\t\t\t\"bServerSide\",\n\t\t\t\"bDeferRender\"\n\t\t] );\n\t\t_fnMap( oSettings, oInit, [\n\t\t\t\"ajax\",\n\t\t\t\"fnFormatNumber\",\n\t\t\t\"sServerMethod\",\n\t\t\t\"aaSorting\",\n\t\t\t\"aaSortingFixed\",\n\t\t\t\"aLengthMenu\",\n\t\t\t\"sPaginationType\",\n\t\t\t\"iStateDuration\",\n\t\t\t\"bSortCellsTop\",\n\t\t\t\"iTabIndex\",\n\t\t\t\"sDom\",\n\t\t\t\"fnStateLoadCallback\",\n\t\t\t\"fnStateSaveCallback\",\n\t\t\t\"renderer\",\n\t\t\t\"searchDelay\",\n\t\t\t\"rowId\",\n\t\t\t\"caption\",\n\t\t\t\"layout\",\n\t\t\t\"orderDescReverse\",\n\t\t\t\"typeDetect\",\n\t\t\t[ \"iCookieDuration\", \"iStateDuration\" ], // backwards compat\n\t\t\t[ \"oSearch\", \"oPreviousSearch\" ],\n\t\t\t[ \"aoSearchCols\", \"aoPreSearchCols\" ],\n\t\t\t[ \"iDisplayLength\", \"_iDisplayLength\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oScroll, oInit, [\n\t\t\t[ \"sScrollX\", \"sX\" ],\n\t\t\t[ \"sScrollXInner\", \"sXInner\" ],\n\t\t\t[ \"sScrollY\", \"sY\" ],\n\t\t\t[ \"bScrollCollapse\", \"bCollapse\" ]\n\t\t] );\n\t\t_fnMap( oSettings.oLanguage, oInit, \"fnInfoCallback\" );\n\t\t\n\t\t/* Callback functions which are array driven */\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback',       oInit.fnDrawCallback );\n\t\t_fnCallbackReg( oSettings, 'aoStateSaveParams',    oInit.fnStateSaveParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoadParams',    oInit.fnStateLoadParams );\n\t\t_fnCallbackReg( oSettings, 'aoStateLoaded',        oInit.fnStateLoaded );\n\t\t_fnCallbackReg( oSettings, 'aoRowCallback',        oInit.fnRowCallback );\n\t\t_fnCallbackReg( oSettings, 'aoRowCreatedCallback', oInit.fnCreatedRow );\n\t\t_fnCallbackReg( oSettings, 'aoHeaderCallback',     oInit.fnHeaderCallback );\n\t\t_fnCallbackReg( oSettings, 'aoFooterCallback',     oInit.fnFooterCallback );\n\t\t_fnCallbackReg( oSettings, 'aoInitComplete',       oInit.fnInitComplete );\n\t\t_fnCallbackReg( oSettings, 'aoPreDrawCallback',    oInit.fnPreDrawCallback );\n\t\t\n\t\toSettings.rowIdFn = _fnGetObjectDataFn( oInit.rowId );\n\t\t\n\t\t/* Browser support detection */\n\t\t_fnBrowserDetect( oSettings );\n\t\t\n\t\tvar oClasses = oSettings.oClasses;\n\t\t\n\t\t$.extend( oClasses, DataTable.ext.classes, oInit.oClasses );\n\t\t$this.addClass( oClasses.table );\n\t\t\n\t\tif (! oSettings.oFeatures.bPaginate) {\n\t\t\toInit.iDisplayStart = 0;\n\t\t}\n\t\t\n\t\tif ( oSettings.iInitDisplayStart === undefined )\n\t\t{\n\t\t\t/* Display start point, taking into account the save saving */\n\t\t\toSettings.iInitDisplayStart = oInit.iDisplayStart;\n\t\t\toSettings._iDisplayStart = oInit.iDisplayStart;\n\t\t}\n\t\t\n\t\tvar defer = oInit.iDeferLoading;\n\t\tif ( defer !== null )\n\t\t{\n\t\t\toSettings.deferLoading = true;\n\t\t\n\t\t\tvar tmp = Array.isArray(defer);\n\t\t\toSettings._iRecordsDisplay = tmp ? defer[0] : defer;\n\t\t\toSettings._iRecordsTotal = tmp ? defer[1] : defer;\n\t\t}\n\t\t\n\t\t/*\n\t\t * Columns\n\t\t * See if we should load columns automatically or use defined ones\n\t\t */\n\t\tvar columnsInit = [];\n\t\tvar thead = this.getElementsByTagName('thead');\n\t\tvar initHeaderLayout = _fnDetectHeader( oSettings, thead[0] );\n\t\t\n\t\t// If we don't have a columns array, then generate one with nulls\n\t\tif ( oInit.aoColumns ) {\n\t\t\tcolumnsInit = oInit.aoColumns;\n\t\t}\n\t\telse if ( initHeaderLayout.length ) {\n\t\t\tfor ( i=0, iLen=initHeaderLayout[0].length ; i<iLen ; i++ ) {\n\t\t\t\tcolumnsInit.push( null );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Add the columns\n\t\tfor ( i=0, iLen=columnsInit.length ; i<iLen ; i++ ) {\n\t\t\t_fnAddColumn( oSettings );\n\t\t}\n\t\t\n\t\t// Apply the column definitions\n\t\t_fnApplyColumnDefs( oSettings, oInit.aoColumnDefs, columnsInit, initHeaderLayout, function (iCol, oDef) {\n\t\t\t_fnColumnOptions( oSettings, iCol, oDef );\n\t\t} );\n\t\t\n\t\t/* HTML5 attribute detection - build an mData object automatically if the\n\t\t * attributes are found\n\t\t */\n\t\tvar rowOne = $this.children('tbody').find('tr').eq(0);\n\t\t\n\t\tif ( rowOne.length ) {\n\t\t\tvar a = function ( cell, name ) {\n\t\t\t\treturn cell.getAttribute( 'data-'+name ) !== null ? name : null;\n\t\t\t};\n\t\t\n\t\t\t$( rowOne[0] ).children('th, td').each( function (i, cell) {\n\t\t\t\tvar col = oSettings.aoColumns[i];\n\t\t\n\t\t\t\tif (! col) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t\t}\n\t\t\n\t\t\t\tif ( col.mData === i ) {\n\t\t\t\t\tvar sort = a( cell, 'sort' ) || a( cell, 'order' );\n\t\t\t\t\tvar filter = a( cell, 'filter' ) || a( cell, 'search' );\n\t\t\n\t\t\t\t\tif ( sort !== null || filter !== null ) {\n\t\t\t\t\t\tcol.mData = {\n\t\t\t\t\t\t\t_:      i+'.display',\n\t\t\t\t\t\t\tsort:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\ttype:   sort !== null   ? i+'.@data-'+sort   : undefined,\n\t\t\t\t\t\t\tfilter: filter !== null ? i+'.@data-'+filter : undefined\n\t\t\t\t\t\t};\n\t\t\t\t\t\tcol._isArrayHost = true;\n\t\t\n\t\t\t\t\t\t_fnColumnOptions( oSettings, i );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\t\n\t\t// Must be done after everything which can be overridden by the state saving!\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', _fnSaveState );\n\t\t\n\t\tvar features = oSettings.oFeatures;\n\t\tif ( oInit.bStateSave )\n\t\t{\n\t\t\tfeatures.bStateSave = true;\n\t\t}\n\t\t\n\t\t// If aaSorting is not defined, then we use the first indicator in asSorting\n\t\t// in case that has been altered, so the default sort reflects that option\n\t\tif ( oInit.aaSorting === undefined ) {\n\t\t\tvar sorting = oSettings.aaSorting;\n\t\t\tfor ( i=0, iLen=sorting.length ; i<iLen ; i++ ) {\n\t\t\t\tsorting[i][1] = oSettings.aoColumns[ i ].asSorting[0];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Do a first pass on the sorting classes (allows any size changes to be taken into\n\t\t// account, and also will apply sorting disabled classes if disabled\n\t\t_fnSortingClasses( oSettings );\n\t\t\n\t\t_fnCallbackReg( oSettings, 'aoDrawCallback', function () {\n\t\t\tif ( oSettings.bSorted || _fnDataSource( oSettings ) === 'ssp' || features.bDeferRender ) {\n\t\t\t\t_fnSortingClasses( oSettings );\n\t\t\t}\n\t\t} );\n\t\t\n\t\t\n\t\t/*\n\t\t * Table HTML init\n\t\t * Cache the header, body and footer as required, creating them if needed\n\t\t */\n\t\tvar caption = $this.children('caption');\n\t\t\n\t\tif ( oSettings.caption ) {\n\t\t\tif ( caption.length === 0 ) {\n\t\t\t\tcaption = $('<caption/>').appendTo( $this );\n\t\t\t}\n\t\t\n\t\t\tcaption.html( oSettings.caption );\n\t\t}\n\t\t\n\t\t// Store the caption side, so we can remove the element from the document\n\t\t// when creating the element\n\t\tif (caption.length) {\n\t\t\tcaption[0]._captionSide = caption.css('caption-side');\n\t\t\toSettings.captionNode = caption[0];\n\t\t}\n\t\t\n\t\tif ( thead.length === 0 ) {\n\t\t\tthead = $('<thead/>').appendTo($this);\n\t\t}\n\t\toSettings.nTHead = thead[0];\n\t\t$('tr', thead).addClass(oClasses.thead.row);\n\t\t\n\t\tvar tbody = $this.children('tbody');\n\t\tif ( tbody.length === 0 ) {\n\t\t\ttbody = $('<tbody/>').insertAfter(thead);\n\t\t}\n\t\toSettings.nTBody = tbody[0];\n\t\t\n\t\tvar tfoot = $this.children('tfoot');\n\t\tif ( tfoot.length === 0 ) {\n\t\t\t// If we are a scrolling table, and no footer has been given, then we need to create\n\t\t\t// a tfoot element for the caption element to be appended to\n\t\t\ttfoot = $('<tfoot/>').appendTo($this);\n\t\t}\n\t\toSettings.nTFoot = tfoot[0];\n\t\t$('tr', tfoot).addClass(oClasses.tfoot.row);\n\t\t\n\t\t// Copy the data index array\n\t\toSettings.aiDisplay = oSettings.aiDisplayMaster.slice();\n\t\t\n\t\t// Initialisation complete - table can be drawn\n\t\toSettings.bInitialised = true;\n\t\t\n\t\t// Language definitions\n\t\tvar oLanguage = oSettings.oLanguage;\n\t\t$.extend( true, oLanguage, oInit.oLanguage );\n\t\t\n\t\tif ( oLanguage.sUrl ) {\n\t\t\t// Get the language definitions from a file\n\t\t\t$.ajax( {\n\t\t\t\tdataType: 'json',\n\t\t\t\turl: oLanguage.sUrl,\n\t\t\t\tsuccess: function ( json ) {\n\t\t\t\t\t_fnCamelToHungarian( defaults.oLanguage, json );\n\t\t\t\t\t$.extend( true, oLanguage, json, oSettings.oInit.oLanguage );\n\t\t\n\t\t\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t},\n\t\t\t\terror: function () {\n\t\t\t\t\t// Error occurred loading language file\n\t\t\t\t\t_fnLog( oSettings, 0, 'i18n file loading error', 21 );\n\t\t\n\t\t\t\t\t// Continue on as best we can\n\t\t\t\t\t_fnInitialise( oSettings );\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t\telse {\n\t\t\t_fnCallbackFire( oSettings, null, 'i18n', [oSettings], true);\n\t\t\t_fnInitialise( oSettings );\n\t\t}\n\t} );\n\t_that = null;\n\treturn this;\n};\n\n\n\n/**\n * DataTables extensions\n * \n * This namespace acts as a collection area for plug-ins that can be used to\n * extend DataTables capabilities. Indeed many of the build in methods\n * use this method to provide their own capabilities (sorting methods for\n * example).\n *\n * Note that this namespace is aliased to `jQuery.fn.dataTableExt` for legacy\n * reasons\n *\n *  @namespace\n */\nDataTable.ext = _ext = {\n\t/**\n\t * Buttons. For use with the Buttons extension for DataTables. This is\n\t * defined here so other extensions can define buttons regardless of load\n\t * order. It is _not_ used by DataTables core.\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tbuttons: {},\n\n\n\t/**\n\t * Element class names\n\t *\n\t *  @type object\n\t *  @default {}\n\t */\n\tclasses: {},\n\n\n\t/**\n\t * DataTables build type (expanded by the download builder)\n\t *\n\t *  @type string\n\t */\n\tbuilder: \"-source-\",\n\n\n\t/**\n\t * Error reporting.\n\t * \n\t * How should DataTables report an error. Can take the value 'alert',\n\t * 'throw', 'none' or a function.\n\t *\n\t *  @type string|function\n\t *  @default alert\n\t */\n\terrMode: \"alert\",\n\n\n\t/**\n\t * Legacy so v1 plug-ins don't throw js errors on load\n\t */\n\tfeature: [],\n\n\t/**\n\t * Feature plug-ins.\n\t * \n\t * This is an object of callbacks which provide the features for DataTables\n\t * to be initialised via the `layout` option.\n\t */\n\tfeatures: {},\n\n\n\t/**\n\t * Row searching.\n\t * \n\t * This method of searching is complimentary to the default type based\n\t * searching, and a lot more comprehensive as it allows you complete control\n\t * over the searching logic. Each element in this array is a function\n\t * (parameters described below) that is called for every row in the table,\n\t * and your logic decides if it should be included in the searching data set\n\t * or not.\n\t *\n\t * Searching functions have the following input parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{array|object}` Data for the row to be processed (same as the\n\t *    original format that was passed in as the data source, or an array\n\t *    from a DOM data source\n\t * 3. `{int}` Row index ({@link DataTable.models.oSettings.aoData}), which\n\t *    can be useful to retrieve the `TR` element if you need DOM interaction.\n\t *\n\t * And the following return is expected:\n\t *\n\t * * {boolean} Include the row in the searched result set (true) or not\n\t *   (false)\n\t *\n\t * Note that as with the main search ability in DataTables, technically this\n\t * is \"filtering\", since it is subtractive. However, for consistency in\n\t * naming we call it searching here.\n\t *\n\t *  @type array\n\t *  @default []\n\t *\n\t *  @example\n\t *    // The following example shows custom search being applied to the\n\t *    // fourth column (i.e. the data[3] index) based on two input values\n\t *    // from the end-user, matching the data in a certain range.\n\t *    $.fn.dataTable.ext.search.push(\n\t *      function( settings, data, dataIndex ) {\n\t *        var min = document.getElementById('min').value * 1;\n\t *        var max = document.getElementById('max').value * 1;\n\t *        var version = data[3] == \"-\" ? 0 : data[3]*1;\n\t *\n\t *        if ( min == \"\" && max == \"\" ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min == \"\" && version < max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && \"\" == max ) {\n\t *          return true;\n\t *        }\n\t *        else if ( min < version && version < max ) {\n\t *          return true;\n\t *        }\n\t *        return false;\n\t *      }\n\t *    );\n\t */\n\tsearch: [],\n\n\n\t/**\n\t * Selector extensions\n\t *\n\t * The `selector` option can be used to extend the options available for the\n\t * selector modifier options (`selector-modifier` object data type) that\n\t * each of the three built in selector types offer (row, column and cell +\n\t * their plural counterparts). For example the Select extension uses this\n\t * mechanism to provide an option to select only rows, columns and cells\n\t * that have been marked as selected by the end user (`{selected: true}`),\n\t * which can be used in conjunction with the existing built in selector\n\t * options.\n\t *\n\t * Each property is an array to which functions can be pushed. The functions\n\t * take three attributes:\n\t *\n\t * * Settings object for the host table\n\t * * Options object (`selector-modifier` object type)\n\t * * Array of selected item indexes\n\t *\n\t * The return is an array of the resulting item indexes after the custom\n\t * selector has been applied.\n\t *\n\t *  @type object\n\t */\n\tselector: {\n\t\tcell: [],\n\t\tcolumn: [],\n\t\trow: []\n\t},\n\n\n\t/**\n\t * Legacy configuration options. Enable and disable legacy options that\n\t * are available in DataTables.\n\t *\n\t *  @type object\n\t */\n\tlegacy: {\n\t\t/**\n\t\t * Enable / disable DataTables 1.9 compatible server-side processing\n\t\t * requests\n\t\t *\n\t\t *  @type boolean\n\t\t *  @default null\n\t\t */\n\t\tajax: null\n\t},\n\n\n\t/**\n\t * Pagination plug-in methods.\n\t * \n\t * Each entry in this object is a function and defines which buttons should\n\t * be shown by the pagination rendering method that is used for the table:\n\t * {@link DataTable.ext.renderer.pageButton}. The renderer addresses how the\n\t * buttons are displayed in the document, while the functions here tell it\n\t * what buttons to display. This is done by returning an array of button\n\t * descriptions (what each button will do).\n\t *\n\t * Pagination types (the four built in options and any additional plug-in\n\t * options defined here) can be used through the `paginationType`\n\t * initialisation parameter.\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{int} page` The current page index\n\t * 2. `{int} pages` The number of pages in the table\n\t *\n\t * Each function is expected to return an array where each element of the\n\t * array can be one of:\n\t *\n\t * * `first` - Jump to first page when activated\n\t * * `last` - Jump to last page when activated\n\t * * `previous` - Show previous page when activated\n\t * * `next` - Show next page when activated\n\t * * `{int}` - Show page of the index given\n\t * * `{array}` - A nested array containing the above elements to add a\n\t *   containing 'DIV' element (might be useful for styling).\n\t *\n\t * Note that DataTables v1.9- used this object slightly differently whereby\n\t * an object with two functions would be defined for each plug-in. That\n\t * ability is still supported by DataTables 1.10+ to provide backwards\n\t * compatibility, but this option of use is now decremented and no longer\n\t * documented in DataTables 1.10+.\n\t *\n\t *  @type object\n\t *  @default {}\n\t *\n\t *  @example\n\t *    // Show previous, next and current page buttons only\n\t *    $.fn.dataTableExt.oPagination.current = function ( page, pages ) {\n\t *      return [ 'previous', page, 'next' ];\n\t *    };\n\t */\n\tpager: {},\n\n\n\trenderer: {\n\t\tpageButton: {},\n\t\theader: {}\n\t},\n\n\n\t/**\n\t * Ordering plug-ins - custom data source\n\t * \n\t * The extension options for ordering of data available here is complimentary\n\t * to the default type based ordering that DataTables typically uses. It\n\t * allows much greater control over the the data that is being used to\n\t * order a column, but is necessarily therefore more complex.\n\t * \n\t * This type of ordering is useful if you want to do ordering based on data\n\t * live from the DOM (for example the contents of an 'input' element) rather\n\t * than just the static string that DataTables knows of.\n\t * \n\t * The way these plug-ins work is that you create an array of the values you\n\t * wish to be ordering for the column in question and then return that\n\t * array. The data in the array much be in the index order of the rows in\n\t * the table (not the currently ordering order!). Which order data gathering\n\t * function is run here depends on the `dt-init columns.orderDataType`\n\t * parameter that is used for the column (if any).\n\t *\n\t * The functions defined take two parameters:\n\t *\n\t * 1. `{object}` DataTables settings object: see\n\t *    {@link DataTable.models.oSettings}\n\t * 2. `{int}` Target column index\n\t *\n\t * Each function is expected to return an array:\n\t *\n\t * * `{array}` Data for the column to be ordering upon\n\t *\n\t *  @type array\n\t *\n\t *  @example\n\t *    // Ordering using `input` node values\n\t *    $.fn.dataTable.ext.order['dom-text'] = function  ( settings, col )\n\t *    {\n\t *      return this.api().column( col, {order:'index'} ).nodes().map( function ( td, i ) {\n\t *        return $('input', td).val();\n\t *      } );\n\t *    }\n\t */\n\torder: {},\n\n\n\t/**\n\t * Type based plug-ins.\n\t *\n\t * Each column in DataTables has a type assigned to it, either by automatic\n\t * detection or by direct assignment using the `type` option for the column.\n\t * The type of a column will effect how it is ordering and search (plug-ins\n\t * can also make use of the column type if required).\n\t *\n\t * @namespace\n\t */\n\ttype: {\n\t\t/**\n\t\t * Automatic column class assignment\n\t\t */\n\t\tclassName: {},\n\n\t\t/**\n\t\t * Type detection functions.\n\t\t *\n\t\t * The functions defined in this object are used to automatically detect\n\t\t * a column's type, making initialisation of DataTables super easy, even\n\t\t * when complex data is in the table.\n\t\t *\n\t\t * The functions defined take two parameters:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be analysed\n\t     *  2. `{settings}` DataTables settings object. This can be used to\n\t     *     perform context specific type detection - for example detection\n\t     *     based on language settings such as using a comma for a decimal\n\t     *     place. Generally speaking the options from the settings will not\n\t     *     be required\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Data type detected, or null if unknown (and thus\n\t\t *   pass it on to the other type detection functions.\n\t\t *\n\t\t *  @type array\n\t\t *\n\t\t *  @example\n\t\t *    // Currency type detection plug-in:\n\t\t *    $.fn.dataTable.ext.type.detect.push(\n\t\t *      function ( data, settings ) {\n\t\t *        // Check the numeric part\n\t\t *        if ( ! data.substring(1).match(/[0-9]/) ) {\n\t\t *          return null;\n\t\t *        }\n\t\t *\n\t\t *        // Check prefixed by currency\n\t\t *        if ( data.charAt(0) == '$' || data.charAt(0) == '&pound;' ) {\n\t\t *          return 'currency';\n\t\t *        }\n\t\t *        return null;\n\t\t *      }\n\t\t *    );\n\t\t */\n\t\tdetect: [],\n\n\t\t/**\n\t\t * Automatic renderer assignment\n\t\t */\n\t\trender: {},\n\n\n\t\t/**\n\t\t * Type based search formatting.\n\t\t *\n\t\t * The type based searching functions can be used to pre-format the\n\t\t * data to be search on. For example, it can be used to strip HTML\n\t\t * tags or to de-format telephone numbers for numeric only searching.\n\t\t *\n\t\t * Note that is a search is not defined for a column of a given type,\n\t\t * no search formatting will be performed.\n\t\t * \n\t\t * Pre-processing of searching data plug-ins - When you assign the sType\n\t\t * for a column (or have it automatically detected for you by DataTables\n\t\t * or a type detection plug-in), you will typically be using this for\n\t\t * custom sorting, but it can also be used to provide custom searching\n\t\t * by allowing you to pre-processing the data and returning the data in\n\t\t * the format that should be searched upon. This is done by adding\n\t\t * functions this object with a parameter name which matches the sType\n\t\t * for that target column. This is the corollary of <i>afnSortData</i>\n\t\t * for searching data.\n\t\t *\n\t\t * The functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for searching\n\t\t *\n\t\t * Each function is expected to return:\n\t\t *\n\t\t * * `{string|null}` Formatted string that will be used for the searching.\n\t\t *\n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    $.fn.dataTable.ext.type.search['title-numeric'] = function ( d ) {\n\t\t *      return d.replace(/\\n/g,\" \").replace( /<.*?>/g, \"\" );\n\t\t *    }\n\t\t */\n\t\tsearch: {},\n\n\n\t\t/**\n\t\t * Type based ordering.\n\t\t *\n\t\t * The column type tells DataTables what ordering to apply to the table\n\t\t * when a column is sorted upon. The order for each type that is defined,\n\t\t * is defined by the functions available in this object.\n\t\t *\n\t\t * Each ordering option can be described by three properties added to\n\t\t * this object:\n\t\t *\n\t\t * * `{type}-pre` - Pre-formatting function\n\t\t * * `{type}-asc` - Ascending order function\n\t\t * * `{type}-desc` - Descending order function\n\t\t *\n\t\t * All three can be used together, only `{type}-pre` or only\n\t\t * `{type}-asc` and `{type}-desc` together. It is generally recommended\n\t\t * that only `{type}-pre` is used, as this provides the optimal\n\t\t * implementation in terms of speed, although the others are provided\n\t\t * for compatibility with existing Javascript sort functions.\n\t\t *\n\t\t * `{type}-pre`: Functions defined take a single parameter:\n\t\t *\n\t     *  1. `{*}` Data from the column cell to be prepared for ordering\n\t\t *\n\t\t * And return:\n\t\t *\n\t\t * * `{*}` Data to be sorted upon\n\t\t *\n\t\t * `{type}-asc` and `{type}-desc`: Functions are typical Javascript sort\n\t\t * functions, taking two parameters:\n\t\t *\n\t     *  1. `{*}` Data to compare to the second parameter\n\t     *  2. `{*}` Data to compare to the first parameter\n\t\t *\n\t\t * And returning:\n\t\t *\n\t\t * * `{*}` Ordering match: <0 if first parameter should be sorted lower\n\t\t *   than the second parameter, ===0 if the two parameters are equal and\n\t\t *   >0 if the first parameter should be sorted height than the second\n\t\t *   parameter.\n\t\t * \n\t\t *  @type object\n\t\t *  @default {}\n\t\t *\n\t\t *  @example\n\t\t *    // Numeric ordering of formatted numbers with a pre-formatter\n\t\t *    $.extend( $.fn.dataTable.ext.type.order, {\n\t\t *      \"string-pre\": function(x) {\n\t\t *        a = (a === \"-\" || a === \"\") ? 0 : a.replace( /[^\\d\\-\\.]/g, \"\" );\n\t\t *        return parseFloat( a );\n\t\t *      }\n\t\t *    } );\n\t\t *\n\t\t *  @example\n\t\t *    // Case-sensitive string ordering, with no pre-formatting method\n\t\t *    $.extend( $.fn.dataTable.ext.order, {\n\t\t *      \"string-case-asc\": function(x,y) {\n\t\t *        return ((x < y) ? -1 : ((x > y) ? 1 : 0));\n\t\t *      },\n\t\t *      \"string-case-desc\": function(x,y) {\n\t\t *        return ((x < y) ? 1 : ((x > y) ? -1 : 0));\n\t\t *      }\n\t\t *    } );\n\t\t */\n\t\torder: {}\n\t},\n\n\t/**\n\t * Unique DataTables instance counter\n\t *\n\t * @type int\n\t * @private\n\t */\n\t_unique: 0,\n\n\n\t//\n\t// Depreciated\n\t// The following properties are retained for backwards compatibility only.\n\t// The should not be used in new projects and will be removed in a future\n\t// version\n\t//\n\n\t/**\n\t * Version check function.\n\t *  @type function\n\t *  @depreciated Since 1.10\n\t */\n\tfnVersionCheck: DataTable.fnVersionCheck,\n\n\n\t/**\n\t * Index for what 'this' index API functions should use\n\t *  @type int\n\t *  @deprecated Since v1.10\n\t */\n\tiApiIndex: 0,\n\n\n\t/**\n\t * Software version\n\t *  @type string\n\t *  @deprecated Since v1.10\n\t */\n\tsVersion: DataTable.version\n};\n\n\n//\n// Backwards compatibility. Alias to pre 1.10 Hungarian notation counter parts\n//\n$.extend( _ext, {\n\tafnFiltering: _ext.search,\n\taTypes:       _ext.type.detect,\n\tofnSearch:    _ext.type.search,\n\toSort:        _ext.type.order,\n\tafnSortData:  _ext.order,\n\taoFeatures:   _ext.feature,\n\toStdClasses:  _ext.classes,\n\toPagination:  _ext.pager\n} );\n\n\n$.extend( DataTable.ext.classes, {\n\tcontainer: 'dt-container',\n\tempty: {\n\t\trow: 'dt-empty'\n\t},\n\tinfo: {\n\t\tcontainer: 'dt-info'\n\t},\n\tlayout: {\n\t\trow: 'dt-layout-row',\n\t\tcell: 'dt-layout-cell',\n\t\ttableRow: 'dt-layout-table',\n\t\ttableCell: '',\n\t\tstart: 'dt-layout-start',\n\t\tend: 'dt-layout-end',\n\t\tfull: 'dt-layout-full'\n\t},\n\tlength: {\n\t\tcontainer: 'dt-length',\n\t\tselect: 'dt-input'\n\t},\n\torder: {\n\t\tcanAsc: 'dt-orderable-asc',\n\t\tcanDesc: 'dt-orderable-desc',\n\t\tisAsc: 'dt-ordering-asc',\n\t\tisDesc: 'dt-ordering-desc',\n\t\tnone: 'dt-orderable-none',\n\t\tposition: 'sorting_'\n\t},\n\tprocessing: {\n\t\tcontainer: 'dt-processing'\n\t},\n\tscrolling: {\n\t\tbody: 'dt-scroll-body',\n\t\tcontainer: 'dt-scroll',\n\t\tfooter: {\n\t\t\tself: 'dt-scroll-foot',\n\t\t\tinner: 'dt-scroll-footInner'\n\t\t},\n\t\theader: {\n\t\t\tself: 'dt-scroll-head',\n\t\t\tinner: 'dt-scroll-headInner'\n\t\t}\n\t},\n\tsearch: {\n\t\tcontainer: 'dt-search',\n\t\tinput: 'dt-input'\n\t},\n\ttable: 'dataTable',\t\n\ttbody: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tthead: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\ttfoot: {\n\t\tcell: '',\n\t\trow: ''\n\t},\n\tpaging: {\n\t\tactive: 'current',\n\t\tbutton: 'dt-paging-button',\n\t\tcontainer: 'dt-paging',\n\t\tdisabled: 'disabled',\n\t\tnav: ''\n\t}\n} );\n\n\n/*\n * It is useful to have variables which are scoped locally so only the\n * DataTables functions can access them and they don't leak into global space.\n * At the same time these functions are often useful over multiple files in the\n * core and API, so we list, or at least document, all variables which are used\n * by DataTables as private variables here. This also ensures that there is no\n * clashing of variable names and that they can easily referenced for reuse.\n */\n\n\n// Defined else where\n//  _selector_run\n//  _selector_opts\n//  _selector_row_indexes\n\nvar _ext; // DataTable.ext\nvar _Api; // DataTable.Api\nvar _api_register; // DataTable.Api.register\nvar _api_registerPlural; // DataTable.Api.registerPlural\n\nvar _re_dic = {};\nvar _re_new_lines = /[\\r\\n\\u2028]/g;\nvar _re_html = /<([^>]*>)/g;\nvar _max_str_len = Math.pow(2, 28);\n\n// This is not strict ISO8601 - Date.parse() is quite lax, although\n// implementations differ between browsers.\nvar _re_date = /^\\d{2,4}[./-]\\d{1,2}[./-]\\d{1,2}([T ]{1}\\d{1,2}[:.]\\d{2}([.:]\\d{2})?)?$/;\n\n// Escape regular expression special characters\nvar _re_escape_regex = new RegExp( '(\\\\' + [ '/', '.', '*', '+', '?', '|', '(', ')', '[', ']', '{', '}', '\\\\', '$', '^', '-' ].join('|\\\\') + ')', 'g' );\n\n// https://en.wikipedia.org/wiki/Foreign_exchange_market\n// - \\u20BD - Russian ruble.\n// - \\u20a9 - South Korean Won\n// - \\u20BA - Turkish Lira\n// - \\u20B9 - Indian Rupee\n// - R - Brazil (R$) and South Africa\n// - fr - Swiss Franc\n// - kr - Swedish krona, Norwegian krone and Danish krone\n// - \\u2009 is thin space and \\u202F is narrow no-break space, both used in many\n// - É - Bitcoin\n// - Î - Ethereum\n//   standards as thousands separators.\nvar _re_formatted_numeric = /['\\u00A0,$Â£â¬Â¥%\\u2009\\u202F\\u20BD\\u20a9\\u20BArfkÉÎ]/gi;\n\n\nvar _empty = function ( d ) {\n\treturn !d || d === true || d === '-' ? true : false;\n};\n\n\nvar _intVal = function ( s ) {\n\tvar integer = parseInt( s, 10 );\n\treturn !isNaN(integer) && isFinite(s) ? integer : null;\n};\n\n// Convert from a formatted number with characters other than `.` as the\n// decimal place, to a Javascript number\nvar _numToDecimal = function ( num, decimalPoint ) {\n\t// Cache created regular expressions for speed as this function is called often\n\tif ( ! _re_dic[ decimalPoint ] ) {\n\t\t_re_dic[ decimalPoint ] = new RegExp( _fnEscapeRegex( decimalPoint ), 'g' );\n\t}\n\treturn typeof num === 'string' && decimalPoint !== '.' ?\n\t\tnum.replace( /\\./g, '' ).replace( _re_dic[ decimalPoint ], '.' ) :\n\t\tnum;\n};\n\n\nvar _isNumber = function ( d, decimalPoint, formatted, allowEmpty ) {\n\tvar type = typeof d;\n\tvar strType = type === 'string';\n\n\tif ( type === 'number' || type === 'bigint') {\n\t\treturn true;\n\t}\n\n\t// If empty return immediately so there must be a number if it is a\n\t// formatted string (this stops the string \"k\", or \"kr\", etc being detected\n\t// as a formatted number for currency\n\tif ( allowEmpty && _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\tif ( decimalPoint && strType ) {\n\t\td = _numToDecimal( d, decimalPoint );\n\t}\n\n\tif ( formatted && strType ) {\n\t\td = d.replace( _re_formatted_numeric, '' );\n\t}\n\n\treturn !isNaN( parseFloat(d) ) && isFinite( d );\n};\n\n\n// A string without HTML in it can be considered to be HTML still\nvar _isHtml = function ( d ) {\n\treturn _empty( d ) || typeof d === 'string';\n};\n\n// Is a string a number surrounded by HTML?\nvar _htmlNumeric = function ( d, decimalPoint, formatted, allowEmpty ) {\n\tif ( allowEmpty && _empty( d ) ) {\n\t\treturn true;\n\t}\n\n\t// input and select strings mean that this isn't just a number\n\tif (typeof d === 'string' && d.match(/<(input|select)/i)) {\n\t\treturn null;\n\t}\n\n\tvar html = _isHtml( d );\n\treturn ! html ?\n\t\tnull :\n\t\t_isNumber( _stripHtml( d ), decimalPoint, formatted, allowEmpty ) ?\n\t\t\ttrue :\n\t\t\tnull;\n};\n\n\nvar _pluck = function ( a, prop, prop2 ) {\n\tvar out = [];\n\tvar i=0, ien=a.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] && a[i][ prop ] ) {\n\t\t\t\tout.push( a[i][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[i] ) {\n\t\t\t\tout.push( a[i][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\n// Basically the same as _pluck, but rather than looping over `a` we use `order`\n// as the indexes to pick from `a`\nvar _pluck_order = function ( a, order, prop, prop2 )\n{\n\tvar out = [];\n\tvar i=0, ien=order.length;\n\n\t// Could have the test in the loop for slightly smaller code, but speed\n\t// is essential here\n\tif ( prop2 !== undefined ) {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ] && a[ order[i] ][ prop ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ][ prop2 ] );\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\tfor ( ; i<ien ; i++ ) {\n\t\t\tif ( a[ order[i] ] ) {\n\t\t\t\tout.push( a[ order[i] ][ prop ] );\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n};\n\n\nvar _range = function ( len, start )\n{\n\tvar out = [];\n\tvar end;\n\n\tif ( start === undefined ) {\n\t\tstart = 0;\n\t\tend = len;\n\t}\n\telse {\n\t\tend = start;\n\t\tstart = len;\n\t}\n\n\tfor ( var i=start ; i<end ; i++ ) {\n\t\tout.push( i );\n\t}\n\n\treturn out;\n};\n\n\nvar _removeEmpty = function ( a )\n{\n\tvar out = [];\n\n\tfor ( var i=0, ien=a.length ; i<ien ; i++ ) {\n\t\tif ( a[i] ) { // careful - will remove all falsy values!\n\t\t\tout.push( a[i] );\n\t\t}\n\t}\n\n\treturn out;\n};\n\n// Replaceable function in api.util\nvar _stripHtml = function (input) {\n\tif (! input || typeof input !== 'string') {\n\t\treturn input;\n\t}\n\n\t// Irrelevant check to workaround CodeQL's false positive on the regex\n\tif (input.length > _max_str_len) {\n\t\tthrow new Error('Exceeded max str len');\n\t}\n\n\tvar previous;\n\n\tinput = input.replace(_re_html, ''); // Complete tags\n\n\t// Safety for incomplete script tag - use do / while to ensure that\n\t// we get all instances\n\tdo {\n\t\tprevious = input;\n\t\tinput = input.replace(/<script/i, '');\n\t} while (input !== previous);\n\n\treturn previous;\n};\n\n// Replaceable function in api.util\nvar _escapeHtml = function ( d ) {\n\tif (Array.isArray(d)) {\n\t\td = d.join(',');\n\t}\n\n\treturn typeof d === 'string' ?\n\t\td\n\t\t\t.replace(/&/g, '&amp;')\n\t\t\t.replace(/</g, '&lt;')\n\t\t\t.replace(/>/g, '&gt;')\n\t\t\t.replace(/\"/g, '&quot;') :\n\t\td;\n};\n\n// Remove diacritics from a string by decomposing it and then removing\n// non-ascii characters\nvar _normalize = function (str, both) {\n\tif (typeof str !== 'string') {\n\t\treturn str;\n\t}\n\n\t// It is faster to just run `normalize` than it is to check if\n\t// we need to with a regex! (Check as it isn't available in old\n\t// Safari)\n\tvar res = str.normalize\n\t\t? str.normalize(\"NFD\")\n\t\t: str;\n\n\t// Equally, here we check if a regex is needed or not\n\treturn res.length !== str.length\n\t\t? (both === true ? str + ' ' : '' ) + res.replace(/[\\u0300-\\u036f]/g, \"\")\n\t\t: res;\n}\n\n/**\n * Determine if all values in the array are unique. This means we can short\n * cut the _unique method at the cost of a single loop. A sorted array is used\n * to easily check the values.\n *\n * @param  {array} src Source array\n * @return {boolean} true if all unique, false otherwise\n * @ignore\n */\nvar _areAllUnique = function ( src ) {\n\tif ( src.length < 2 ) {\n\t\treturn true;\n\t}\n\n\tvar sorted = src.slice().sort();\n\tvar last = sorted[0];\n\n\tfor ( var i=1, ien=sorted.length ; i<ien ; i++ ) {\n\t\tif ( sorted[i] === last ) {\n\t\t\treturn false;\n\t\t}\n\n\t\tlast = sorted[i];\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Find the unique elements in a source array.\n *\n * @param  {array} src Source array\n * @return {array} Array of unique items\n * @ignore\n */\nvar _unique = function ( src )\n{\n\tif (Array.from && Set) {\n\t\treturn Array.from(new Set(src));\n\t}\n\n\tif ( _areAllUnique( src ) ) {\n\t\treturn src.slice();\n\t}\n\n\t// A faster unique method is to use object keys to identify used values,\n\t// but this doesn't work with arrays or objects, which we must also\n\t// consider. See jsperf.app/compare-array-unique-versions/4 for more\n\t// information.\n\tvar\n\t\tout = [],\n\t\tval,\n\t\ti, ien=src.length,\n\t\tj, k=0;\n\n\tagain: for ( i=0 ; i<ien ; i++ ) {\n\t\tval = src[i];\n\n\t\tfor ( j=0 ; j<k ; j++ ) {\n\t\t\tif ( out[j] === val ) {\n\t\t\t\tcontinue again;\n\t\t\t}\n\t\t}\n\n\t\tout.push( val );\n\t\tk++;\n\t}\n\n\treturn out;\n};\n\n// Surprisingly this is faster than [].concat.apply\n// https://jsperf.com/flatten-an-array-loop-vs-reduce/2\nvar _flatten = function (out, val) {\n\tif (Array.isArray(val)) {\n\t\tfor (var i=0 ; i<val.length ; i++) {\n\t\t\t_flatten(out, val[i]);\n\t\t}\n\t}\n\telse {\n\t\tout.push(val);\n\t}\n\n\treturn out;\n}\n\n// Similar to jQuery's addClass, but use classList.add\nfunction _addClass(el, name) {\n\tif (name) {\n\t\tname.split(' ').forEach(function (n) {\n\t\t\tif (n) {\n\t\t\t\t// `add` does deduplication, so no need to check `contains`\n\t\t\t\tel.classList.add(n);\n\t\t\t}\n\t\t});\n\t}\n}\n\n/**\n * DataTables utility methods\n * \n * This namespace provides helper methods that DataTables uses internally to\n * create a DataTable, but which are not exclusively used only for DataTables.\n * These methods can be used by extension authors to save the duplication of\n * code.\n *\n *  @namespace\n */\nDataTable.util = {\n\t/**\n\t * Return a string with diacritic characters decomposed\n\t * @param {*} mixed Function or string to normalize\n\t * @param {*} both Return original string and the normalized string\n\t * @returns String or undefined\n\t */\n\tdiacritics: function (mixed, both) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type !== 'function') {\n\t\t\treturn _normalize(mixed, both);\n\t\t}\n\t\t_normalize = mixed;\n\t},\n\n\t/**\n\t * Debounce a function\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tdebounce: function ( fn, timeout ) {\n\t\tvar timer;\n\n\t\treturn function () {\n\t\t\tvar that = this;\n\t\t\tvar args = arguments;\n\n\t\t\tclearTimeout(timer);\n\n\t\t\ttimer = setTimeout( function () {\n\t\t\t\tfn.apply(that, args);\n\t\t\t}, timeout || 250 );\n\t\t};\n\t},\n\n\t/**\n\t * Throttle the calls to a function. Arguments and context are maintained\n\t * for the throttled function.\n\t *\n\t * @param {function} fn Function to be called\n\t * @param {integer} freq Call frequency in mS\n\t * @return {function} Wrapped function\n\t */\n\tthrottle: function ( fn, freq ) {\n\t\tvar\n\t\t\tfrequency = freq !== undefined ? freq : 200,\n\t\t\tlast,\n\t\t\ttimer;\n\n\t\treturn function () {\n\t\t\tvar\n\t\t\t\tthat = this,\n\t\t\t\tnow  = +new Date(),\n\t\t\t\targs = arguments;\n\n\t\t\tif ( last && now < last + frequency ) {\n\t\t\t\tclearTimeout( timer );\n\n\t\t\t\ttimer = setTimeout( function () {\n\t\t\t\t\tlast = undefined;\n\t\t\t\t\tfn.apply( that, args );\n\t\t\t\t}, frequency );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlast = now;\n\t\t\t\tfn.apply( that, args );\n\t\t\t}\n\t\t};\n\t},\n\n\t/**\n\t * Escape a string such that it can be used in a regular expression\n\t *\n\t *  @param {string} val string to escape\n\t *  @returns {string} escaped string\n\t */\n\tescapeRegex: function ( val ) {\n\t\treturn val.replace( _re_escape_regex, '\\\\$1' );\n\t},\n\n\t/**\n\t * Create a function that will write to a nested object or array\n\t * @param {*} source JSON notation string\n\t * @returns Write function\n\t */\n\tset: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t/* Unlike get, only the underscore (global) option is used for for\n\t\t\t * setting data since we don't know the type here. This is why an object\n\t\t\t * option is not documented for `mData` (which is read/write), but it is\n\t\t\t * for `mRender` which is read only.\n\t\t\t */\n\t\t\treturn DataTable.util.set( source._ );\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Nothing to do when the data source is null\n\t\t\treturn function () {};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, val, meta) {\n\t\t\t\tsource( data, 'set', val, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t// Like the get, we need to get data from a nested object\n\t\t\tvar setData = function (data, val, src) {\n\t\t\t\tvar a = _fnSplitObjNotation( src ), b;\n\t\t\t\tvar aLast = a[a.length-1];\n\t\t\t\tvar arrayNotation, funcNotation, o, innerSrc;\n\t\n\t\t\t\tfor ( var i=0, iLen=a.length-1 ; i<iLen ; i++ ) {\n\t\t\t\t\t// Protect against prototype pollution\n\t\t\t\t\tif (a[i] === '__proto__' || a[i] === 'constructor') {\n\t\t\t\t\t\tthrow new Error('Cannot set prototype values');\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// Check if we are dealing with an array notation request\n\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\t\t\t\t\tdata[ a[i] ] = [];\n\t\n\t\t\t\t\t\t// Get the remainder of the nested object to set so we can recurse\n\t\t\t\t\t\tb = a.slice();\n\t\t\t\t\t\tb.splice( 0, i+1 );\n\t\t\t\t\t\tinnerSrc = b.join('.');\n\t\n\t\t\t\t\t\t// Traverse each entry in the array setting the properties requested\n\t\t\t\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t\t\t\tfor ( var j=0, jLen=val.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\to = {};\n\t\t\t\t\t\t\t\tsetData( o, val[j], innerSrc );\n\t\t\t\t\t\t\t\tdata[ a[i] ].push( o );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// We've been asked to save data to an array, but it\n\t\t\t\t\t\t\t// isn't array data to be saved. Best that can be done\n\t\t\t\t\t\t\t// is to just save the value.\n\t\t\t\t\t\t\tdata[ a[i] ] = val;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t// The inner call to setData has already traversed through the remainder\n\t\t\t\t\t\t// of the source and has set the data, thus we can exit here\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t// Function call\n\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\tdata = data[ a[i] ]( val );\n\t\t\t\t\t}\n\t\n\t\t\t\t\t// If the nested object doesn't currently exist - since we are\n\t\t\t\t\t// trying to set the value - create it\n\t\t\t\t\tif ( data[ a[i] ] === null || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\tdata[ a[i] ] = {};\n\t\t\t\t\t}\n\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t}\n\t\n\t\t\t\t// Last item in the input - i.e, the actual set\n\t\t\t\tif ( aLast.match(__reFn ) ) {\n\t\t\t\t\t// Function call\n\t\t\t\t\tdata = data[ aLast.replace(__reFn, '') ]( val );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// If array notation is used, we just want to strip it and use the property name\n\t\t\t\t\t// and assign the value. If it isn't used, then we get the result we want anyway\n\t\t\t\t\tdata[ aLast.replace(__reArray, '') ] = val;\n\t\t\t\t}\n\t\t\t};\n\t\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\treturn setData( data, val, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data, val) { // meta is also passed in, but not used\n\t\t\t\tdata[source] = val;\n\t\t\t};\n\t\t}\n\t},\n\n\t/**\n\t * Create a function that will read nested objects from arrays, based on JSON notation\n\t * @param {*} source JSON notation string\n\t * @returns Value read\n\t */\n\tget: function ( source ) {\n\t\tif ( $.isPlainObject( source ) ) {\n\t\t\t// Build an object of get functions, and wrap them in a single call\n\t\t\tvar o = {};\n\t\t\t$.each( source, function (key, val) {\n\t\t\t\tif ( val ) {\n\t\t\t\t\to[key] = DataTable.util.get( val );\n\t\t\t\t}\n\t\t\t} );\n\t\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\tvar t = o[type] || o._;\n\t\t\t\treturn t !== undefined ?\n\t\t\t\t\tt(data, type, row, meta) :\n\t\t\t\t\tdata;\n\t\t\t};\n\t\t}\n\t\telse if ( source === null ) {\n\t\t\t// Give an empty string for rendering / sorting etc\n\t\t\treturn function (data) { // type, row and meta also passed, but not used\n\t\t\t\treturn data;\n\t\t\t};\n\t\t}\n\t\telse if ( typeof source === 'function' ) {\n\t\t\treturn function (data, type, row, meta) {\n\t\t\t\treturn source( data, type, row, meta );\n\t\t\t};\n\t\t}\n\t\telse if (\n\t\t\ttypeof source === 'string' && (source.indexOf('.') !== -1 ||\n\t\t\tsource.indexOf('[') !== -1 || source.indexOf('(') !== -1)\n\t\t) {\n\t\t\t/* If there is a . in the source string then the data source is in a\n\t\t\t * nested object so we loop over the data for each level to get the next\n\t\t\t * level down. On each loop we test for undefined, and if found immediately\n\t\t\t * return. This allows entire objects to be missing and sDefaultContent to\n\t\t\t * be used if defined, rather than throwing an error\n\t\t\t */\n\t\t\tvar fetchData = function (data, type, src) {\n\t\t\t\tvar arrayNotation, funcNotation, out, innerSrc;\n\t\n\t\t\t\tif ( src !== \"\" ) {\n\t\t\t\t\tvar a = _fnSplitObjNotation( src );\n\t\n\t\t\t\t\tfor ( var i=0, iLen=a.length ; i<iLen ; i++ ) {\n\t\t\t\t\t\t// Check if we are dealing with special notation\n\t\t\t\t\t\tarrayNotation = a[i].match(__reArray);\n\t\t\t\t\t\tfuncNotation = a[i].match(__reFn);\n\t\n\t\t\t\t\t\tif ( arrayNotation ) {\n\t\t\t\t\t\t\t// Array notation\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reArray, '');\n\t\n\t\t\t\t\t\t\t// Condition allows simply [] to be passed in\n\t\t\t\t\t\t\tif ( a[i] !== \"\" ) {\n\t\t\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tout = [];\n\t\n\t\t\t\t\t\t\t// Get the remainder of the nested object to get\n\t\t\t\t\t\t\ta.splice( 0, i+1 );\n\t\t\t\t\t\t\tinnerSrc = a.join('.');\n\t\n\t\t\t\t\t\t\t// Traverse each entry in the array getting the properties requested\n\t\t\t\t\t\t\tif ( Array.isArray( data ) ) {\n\t\t\t\t\t\t\t\tfor ( var j=0, jLen=data.length ; j<jLen ; j++ ) {\n\t\t\t\t\t\t\t\t\tout.push( fetchData( data[j], type, innerSrc ) );\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\t\t// If a string is given in between the array notation indicators, that\n\t\t\t\t\t\t\t// is used to join the strings together, otherwise an array is returned\n\t\t\t\t\t\t\tvar join = arrayNotation[0].substring(1, arrayNotation[0].length-1);\n\t\t\t\t\t\t\tdata = (join===\"\") ? out : out.join(join);\n\t\n\t\t\t\t\t\t\t// The inner call to fetchData has already traversed through the remainder\n\t\t\t\t\t\t\t// of the source requested, so we exit from the loop\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( funcNotation ) {\n\t\t\t\t\t\t\t// Function call\n\t\t\t\t\t\t\ta[i] = a[i].replace(__reFn, '');\n\t\t\t\t\t\t\tdata = data[ a[i] ]();\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t}\n\t\n\t\t\t\t\t\tif (data === null || data[ a[i] ] === null) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if ( data === undefined || data[ a[i] ] === undefined ) {\n\t\t\t\t\t\t\treturn undefined;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tdata = data[ a[i] ];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\n\t\t\t\treturn data;\n\t\t\t};\n\t\n\t\t\treturn function (data, type) { // row and meta also passed, but not used\n\t\t\t\treturn fetchData( data, type, source );\n\t\t\t};\n\t\t}\n\t\telse {\n\t\t\t// Array or flat object mapping\n\t\t\treturn function (data) { // row and meta also passed, but not used\n\t\t\t\treturn data[source];\n\t\t\t};\n\t\t}\n\t},\n\n\tstripHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_stripHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string') {\n\t\t\treturn _stripHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tescapeHtml: function (mixed) {\n\t\tvar type = typeof mixed;\n\n\t\tif (type === 'function') {\n\t\t\t_escapeHtml = mixed;\n\t\t\treturn;\n\t\t}\n\t\telse if (type === 'string' || Array.isArray(mixed)) {\n\t\t\treturn _escapeHtml(mixed);\n\t\t}\n\t\treturn mixed;\n\t},\n\n\tunique: _unique\n};\n\n\n\n/**\n * Create a mapping object that allows camel case parameters to be looked up\n * for their Hungarian counterparts. The mapping is stored in a private\n * parameter called `_hungarianMap` which can be accessed on the source object.\n *  @param {object} o\n *  @memberof DataTable#oApi\n */\nfunction _fnHungarianMap ( o )\n{\n\tvar\n\t\thungarian = 'a aa ai ao as b fn i m o s ',\n\t\tmatch,\n\t\tnewKey,\n\t\tmap = {};\n\n\t$.each( o, function (key) {\n\t\tmatch = key.match(/^([^A-Z]+?)([A-Z])/);\n\n\t\tif ( match && hungarian.indexOf(match[1]+' ') !== -1 )\n\t\t{\n\t\t\tnewKey = key.replace( match[0], match[2].toLowerCase() );\n\t\t\tmap[ newKey ] = key;\n\n\t\t\tif ( match[1] === 'o' )\n\t\t\t{\n\t\t\t\t_fnHungarianMap( o[key] );\n\t\t\t}\n\t\t}\n\t} );\n\n\to._hungarianMap = map;\n}\n\n\n/**\n * Convert from camel case parameters to Hungarian, based on a Hungarian map\n * created by _fnHungarianMap.\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n *  @memberof DataTable#oApi\n */\nfunction _fnCamelToHungarian ( src, user, force )\n{\n\tif ( ! src._hungarianMap ) {\n\t\t_fnHungarianMap( src );\n\t}\n\n\tvar hungarianKey;\n\n\t$.each( user, function (key) {\n\t\thungarianKey = src._hungarianMap[ key ];\n\n\t\tif ( hungarianKey !== undefined && (force || user[hungarianKey] === undefined) )\n\t\t{\n\t\t\t// For objects, we need to buzz down into the object to copy parameters\n\t\t\tif ( hungarianKey.charAt(0) === 'o' )\n\t\t\t{\n\t\t\t\t// Copy the camelCase options over to the hungarian\n\t\t\t\tif ( ! user[ hungarianKey ] ) {\n\t\t\t\t\tuser[ hungarianKey ] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, user[hungarianKey], user[key] );\n\n\t\t\t\t_fnCamelToHungarian( src[hungarianKey], user[hungarianKey], force );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tuser[hungarianKey] = user[ key ];\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Map one parameter onto another\n *  @param {object} o Object to map\n *  @param {*} knew The new parameter name\n *  @param {*} old The old parameter name\n */\nvar _fnCompatMap = function ( o, knew, old ) {\n\tif ( o[ knew ] !== undefined ) {\n\t\to[ old ] = o[ knew ];\n\t}\n};\n\n\n/**\n * Provide backwards compatibility for the main DT options. Note that the new\n * options are mapped onto the old parameters, so this is an external interface\n * change only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatOpts ( init )\n{\n\t_fnCompatMap( init, 'ordering',      'bSort' );\n\t_fnCompatMap( init, 'orderMulti',    'bSortMulti' );\n\t_fnCompatMap( init, 'orderClasses',  'bSortClasses' );\n\t_fnCompatMap( init, 'orderCellsTop', 'bSortCellsTop' );\n\t_fnCompatMap( init, 'order',         'aaSorting' );\n\t_fnCompatMap( init, 'orderFixed',    'aaSortingFixed' );\n\t_fnCompatMap( init, 'paging',        'bPaginate' );\n\t_fnCompatMap( init, 'pagingType',    'sPaginationType' );\n\t_fnCompatMap( init, 'pageLength',    'iDisplayLength' );\n\t_fnCompatMap( init, 'searching',     'bFilter' );\n\n\t// Boolean initialisation of x-scrolling\n\tif ( typeof init.sScrollX === 'boolean' ) {\n\t\tinit.sScrollX = init.sScrollX ? '100%' : '';\n\t}\n\tif ( typeof init.scrollX === 'boolean' ) {\n\t\tinit.scrollX = init.scrollX ? '100%' : '';\n\t}\n\n\t// Column search objects are in an array, so it needs to be converted\n\t// element by element\n\tvar searchCols = init.aoSearchCols;\n\n\tif ( searchCols ) {\n\t\tfor ( var i=0, ien=searchCols.length ; i<ien ; i++ ) {\n\t\t\tif ( searchCols[i] ) {\n\t\t\t\t_fnCamelToHungarian( DataTable.models.oSearch, searchCols[i] );\n\t\t\t}\n\t\t}\n\t}\n\n\t// Enable search delay if server-side processing is enabled\n\tif (init.serverSide && ! init.searchDelay) {\n\t\tinit.searchDelay = 400;\n\t}\n}\n\n\n/**\n * Provide backwards compatibility for column options. Note that the new options\n * are mapped onto the old parameters, so this is an external interface change\n * only.\n *  @param {object} init Object to map\n */\nfunction _fnCompatCols ( init )\n{\n\t_fnCompatMap( init, 'orderable',     'bSortable' );\n\t_fnCompatMap( init, 'orderData',     'aDataSort' );\n\t_fnCompatMap( init, 'orderSequence', 'asSorting' );\n\t_fnCompatMap( init, 'orderDataType', 'sortDataType' );\n\n\t// orderData can be given as an integer\n\tvar dataSort = init.aDataSort;\n\tif ( typeof dataSort === 'number' && ! Array.isArray( dataSort ) ) {\n\t\tinit.aDataSort = [ dataSort ];\n\t}\n}\n\n\n/**\n * Browser feature detection for capabilities, quirks\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBrowserDetect( settings )\n{\n\t// We don't need to do this every time DataTables is constructed, the values\n\t// calculated are specific to the browser and OS configuration which we\n\t// don't expect to change between initialisations\n\tif ( ! DataTable.__browser ) {\n\t\tvar browser = {};\n\t\tDataTable.__browser = browser;\n\n\t\t// Scrolling feature / quirks detection\n\t\tvar n = $('<div/>')\n\t\t\t.css( {\n\t\t\t\tposition: 'fixed',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: -1 * window.pageXOffset, // allow for scrolling\n\t\t\t\theight: 1,\n\t\t\t\twidth: 1,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} )\n\t\t\t.append(\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.css( {\n\t\t\t\t\t\tposition: 'absolute',\n\t\t\t\t\t\ttop: 1,\n\t\t\t\t\t\tleft: 1,\n\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\toverflow: 'scroll'\n\t\t\t\t\t} )\n\t\t\t\t\t.append(\n\t\t\t\t\t\t$('<div/>')\n\t\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t\twidth: '100%',\n\t\t\t\t\t\t\t\theight: 10\n\t\t\t\t\t\t\t} )\n\t\t\t\t\t)\n\t\t\t)\n\t\t\t.appendTo( 'body' );\n\n\t\tvar outer = n.children();\n\t\tvar inner = outer.children();\n\n\t\t// Get scrollbar width\n\t\tbrowser.barWidth = outer[0].offsetWidth - outer[0].clientWidth;\n\n\t\t// In rtl text layout, some browsers (most, but not all) will place the\n\t\t// scrollbar on the left, rather than the right.\n\t\tbrowser.bScrollbarLeft = Math.round( inner.offset().left ) !== 1;\n\n\t\tn.remove();\n\t}\n\n\t$.extend( settings.oBrowser, DataTable.__browser );\n\tsettings.oScroll.iBarWidth = DataTable.__browser.barWidth;\n}\n\n/**\n * Add a column to the list used for the table with default values\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddColumn( oSettings )\n{\n\t// Add column to aoColumns array\n\tvar oDefaults = DataTable.defaults.column;\n\tvar iCol = oSettings.aoColumns.length;\n\tvar oCol = $.extend( {}, DataTable.models.oColumn, oDefaults, {\n\t\t\"aDataSort\": oDefaults.aDataSort ? oDefaults.aDataSort : [iCol],\n\t\t\"mData\": oDefaults.mData ? oDefaults.mData : iCol,\n\t\tidx: iCol,\n\t\tsearchFixed: {},\n\t\tcolEl: $('<col>').attr('data-dt-column', iCol)\n\t} );\n\toSettings.aoColumns.push( oCol );\n\n\t// Add search object for column specific search. Note that the `searchCols[ iCol ]`\n\t// passed into extend can be undefined. This allows the user to give a default\n\t// with only some of the parameters defined, and also not give a default\n\tvar searchCols = oSettings.aoPreSearchCols;\n\tsearchCols[ iCol ] = $.extend( {}, DataTable.models.oSearch, searchCols[ iCol ] );\n}\n\n\n/**\n * Apply options for a column\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iCol column index to consider\n *  @param {object} oOptions object with sType, bVisible and bSearchable etc\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnOptions( oSettings, iCol, oOptions )\n{\n\tvar oCol = oSettings.aoColumns[ iCol ];\n\n\t/* User specified column options */\n\tif ( oOptions !== undefined && oOptions !== null )\n\t{\n\t\t// Backwards compatibility\n\t\t_fnCompatCols( oOptions );\n\n\t\t// Map camel case parameters to their Hungarian counterparts\n\t\t_fnCamelToHungarian( DataTable.defaults.column, oOptions, true );\n\n\t\t/* Backwards compatibility for mDataProp */\n\t\tif ( oOptions.mDataProp !== undefined && !oOptions.mData )\n\t\t{\n\t\t\toOptions.mData = oOptions.mDataProp;\n\t\t}\n\n\t\tif ( oOptions.sType )\n\t\t{\n\t\t\toCol._sManualType = oOptions.sType;\n\t\t}\n\t\n\t\t// `class` is a reserved word in Javascript, so we need to provide\n\t\t// the ability to use a valid name for the camel case input\n\t\tif ( oOptions.className && ! oOptions.sClass )\n\t\t{\n\t\t\toOptions.sClass = oOptions.className;\n\t\t}\n\n\t\tvar origClass = oCol.sClass;\n\n\t\t$.extend( oCol, oOptions );\n\t\t_fnMap( oCol, oOptions, \"sWidth\", \"sWidthOrig\" );\n\n\t\t// Merge class from previously defined classes with this one, rather than just\n\t\t// overwriting it in the extend above\n\t\tif (origClass !== oCol.sClass) {\n\t\t\toCol.sClass = origClass + ' ' + oCol.sClass;\n\t\t}\n\n\t\t/* iDataSort to be applied (backwards compatibility), but aDataSort will take\n\t\t * priority if defined\n\t\t */\n\t\tif ( oOptions.iDataSort !== undefined )\n\t\t{\n\t\t\toCol.aDataSort = [ oOptions.iDataSort ];\n\t\t}\n\t\t_fnMap( oCol, oOptions, \"aDataSort\" );\n\t}\n\n\t/* Cache the data get and set functions for speed */\n\tvar mDataSrc = oCol.mData;\n\tvar mData = _fnGetObjectDataFn( mDataSrc );\n\n\t// The `render` option can be given as an array to access the helper rendering methods.\n\t// The first element is the rendering method to use, the rest are the parameters to pass\n\tif ( oCol.mRender && Array.isArray( oCol.mRender ) ) {\n\t\tvar copy = oCol.mRender.slice();\n\t\tvar name = copy.shift();\n\n\t\toCol.mRender = DataTable.render[name].apply(window, copy);\n\t}\n\n\toCol._render = oCol.mRender ? _fnGetObjectDataFn( oCol.mRender ) : null;\n\n\tvar attrTest = function( src ) {\n\t\treturn typeof src === 'string' && src.indexOf('@') !== -1;\n\t};\n\toCol._bAttrSrc = $.isPlainObject( mDataSrc ) && (\n\t\tattrTest(mDataSrc.sort) || attrTest(mDataSrc.type) || attrTest(mDataSrc.filter)\n\t);\n\toCol._setter = null;\n\n\toCol.fnGetData = function (rowData, type, meta) {\n\t\tvar innerData = mData( rowData, type, undefined, meta );\n\n\t\treturn oCol._render && type ?\n\t\t\toCol._render( innerData, type, rowData, meta ) :\n\t\t\tinnerData;\n\t};\n\toCol.fnSetData = function ( rowData, val, meta ) {\n\t\treturn _fnSetObjectDataFn( mDataSrc )( rowData, val, meta );\n\t};\n\n\t// Indicate if DataTables should read DOM data as an object or array\n\t// Used in _fnGetRowElements\n\tif ( typeof mDataSrc !== 'number' && ! oCol._isArrayHost ) {\n\t\toSettings._rowReadObject = true;\n\t}\n\n\t/* Feature sorting overrides column specific when off */\n\tif ( !oSettings.oFeatures.bSort )\n\t{\n\t\toCol.bSortable = false;\n\t}\n}\n\n\n/**\n * Adjust the table column widths for new data. Note: you would probably want to\n * do a redraw after calling this function!\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAdjustColumnSizing ( settings )\n{\n\t_fnCalculateColumnWidths( settings );\n\t_fnColumnSizes( settings );\n\n\tvar scroll = settings.oScroll;\n\tif ( scroll.sY !== '' || scroll.sX !== '') {\n\t\t_fnScrollDraw( settings );\n\t}\n\n\t_fnCallbackFire( settings, null, 'column-sizing', [settings] );\n}\n\n/**\n * Apply column sizes\n *\n * @param {*} settings DataTables settings object\n */\nfunction _fnColumnSizes ( settings )\n{\n\tvar cols = settings.aoColumns;\n\n\tfor (var i=0 ; i<cols.length ; i++) {\n\t\tvar width = _fnColumnsSumWidth(settings, [i], false, false);\n\n\t\tcols[i].colEl.css('width', width);\n\t}\n}\n\n\n/**\n * Convert the index of a visible column to the index in the data array (take account\n * of hidden columns)\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iMatch Visible column index to lookup\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnVisibleToColumnIndex( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\n\treturn typeof aiVis[iMatch] === 'number' ?\n\t\taiVis[iMatch] :\n\t\tnull;\n}\n\n\n/**\n * Convert the index of an index in the data array and convert it to the visible\n *   column index (take account of hidden columns)\n *  @param {int} iMatch Column index to lookup\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the data index\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnIndexToVisible( oSettings, iMatch )\n{\n\tvar aiVis = _fnGetColumns( oSettings, 'bVisible' );\n\tvar iPos = aiVis.indexOf(iMatch);\n\n\treturn iPos !== -1 ? iPos : null;\n}\n\n\n/**\n * Get the number of visible columns\n *  @param {object} oSettings dataTables settings object\n *  @returns {int} i the number of visible columns\n *  @memberof DataTable#oApi\n */\nfunction _fnVisbleColumns( settings )\n{\n\tvar layout = settings.aoHeader;\n\tvar columns = settings.aoColumns;\n\tvar vis = 0;\n\n\tif ( layout.length ) {\n\t\tfor ( var i=0, ien=layout[0].length ; i<ien ; i++ ) {\n\t\t\tif ( columns[i].bVisible && $(layout[0][i].cell).css('display') !== 'none' ) {\n\t\t\t\tvis++;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn vis;\n}\n\n\n/**\n * Get an array of column indexes that match a given property\n *  @param {object} oSettings dataTables settings object\n *  @param {string} sParam Parameter in aoColumns to look for - typically\n *    bVisible or bSearchable\n *  @returns {array} Array of indexes with matched properties\n *  @memberof DataTable#oApi\n */\nfunction _fnGetColumns( oSettings, sParam )\n{\n\tvar a = [];\n\n\toSettings.aoColumns.map( function(val, i) {\n\t\tif ( val[sParam] ) {\n\t\t\ta.push( i );\n\t\t}\n\t} );\n\n\treturn a;\n}\n\n/**\n * Allow the result from a type detection function to be `true` while\n * translating that into a string. Old type detection functions will\n * return the type name if it passes. An obect store would be better,\n * but not backwards compatible.\n *\n * @param {*} typeDetect Object or function for type detection\n * @param {*} res Result from the type detection function\n * @returns Type name or false\n */\nfunction _typeResult (typeDetect, res) {\n\treturn res === true\n\t\t? typeDetect._name\n\t\t: res;\n}\n\n/**\n * Calculate the 'type' of a column\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnColumnTypes ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar types = DataTable.ext.type.detect;\n\tvar i, ien, j, jen, k, ken;\n\tvar col, detectedType, cache;\n\n\t// For each column, spin over the data type detection functions, seeing if one matches\n\tfor ( i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\tcol = columns[i];\n\t\tcache = [];\n\n\t\tif ( ! col.sType && col._sManualType ) {\n\t\t\tcol.sType = col._sManualType;\n\t\t}\n\t\telse if ( ! col.sType ) {\n\t\t\t// With SSP type detection can be unreliable and error prone, so we provide a way\n\t\t\t// to turn it off.\n\t\t\tif (! settings.typeDetect) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( j=0, jen=types.length ; j<jen ; j++ ) {\n\t\t\t\tvar typeDetect = types[j];\n\n\t\t\t\t// There can be either one, or three type detection functions\n\t\t\t\tvar oneOf = typeDetect.oneOf;\n\t\t\t\tvar allOf = typeDetect.allOf || typeDetect;\n\t\t\t\tvar init = typeDetect.init;\n\t\t\t\tvar one = false;\n\n\t\t\t\tdetectedType = null;\n\n\t\t\t\t// Fast detect based on column assignment\n\t\t\t\tif (init) {\n\t\t\t\t\tdetectedType = _typeResult(typeDetect, init(settings, col, i));\n\n\t\t\t\t\tif (detectedType) {\n\t\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfor ( k=0, ken=data.length ; k<ken ; k++ ) {\n\t\t\t\t\tif (! data[k]) {\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Use a cache array so we only need to get the type data\n\t\t\t\t\t// from the formatter once (when using multiple detectors)\n\t\t\t\t\tif ( cache[k] === undefined ) {\n\t\t\t\t\t\tcache[k] = _fnGetCellData( settings, k, i, 'type' );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only one data point in the column needs to match this function\n\t\t\t\t\tif (oneOf && ! one) {\n\t\t\t\t\t\tone = _typeResult(typeDetect, oneOf( cache[k], settings ));\n\t\t\t\t\t}\n\n\t\t\t\t\t// All data points need to match this function\n\t\t\t\t\tdetectedType = _typeResult(typeDetect, allOf( cache[k], settings ));\n\n\t\t\t\t\t// If null, then this type can't apply to this column, so\n\t\t\t\t\t// rather than testing all cells, break out. There is an\n\t\t\t\t\t// exception for the last type which is `html`. We need to\n\t\t\t\t\t// scan all rows since it is possible to mix string and HTML\n\t\t\t\t\t// types\n\t\t\t\t\tif ( ! detectedType && j !== types.length-3 ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\n\t\t\t\t\t// Only a single match is needed for html type since it is\n\t\t\t\t\t// bottom of the pile and very similar to string - but it\n\t\t\t\t\t// must not be empty\n\t\t\t\t\tif ( detectedType === 'html' && ! _empty(cache[k]) ) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// Type is valid for all data points in the column - use this\n\t\t\t\t// type\n\t\t\t\tif ( (oneOf && one && detectedType) || (!oneOf && detectedType) ) {\n\t\t\t\t\tcol.sType = detectedType;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Fall back - if no type was detected, always use string\n\t\t\tif ( ! col.sType ) {\n\t\t\t\tcol.sType = 'string';\n\t\t\t}\n\t\t}\n\n\t\t// Set class names for header / footer for auto type classes\n\t\tvar autoClass = _ext.type.className[col.sType];\n\n\t\tif (autoClass) {\n\t\t\t_columnAutoClass(settings.aoHeader, i, autoClass);\n\t\t\t_columnAutoClass(settings.aoFooter, i, autoClass);\n\t\t}\n\n\t\tvar renderer = _ext.type.render[col.sType];\n\n\t\t// This can only happen once! There is no way to remove\n\t\t// a renderer. After the first time the renderer has\n\t\t// already been set so createTr will run the renderer itself.\n\t\tif (renderer && ! col._render) {\n\t\t\tcol._render = DataTable.util.get(renderer);\n\n\t\t\t_columnAutoRender(settings, i);\n\t\t}\n\t}\n}\n\n/**\n * Apply an auto detected renderer to data which doesn't yet have\n * a renderer\n */\nfunction _columnAutoRender(settings, colIdx) {\n\tvar data = settings.aoData;\n\n\tfor (var i=0 ; i<data.length ; i++) {\n\t\tif (data[i].nTr) {\n\t\t\t// We have to update the display here since there is no\n\t\t\t// invalidation check for the data\n\t\t\tvar display = _fnGetCellData( settings, i, colIdx, 'display' );\n\n\t\t\tdata[i].displayData[colIdx] = display;\n\t\t\t_fnWriteCell(data[i].anCells[colIdx], display);\n\n\t\t\t// No need to update sort / filter data since it has\n\t\t\t// been invalidated and will be re-read with the\n\t\t\t// renderer now applied\n\t\t}\n\t}\n}\n\n/**\n * Apply a class name to a column's header cells\n */\nfunction _columnAutoClass(container, colIdx, className) {\n\tcontainer.forEach(function (row) {\n\t\tif (row[colIdx] && row[colIdx].unique) {\n\t\t\t_addClass(row[colIdx].cell, className);\n\t\t}\n\t});\n}\n\n/**\n * Take the column definitions and static columns arrays and calculate how\n * they relate to column indexes. The callback function will then apply the\n * definition found for a column to a suitable configuration object.\n *  @param {object} oSettings dataTables settings object\n *  @param {array} aoColDefs The aoColumnDefs array that is to be applied\n *  @param {array} aoCols The aoColumns array that defines columns individually\n *  @param {array} headerLayout Layout for header as it was loaded\n *  @param {function} fn Callback function - takes two parameters, the calculated\n *    column index and the definition for that column.\n *  @memberof DataTable#oApi\n */\nfunction _fnApplyColumnDefs( oSettings, aoColDefs, aoCols, headerLayout, fn )\n{\n\tvar i, iLen, j, jLen, k, kLen, def;\n\tvar columns = oSettings.aoColumns;\n\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tif (aoCols[i] && aoCols[i].name) {\n\t\t\t\tcolumns[i].sName = aoCols[i].name;\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column definitions with aTargets\n\tif ( aoColDefs )\n\t{\n\t\t/* Loop over the definitions array - loop in reverse so first instance has priority */\n\t\tfor ( i=aoColDefs.length-1 ; i>=0 ; i-- )\n\t\t{\n\t\t\tdef = aoColDefs[i];\n\n\t\t\t/* Each definition can target multiple columns, as it is an array */\n\t\t\tvar aTargets = def.target !== undefined\n\t\t\t\t? def.target\n\t\t\t\t: def.targets !== undefined\n\t\t\t\t\t? def.targets\n\t\t\t\t\t: def.aTargets;\n\n\t\t\tif ( ! Array.isArray( aTargets ) )\n\t\t\t{\n\t\t\t\taTargets = [ aTargets ];\n\t\t\t}\n\n\t\t\tfor ( j=0, jLen=aTargets.length ; j<jLen ; j++ )\n\t\t\t{\n\t\t\t\tvar target = aTargets[j];\n\n\t\t\t\tif ( typeof target === 'number' && target >= 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Add columns that we don't yet know about */\n\t\t\t\t\twhile( columns.length <= target )\n\t\t\t\t\t{\n\t\t\t\t\t\t_fnAddColumn( oSettings );\n\t\t\t\t\t}\n\n\t\t\t\t\t/* Integer, basic index */\n\t\t\t\t\tfn( target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'number' && target < 0 )\n\t\t\t\t{\n\t\t\t\t\t/* Negative integer, right to left column counting */\n\t\t\t\t\tfn( columns.length+target, def );\n\t\t\t\t}\n\t\t\t\telse if ( typeof target === 'string' )\n\t\t\t\t{\n\t\t\t\t\tfor ( k=0, kLen=columns.length ; k<kLen ; k++ ) {\n\t\t\t\t\t\tif (target === '_all') {\n\t\t\t\t\t\t\t// Apply to all columns\n\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if (target.indexOf(':name') !== -1) {\n\t\t\t\t\t\t\t// Column selector\n\t\t\t\t\t\t\tif (columns[k].sName === target.replace(':name', '')) {\n\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Cell selector\n\t\t\t\t\t\t\theaderLayout.forEach(function (row) {\n\t\t\t\t\t\t\t\tif (row[k]) {\n\t\t\t\t\t\t\t\t\tvar cell = $(row[k].cell);\n\n\t\t\t\t\t\t\t\t\t// Legacy support. Note that it means that we don't support\n\t\t\t\t\t\t\t\t\t// an element name selector only, since they are treated as\n\t\t\t\t\t\t\t\t\t// class names for 1.x compat.\n\t\t\t\t\t\t\t\t\tif (target.match(/^[a-z][\\w-]*$/i)) {\n\t\t\t\t\t\t\t\t\t\ttarget = '.' + target;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tif (cell.is( target )) {\n\t\t\t\t\t\t\t\t\t\tfn( k, def );\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Statically defined columns array\n\tif ( aoCols ) {\n\t\tfor ( i=0, iLen=aoCols.length ; i<iLen ; i++ ) {\n\t\t\tfn( i, aoCols[i] );\n\t\t}\n\t}\n}\n\n\n/**\n * Get the width for a given set of columns\n *\n * @param {*} settings DataTables settings object\n * @param {*} targets Columns - comma separated string or array of numbers\n * @param {*} original Use the original width (true) or calculated (false)\n * @param {*} incVisible Include visible columns (true) or not (false)\n * @returns Combined CSS value\n */\nfunction _fnColumnsSumWidth( settings, targets, original, incVisible ) {\n\tif ( ! Array.isArray( targets ) ) {\n\t\ttargets = _fnColumnsFromHeader( targets );\n\t}\n\n\tvar sum = 0;\n\tvar unit;\n\tvar columns = settings.aoColumns;\n\t\n\tfor ( var i=0, ien=targets.length ; i<ien ; i++ ) {\n\t\tvar column = columns[ targets[i] ];\n\t\tvar definedWidth = original ?\n\t\t\tcolumn.sWidthOrig :\n\t\t\tcolumn.sWidth;\n\n\t\tif ( ! incVisible && column.bVisible === false ) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif ( definedWidth === null || definedWidth === undefined ) {\n\t\t\treturn null; // can't determine a defined width - browser defined\n\t\t}\n\t\telse if ( typeof definedWidth === 'number' ) {\n\t\t\tunit = 'px';\n\t\t\tsum += definedWidth;\n\t\t}\n\t\telse {\n\t\t\tvar matched = definedWidth.match(/([\\d\\.]+)([^\\d]*)/);\n\n\t\t\tif ( matched ) {\n\t\t\t\tsum += matched[1] * 1;\n\t\t\t\tunit = matched.length === 3 ?\n\t\t\t\t\tmatched[2] :\n\t\t\t\t\t'px';\n\t\t\t}\n\t\t}\n\t}\n\n\treturn sum + unit;\n}\n\nfunction _fnColumnsFromHeader( cell )\n{\n\tvar attr = $(cell).closest('[data-dt-column]').attr('data-dt-column');\n\n\tif ( ! attr ) {\n\t\treturn [];\n\t}\n\n\treturn attr.split(',').map( function (val) {\n\t\treturn val * 1;\n\t} );\n}\n/**\n * Add a data array to the table, creating DOM node etc. This is the parallel to\n * _fnGatherData, but for adding rows from a Javascript source, rather than a\n * DOM source.\n *  @param {object} settings dataTables settings object\n *  @param {array} data data array to be added\n *  @param {node} [tr] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [tds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @returns {int} >=0 if successful (index of new aoData entry), -1 if failed\n *  @memberof DataTable#oApi\n */\nfunction _fnAddData ( settings, dataIn, tr, tds )\n{\n\t/* Create the object for storing information about this new row */\n\tvar rowIdx = settings.aoData.length;\n\tvar rowModel = $.extend( true, {}, DataTable.models.oRow, {\n\t\tsrc: tr ? 'dom' : 'data',\n\t\tidx: rowIdx\n\t} );\n\n\trowModel._aData = dataIn;\n\tsettings.aoData.push( rowModel );\n\n\tvar columns = settings.aoColumns;\n\n\tfor ( var i=0, iLen=columns.length ; i<iLen ; i++ )\n\t{\n\t\t// Invalidate the column types as the new data needs to be revalidated\n\t\tcolumns[i].sType = null;\n\t}\n\n\t/* Add to the display array */\n\tsettings.aiDisplayMaster.push( rowIdx );\n\n\tvar id = settings.rowIdFn( dataIn );\n\tif ( id !== undefined ) {\n\t\tsettings.aIds[ id ] = rowModel;\n\t}\n\n\t/* Create the DOM information, or register it if already present */\n\tif ( tr || ! settings.oFeatures.bDeferRender )\n\t{\n\t\t_fnCreateTr( settings, rowIdx, tr, tds );\n\t}\n\n\treturn rowIdx;\n}\n\n\n/**\n * Add one or more TR elements to the table. Generally we'd expect to\n * use this for reading data from a DOM sourced table, but it could be\n * used for an TR element. Note that if a TR is given, it is used (i.e.\n * it is not cloned).\n *  @param {object} settings dataTables settings object\n *  @param {array|node|jQuery} trs The TR element(s) to add to the table\n *  @returns {array} Array of indexes for the added rows\n *  @memberof DataTable#oApi\n */\nfunction _fnAddTr( settings, trs )\n{\n\tvar row;\n\n\t// Allow an individual node to be passed in\n\tif ( ! (trs instanceof $) ) {\n\t\ttrs = $(trs);\n\t}\n\n\treturn trs.map( function (i, el) {\n\t\trow = _fnGetRowElements( settings, el );\n\t\treturn _fnAddData( settings, row.data, el, row.cells );\n\t} );\n}\n\n\n/**\n * Get the data for a given cell from the internal cache, taking into account data mapping\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {string} type data get type ('display', 'type' 'filter|search' 'sort|order')\n *  @returns {*} Cell data\n *  @memberof DataTable#oApi\n */\nfunction _fnGetCellData( settings, rowIdx, colIdx, type )\n{\n\tif (type === 'search') {\n\t\ttype = 'filter';\n\t}\n\telse if (type === 'order') {\n\t\ttype = 'sort';\n\t}\n\n\tvar row = settings.aoData[rowIdx];\n\n\tif (! row) {\n\t\treturn undefined;\n\t}\n\n\tvar draw           = settings.iDraw;\n\tvar col            = settings.aoColumns[colIdx];\n\tvar rowData        = row._aData;\n\tvar defaultContent = col.sDefaultContent;\n\tvar cellData       = col.fnGetData( rowData, type, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t} );\n\n\t// Allow for a node being returned for non-display types\n\tif (type !== 'display' && cellData && typeof cellData === 'object' && cellData.nodeName) {\n\t\tcellData = cellData.innerHTML;\n\t}\n\n\tif ( cellData === undefined ) {\n\t\tif ( settings.iDrawError != draw && defaultContent === null ) {\n\t\t\t_fnLog( settings, 0, \"Requested unknown parameter \"+\n\t\t\t\t(typeof col.mData=='function' ? '{function}' : \"'\"+col.mData+\"'\")+\n\t\t\t\t\" for row \"+rowIdx+\", column \"+colIdx, 4 );\n\t\t\tsettings.iDrawError = draw;\n\t\t}\n\t\treturn defaultContent;\n\t}\n\n\t// When the data source is null and a specific data type is requested (i.e.\n\t// not the original data), we can use default column data\n\tif ( (cellData === rowData || cellData === null) && defaultContent !== null && type !== undefined ) {\n\t\tcellData = defaultContent;\n\t}\n\telse if ( typeof cellData === 'function' ) {\n\t\t// If the data source is a function, then we run it and use the return,\n\t\t// executing in the scope of the data object (for instances)\n\t\treturn cellData.call( rowData );\n\t}\n\n\tif ( cellData === null && type === 'display' ) {\n\t\treturn '';\n\t}\n\n\tif ( type === 'filter' ) {\n\t\tvar fomatters = DataTable.ext.type.search;\n\n\t\tif ( fomatters[ col.sType ] ) {\n\t\t\tcellData = fomatters[ col.sType ]( cellData );\n\t\t}\n\t}\n\n\treturn cellData;\n}\n\n\n/**\n * Set the value for a specific cell, into the internal data cache\n *  @param {object} settings dataTables settings object\n *  @param {int} rowIdx aoData row id\n *  @param {int} colIdx Column index\n *  @param {*} val Value to set\n *  @memberof DataTable#oApi\n */\nfunction _fnSetCellData( settings, rowIdx, colIdx, val )\n{\n\tvar col     = settings.aoColumns[colIdx];\n\tvar rowData = settings.aoData[rowIdx]._aData;\n\n\tcol.fnSetData( rowData, val, {\n\t\tsettings: settings,\n\t\trow:      rowIdx,\n\t\tcol:      colIdx\n\t}  );\n}\n\n/**\n * Write a value to a cell\n * @param {*} td Cell\n * @param {*} val Value\n */\nfunction _fnWriteCell(td, val)\n{\n\tif (val && typeof val === 'object' && val.nodeName) {\n\t\t$(td)\n\t\t\t.empty()\n\t\t\t.append(val);\n\t}\n\telse {\n\t\ttd.innerHTML = val;\n\t}\n}\n\n\n// Private variable that is used to match action syntax in the data property object\nvar __reArray = /\\[.*?\\]$/;\nvar __reFn = /\\(\\)$/;\n\n/**\n * Split string on periods, taking into account escaped periods\n * @param  {string} str String to split\n * @return {array} Split string\n */\nfunction _fnSplitObjNotation( str )\n{\n\tvar parts = str.match(/(\\\\.|[^.])+/g) || [''];\n\n\treturn parts.map( function ( s ) {\n\t\treturn s.replace(/\\\\\\./g, '.');\n\t} );\n}\n\n\n/**\n * Return a function that can be used to get data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data get function\n *  @memberof DataTable#oApi\n */\nvar _fnGetObjectDataFn = DataTable.util.get;\n\n\n/**\n * Return a function that can be used to set data from a source object, taking\n * into account the ability to use nested objects as a source\n *  @param {string|int|function} mSource The data source for the object\n *  @returns {function} Data set function\n *  @memberof DataTable#oApi\n */\nvar _fnSetObjectDataFn = DataTable.util.set;\n\n\n/**\n * Return an array with the full table data\n *  @param {object} oSettings dataTables settings object\n *  @returns array {array} aData Master data array\n *  @memberof DataTable#oApi\n */\nfunction _fnGetDataMaster ( settings )\n{\n\treturn _pluck( settings.aoData, '_aData' );\n}\n\n\n/**\n * Nuke the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnClearTable( settings )\n{\n\tsettings.aoData.length = 0;\n\tsettings.aiDisplayMaster.length = 0;\n\tsettings.aiDisplay.length = 0;\n\tsettings.aIds = {};\n}\n\n\n/**\n * Mark cached data as invalid such that a re-read of the data will occur when\n * the cached data is next requested. Also update from the data source object.\n *\n * @param {object} settings DataTables settings object\n * @param {int}    rowIdx   Row index to invalidate\n * @param {string} [src]    Source to invalidate from: undefined, 'auto', 'dom'\n *     or 'data'\n * @param {int}    [colIdx] Column index to invalidate. If undefined the whole\n *     row will be invalidated\n * @memberof DataTable#oApi\n *\n * @todo For the modularisation of v1.11 this will need to become a callback, so\n *   the sort and filter methods can subscribe to it. That will required\n *   initialisation options for sorting, which is why it is not already baked in\n */\nfunction _fnInvalidate( settings, rowIdx, src, colIdx )\n{\n\tvar row = settings.aoData[ rowIdx ];\n\tvar i, ien;\n\n\t// Remove the cached data for the row\n\trow._aSortData = null;\n\trow._aFilterData = null;\n\trow.displayData = null;\n\n\t// Are we reading last data from DOM or the data object?\n\tif ( src === 'dom' || ((! src || src === 'auto') && row.src === 'dom') ) {\n\t\t// Read the data from the DOM\n\t\trow._aData = _fnGetRowElements(\n\t\t\t\tsettings, row, colIdx, colIdx === undefined ? undefined : row._aData\n\t\t\t)\n\t\t\t.data;\n\t}\n\telse {\n\t\t// Reading from data object, update the DOM\n\t\tvar cells = row.anCells;\n\t\tvar display = _fnGetRowDisplay(settings, rowIdx);\n\n\t\tif ( cells ) {\n\t\t\tif ( colIdx !== undefined ) {\n\t\t\t\t_fnWriteCell(cells[colIdx], display[colIdx]);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfor ( i=0, ien=cells.length ; i<ien ; i++ ) {\n\t\t\t\t\t_fnWriteCell(cells[i], display[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Column specific invalidation\n\tvar cols = settings.aoColumns;\n\tif ( colIdx !== undefined ) {\n\t\t// Type - the data might have changed\n\t\tcols[ colIdx ].sType = null;\n\n\t\t// Max length string. Its a fairly cheep recalculation, so not worth\n\t\t// something more complicated\n\t\tcols[ colIdx ].maxLenString = null;\n\t}\n\telse {\n\t\tfor ( i=0, ien=cols.length ; i<ien ; i++ ) {\n\t\t\tcols[i].sType = null;\n\t\t\tcols[i].maxLenString = null;\n\t\t}\n\n\t\t// Update DataTables special `DT_*` attributes for the row\n\t\t_fnRowAttributes( settings, row );\n\t}\n}\n\n\n/**\n * Build a data source object from an HTML row, reading the contents of the\n * cells that are in the row.\n *\n * @param {object} settings DataTables settings object\n * @param {node|object} TR element from which to read data or existing row\n *   object from which to re-read the data from the cells\n * @param {int} [colIdx] Optional column index\n * @param {array|object} [d] Data source object. If `colIdx` is given then this\n *   parameter should also be given and will be used to write the data into.\n *   Only the column in question will be written\n * @returns {object} Object with two parameters: `data` the data read, in\n *   document order, and `cells` and array of nodes (they can be useful to the\n *   caller, so rather than needing a second traversal to get them, just return\n *   them from here).\n * @memberof DataTable#oApi\n */\nfunction _fnGetRowElements( settings, row, colIdx, d )\n{\n\tvar\n\t\ttds = [],\n\t\ttd = row.firstChild,\n\t\tname, col, i=0, contents,\n\t\tcolumns = settings.aoColumns,\n\t\tobjectRead = settings._rowReadObject;\n\n\t// Allow the data object to be passed in, or construct\n\td = d !== undefined ?\n\t\td :\n\t\tobjectRead ?\n\t\t\t{} :\n\t\t\t[];\n\n\tvar attr = function ( str, td  ) {\n\t\tif ( typeof str === 'string' ) {\n\t\t\tvar idx = str.indexOf('@');\n\n\t\t\tif ( idx !== -1 ) {\n\t\t\t\tvar attr = str.substring( idx+1 );\n\t\t\t\tvar setter = _fnSetObjectDataFn( str );\n\t\t\t\tsetter( d, td.getAttribute( attr ) );\n\t\t\t}\n\t\t}\n\t};\n\n\t// Read data from a cell and store into the data object\n\tvar cellProcess = function ( cell ) {\n\t\tif ( colIdx === undefined || colIdx === i ) {\n\t\t\tcol = columns[i];\n\t\t\tcontents = (cell.innerHTML).trim();\n\n\t\t\tif ( col && col._bAttrSrc ) {\n\t\t\t\tvar setter = _fnSetObjectDataFn( col.mData._ );\n\t\t\t\tsetter( d, contents );\n\n\t\t\t\tattr( col.mData.sort, cell );\n\t\t\t\tattr( col.mData.type, cell );\n\t\t\t\tattr( col.mData.filter, cell );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Depending on the `data` option for the columns the data can\n\t\t\t\t// be read to either an object or an array.\n\t\t\t\tif ( objectRead ) {\n\t\t\t\t\tif ( ! col._setter ) {\n\t\t\t\t\t\t// Cache the setter function\n\t\t\t\t\t\tcol._setter = _fnSetObjectDataFn( col.mData );\n\t\t\t\t\t}\n\t\t\t\t\tcol._setter( d, contents );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td[i] = contents;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ti++;\n\t};\n\n\tif ( td ) {\n\t\t// `tr` element was passed in\n\t\twhile ( td ) {\n\t\t\tname = td.nodeName.toUpperCase();\n\n\t\t\tif ( name == \"TD\" || name == \"TH\" ) {\n\t\t\t\tcellProcess( td );\n\t\t\t\ttds.push( td );\n\t\t\t}\n\n\t\t\ttd = td.nextSibling;\n\t\t}\n\t}\n\telse {\n\t\t// Existing row object passed in\n\t\ttds = row.anCells;\n\n\t\tfor ( var j=0, jen=tds.length ; j<jen ; j++ ) {\n\t\t\tcellProcess( tds[j] );\n\t\t}\n\t}\n\n\t// Read the ID from the DOM if present\n\tvar rowNode = row.firstChild ? row : row.nTr;\n\n\tif ( rowNode ) {\n\t\tvar id = rowNode.getAttribute( 'id' );\n\n\t\tif ( id ) {\n\t\t\t_fnSetObjectDataFn( settings.rowId )( d, id );\n\t\t}\n\t}\n\n\treturn {\n\t\tdata: d,\n\t\tcells: tds\n\t};\n}\n\n/**\n * Render and cache a row's display data for the columns, if required\n * @returns \n */\nfunction _fnGetRowDisplay (settings, rowIdx) {\n\tvar rowModal = settings.aoData[rowIdx];\n\tvar columns = settings.aoColumns;\n\n\tif (! rowModal.displayData) {\n\t\t// Need to render and cache\n\t\trowModal.displayData = [];\n\t\n\t\tfor ( var colIdx=0, len=columns.length ; colIdx<len ; colIdx++ ) {\n\t\t\trowModal.displayData.push(\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'display' )\n\t\t\t);\n\t\t}\n\t}\n\n\treturn rowModal.displayData;\n}\n\n/**\n * Create a new TR element (and it's TD children) for a row\n *  @param {object} oSettings dataTables settings object\n *  @param {int} iRow Row to consider\n *  @param {node} [nTrIn] TR element to add to the table - optional. If not given,\n *    DataTables will create a row automatically\n *  @param {array} [anTds] Array of TD|TH elements for the row - must be given\n *    if nTr is.\n *  @memberof DataTable#oApi\n */\nfunction _fnCreateTr ( oSettings, iRow, nTrIn, anTds )\n{\n\tvar\n\t\trow = oSettings.aoData[iRow],\n\t\trowData = row._aData,\n\t\tcells = [],\n\t\tnTr, nTd, oCol,\n\t\ti, iLen, create,\n\t\ttrClass = oSettings.oClasses.tbody.row;\n\n\tif ( row.nTr === null )\n\t{\n\t\tnTr = nTrIn || document.createElement('tr');\n\n\t\trow.nTr = nTr;\n\t\trow.anCells = cells;\n\n\t\t_addClass(nTr, trClass);\n\n\t\t/* Use a private property on the node to allow reserve mapping from the node\n\t\t * to the aoData array for fast look up\n\t\t */\n\t\tnTr._DT_RowIndex = iRow;\n\n\t\t/* Special parameters can be given by the data source to be used on the row */\n\t\t_fnRowAttributes( oSettings, row );\n\n\t\t/* Process each column */\n\t\tfor ( i=0, iLen=oSettings.aoColumns.length ; i<iLen ; i++ )\n\t\t{\n\t\t\toCol = oSettings.aoColumns[i];\n\t\t\tcreate = nTrIn && anTds[i] ? false : true;\n\n\t\t\tnTd = create ? document.createElement( oCol.sCellType ) : anTds[i];\n\n\t\t\tif (! nTd) {\n\t\t\t\t_fnLog( oSettings, 0, 'Incorrect column count', 18 );\n\t\t\t}\n\n\t\t\tnTd._DT_CellIndex = {\n\t\t\t\trow: iRow,\n\t\t\t\tcolumn: i\n\t\t\t};\n\t\t\t\n\t\t\tcells.push( nTd );\n\t\t\t\n\t\t\tvar display = _fnGetRowDisplay(oSettings, iRow);\n\n\t\t\t// Need to create the HTML if new, or if a rendering function is defined\n\t\t\tif (\n\t\t\t\tcreate ||\n\t\t\t\t(\n\t\t\t\t\t(oCol.mRender || oCol.mData !== i) &&\n\t\t\t\t\t(!$.isPlainObject(oCol.mData) || oCol.mData._ !== i+'.display')\n\t\t\t\t)\n\t\t\t) {\n\t\t\t\t_fnWriteCell(nTd, display[i]);\n\t\t\t}\n\n\t\t\t// column class\n\t\t\t_addClass(nTd, oCol.sClass);\n\n\t\t\t// Visibility - add or remove as required\n\t\t\tif ( oCol.bVisible && create )\n\t\t\t{\n\t\t\t\tnTr.appendChild( nTd );\n\t\t\t}\n\t\t\telse if ( ! oCol.bVisible && ! create )\n\t\t\t{\n\t\t\t\tnTd.parentNode.removeChild( nTd );\n\t\t\t}\n\n\t\t\tif ( oCol.fnCreatedCell )\n\t\t\t{\n\t\t\t\toCol.fnCreatedCell.call( oSettings.oInstance,\n\t\t\t\t\tnTd, _fnGetCellData( oSettings, iRow, i ), rowData, iRow, i\n\t\t\t\t);\n\t\t\t}\n\t\t}\n\n\t\t_fnCallbackFire( oSettings, 'aoRowCreatedCallback', 'row-created', [nTr, rowData, iRow, cells] );\n\t}\n\telse {\n\t\t_addClass(row.nTr, trClass);\n\t}\n}\n\n\n/**\n * Add attributes to a row based on the special `DT_*` parameters in a data\n * source object.\n *  @param {object} settings DataTables settings object\n *  @param {object} DataTables row object for the row to be modified\n *  @memberof DataTable#oApi\n */\nfunction _fnRowAttributes( settings, row )\n{\n\tvar tr = row.nTr;\n\tvar data = row._aData;\n\n\tif ( tr ) {\n\t\tvar id = settings.rowIdFn( data );\n\n\t\tif ( id ) {\n\t\t\ttr.id = id;\n\t\t}\n\n\t\tif ( data.DT_RowClass ) {\n\t\t\t// Remove any classes added by DT_RowClass before\n\t\t\tvar a = data.DT_RowClass.split(' ');\n\t\t\trow.__rowc = row.__rowc ?\n\t\t\t\t_unique( row.__rowc.concat( a ) ) :\n\t\t\t\ta;\n\n\t\t\t$(tr)\n\t\t\t\t.removeClass( row.__rowc.join(' ') )\n\t\t\t\t.addClass( data.DT_RowClass );\n\t\t}\n\n\t\tif ( data.DT_RowAttr ) {\n\t\t\t$(tr).attr( data.DT_RowAttr );\n\t\t}\n\n\t\tif ( data.DT_RowData ) {\n\t\t\t$(tr).data( data.DT_RowData );\n\t\t}\n\t}\n}\n\n\n/**\n * Create the HTML header for the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnBuildHead( settings, side )\n{\n\tvar classes = settings.oClasses;\n\tvar columns = settings.aoColumns;\n\tvar i, ien, row;\n\tvar target = side === 'header'\n\t\t? settings.nTHead\n\t\t: settings.nTFoot;\n\tvar titleProp = side === 'header' ? 'sTitle' : side;\n\n\t// Footer might be defined\n\tif (! target) {\n\t\treturn;\n\t}\n\n\t// If no cells yet and we have content for them, then create\n\tif (side === 'header' || _pluck(settings.aoColumns, titleProp).join('')) {\n\t\trow = $('tr', target);\n\n\t\t// Add a row if needed\n\t\tif (! row.length) {\n\t\t\trow = $('<tr/>').appendTo(target)\n\t\t}\n\n\t\t// Add the number of cells needed to make up to the number of columns\n\t\tif (row.length === 1) {\n\t\t\tvar cells = $('td, th', row);\n\n\t\t\tfor ( i=cells.length, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\t$('<th/>')\n\t\t\t\t\t.html( columns[i][titleProp] || '' )\n\t\t\t\t\t.appendTo( row );\n\t\t\t}\n\t\t}\n\t}\n\n\tvar detected = _fnDetectHeader( settings, target, true );\n\n\tif (side === 'header') {\n\t\tsettings.aoHeader = detected;\n\t}\n\telse {\n\t\tsettings.aoFooter = detected;\n\t}\n\n\t// Every cell needs to be passed through the renderer\n\t$(target).children('tr').children('th, td')\n\t\t.each( function () {\n\t\t\t_fnRenderer( settings, side )(\n\t\t\t\tsettings, $(this), classes\n\t\t\t);\n\t\t} );\n}\n\n/**\n * Build a layout structure for a header or footer\n *\n * @param {*} settings DataTables settings\n * @param {*} source Source layout array\n * @param {*} incColumns What columns should be included\n * @returns Layout array\n */\nfunction _fnHeaderLayout( settings, source, incColumns )\n{\n\tvar row, column, cell;\n\tvar local = [];\n\tvar structure = [];\n\tvar columns = settings.aoColumns;\n\tvar columnCount = columns.length;\n\tvar rowspan, colspan;\n\n\tif ( ! source ) {\n\t\treturn;\n\t}\n\n\t// Default is to work on only visible columns\n\tif ( ! incColumns ) {\n\t\tincColumns = _range(columnCount)\n\t\t\t.filter(function (idx) {\n\t\t\t\treturn columns[idx].bVisible;\n\t\t\t});\n\t}\n\n\t// Make a copy of the master layout array, but with only the columns we want\n\tfor ( row=0 ; row<source.length ; row++ ) {\n\t\t// Remove any columns we haven't selected\n\t\tlocal[row] = source[row].slice().filter(function (cell, i) {\n\t\t\treturn incColumns.includes(i);\n\t\t});\n\n\t\t// Prep the structure array - it needs an element for each row\n\t\tstructure.push( [] );\n\t}\n\n\tfor ( row=0 ; row<local.length ; row++ ) {\n\t\tfor ( column=0 ; column<local[row].length ; column++ ) {\n\t\t\trowspan = 1;\n\t\t\tcolspan = 1;\n\n\t\t\t// Check to see if there is already a cell (row/colspan) covering our target\n\t\t\t// insert point. If there is, then there is nothing to do.\n\t\t\tif ( structure[row][column] === undefined ) {\n\t\t\t\tcell = local[row][column].cell;\n\n\t\t\t\t// Expand for rowspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row+rowspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row+rowspan][column].cell\n\t\t\t\t) {\n\t\t\t\t\tstructure[row+rowspan][column] = null;\n\t\t\t\t\trowspan++;\n\t\t\t\t}\n\n\t\t\t\t// And for colspan\n\t\t\t\twhile (\n\t\t\t\t\tlocal[row][column+colspan] !== undefined &&\n\t\t\t\t\tlocal[row][column].cell == local[row][column+colspan].cell\n\t\t\t\t) {\n\t\t\t\t\t// Which also needs to go over rows\n\t\t\t\t\tfor ( var k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tstructure[row+k][column+colspan] = null;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolspan++;\n\t\t\t\t}\n\n\t\t\t\tvar titleSpan = $('span.dt-column-title', cell);\n\n\t\t\t\tstructure[row][column] = {\n\t\t\t\t\tcell: cell,\n\t\t\t\t\tcolspan: colspan,\n\t\t\t\t\trowspan: rowspan,\n\t\t\t\t\ttitle: titleSpan.length\n\t\t\t\t\t\t? titleSpan.html()\n\t\t\t\t\t\t: $(cell).html()\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\treturn structure;\n}\n\n\n/**\n * Draw the header (or footer) element based on the column visibility states.\n *\n *  @param object oSettings dataTables settings object\n *  @param array aoSource Layout array from _fnDetectHeader\n *  @memberof DataTable#oApi\n */\nfunction _fnDrawHead( settings, source )\n{\n\tvar layout = _fnHeaderLayout(settings, source);\n\tvar tr, n;\n\n\tfor ( var row=0 ; row<source.length ; row++ ) {\n\t\ttr = source[row].row;\n\n\t\t// All cells are going to be replaced, so empty out the row\n\t\t// Can't use $().empty() as that kills event handlers\n\t\tif (tr) {\n\t\t\twhile( (n = tr.firstChild) ) {\n\t\t\t\ttr.removeChild( n );\n\t\t\t}\n\t\t}\n\n\t\tfor ( var column=0 ; column<layout[row].length ; column++ ) {\n\t\t\tvar point = layout[row][column];\n\n\t\t\tif (point) {\n\t\t\t\t$(point.cell)\n\t\t\t\t\t.appendTo(tr)\n\t\t\t\t\t.attr('rowspan', point.rowspan)\n\t\t\t\t\t.attr('colspan', point.colspan);\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n/**\n * Insert the required TR nodes into the table for display\n *  @param {object} oSettings dataTables settings object\n *  @param ajaxComplete true after ajax call to complete rendering\n *  @memberof DataTable#oApi\n */\nfunction _fnDraw( oSettings, ajaxComplete )\n{\n\t// Allow for state saving and a custom start position\n\t_fnStart( oSettings );\n\n\t/* Provide a pre-callback function which can be used to cancel the draw is false is returned */\n\tvar aPreDraw = _fnCallbackFire( oSettings, 'aoPreDrawCallback', 'preDraw', [oSettings] );\n\tif ( aPreDraw.indexOf(false) !== -1 )\n\t{\n\t\t_fnProcessingDisplay( oSettings, false );\n\t\treturn;\n\t}\n\n\tvar anRows = [];\n\tvar iRowCount = 0;\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar aiDisplay = oSettings.aiDisplay;\n\tvar iDisplayStart = oSettings._iDisplayStart;\n\tvar iDisplayEnd = oSettings.fnDisplayEnd();\n\tvar columns = oSettings.aoColumns;\n\tvar body = $(oSettings.nTBody);\n\n\toSettings.bDrawing = true;\n\n\t/* Server-side processing draw intercept */\n\tif ( oSettings.deferLoading )\n\t{\n\t\toSettings.deferLoading = false;\n\t\toSettings.iDraw++;\n\t\t_fnProcessingDisplay( oSettings, false );\n\t}\n\telse if ( !bServerSide )\n\t{\n\t\toSettings.iDraw++;\n\t}\n\telse if ( !oSettings.bDestroying && !ajaxComplete)\n\t{\n\t\t// Show loading message for server-side processing\n\t\tif (oSettings.iDraw === 0) {\n\t\t\tbody.empty().append(_emptyRow(oSettings));\n\t\t}\n\n\t\t_fnAjaxUpdate( oSettings );\n\t\treturn;\n\t}\n\n\tif ( aiDisplay.length !== 0 )\n\t{\n\t\tvar iStart = bServerSide ? 0 : iDisplayStart;\n\t\tvar iEnd = bServerSide ? oSettings.aoData.length : iDisplayEnd;\n\n\t\tfor ( var j=iStart ; j<iEnd ; j++ )\n\t\t{\n\t\t\tvar iDataIndex = aiDisplay[j];\n\t\t\tvar aoData = oSettings.aoData[ iDataIndex ];\n\t\t\tif ( aoData.nTr === null )\n\t\t\t{\n\t\t\t\t_fnCreateTr( oSettings, iDataIndex );\n\t\t\t}\n\n\t\t\tvar nRow = aoData.nTr;\n\n\t\t\t// Add various classes as needed\n\t\t\tfor (var i=0 ; i<columns.length ; i++) {\n\t\t\t\tvar col = columns[i];\n\t\t\t\tvar td = aoData.anCells[i];\n\n\t\t\t\t_addClass(td, _ext.type.className[col.sType]); // auto class\n\t\t\t\t_addClass(td, oSettings.oClasses.tbody.cell); // all cells\n\t\t\t}\n\n\t\t\t// Row callback functions - might want to manipulate the row\n\t\t\t// iRowCount and j are not currently documented. Are they at all\n\t\t\t// useful?\n\t\t\t_fnCallbackFire( oSettings, 'aoRowCallback', null,\n\t\t\t\t[nRow, aoData._aData, iRowCount, j, iDataIndex] );\n\n\t\t\tanRows.push( nRow );\n\t\t\tiRowCount++;\n\t\t}\n\t}\n\telse\n\t{\n\t\tanRows[ 0 ] = _emptyRow(oSettings);\n\t}\n\n\t/* Header and footer callbacks */\n\t_fnCallbackFire( oSettings, 'aoHeaderCallback', 'header', [ $(oSettings.nTHead).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t_fnCallbackFire( oSettings, 'aoFooterCallback', 'footer', [ $(oSettings.nTFoot).children('tr')[0],\n\t\t_fnGetDataMaster( oSettings ), iDisplayStart, iDisplayEnd, aiDisplay ] );\n\n\t// replaceChildren is faster, but only became widespread in 2020,\n\t// so a fall back in jQuery is provided for older browsers.\n\tif (body[0].replaceChildren) {\n\t\tbody[0].replaceChildren.apply(body[0], anRows);\n\t}\n\telse {\n\t\tbody.children().detach();\n\t\tbody.append( $(anRows) );\n\t}\n\n\t// Empty table needs a specific class\n\t$(oSettings.nTableWrapper).toggleClass('dt-empty-footer', $('tr', oSettings.nTFoot).length === 0);\n\n\t/* Call all required callback functions for the end of a draw */\n\t_fnCallbackFire( oSettings, 'aoDrawCallback', 'draw', [oSettings], true );\n\n\t/* Draw is complete, sorting and filtering must be as well */\n\toSettings.bSorted = false;\n\toSettings.bFiltered = false;\n\toSettings.bDrawing = false;\n}\n\n\n/**\n * Redraw the table - taking account of the various features which are enabled\n *  @param {object} oSettings dataTables settings object\n *  @param {boolean} [holdPosition] Keep the current paging position. By default\n *    the paging is reset to the first page\n *  @memberof DataTable#oApi\n */\nfunction _fnReDraw( settings, holdPosition, recompute )\n{\n\tvar\n\t\tfeatures = settings.oFeatures,\n\t\tsort     = features.bSort,\n\t\tfilter   = features.bFilter;\n\n\tif (recompute === undefined || recompute === true) {\n\t\t// Resolve any column types that are unknown due to addition or invalidation\n\t\t_fnColumnTypes( settings );\n\n\t\tif ( sort ) {\n\t\t\t_fnSort( settings );\n\t\t}\n\n\t\tif ( filter ) {\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t}\n\t\telse {\n\t\t\t// No filtering, so we want to just use the display master\n\t\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\t\t}\n\t}\n\n\tif ( holdPosition !== true ) {\n\t\tsettings._iDisplayStart = 0;\n\t}\n\n\t// Let any modules know about the draw hold position state (used by\n\t// scrolling internally)\n\tsettings._drawHold = holdPosition;\n\n\t_fnDraw( settings );\n\n\tsettings._drawHold = false;\n}\n\n\n/*\n * Table is empty - create a row with an empty message in it\n */\nfunction _emptyRow ( settings ) {\n\tvar oLang = settings.oLanguage;\n\tvar zero = oLang.sZeroRecords;\n\tvar dataSrc = _fnDataSource( settings );\n\n\tif (\n\t\t(settings.iDraw < 1 && dataSrc === 'ssp') ||\n\t\t(settings.iDraw <= 1 && dataSrc === 'ajax')\n\t) {\n\t\tzero = oLang.sLoadingRecords;\n\t}\n\telse if ( oLang.sEmptyTable && settings.fnRecordsTotal() === 0 )\n\t{\n\t\tzero = oLang.sEmptyTable;\n\t}\n\n\treturn $( '<tr/>' )\n\t\t.append( $('<td />', {\n\t\t\t'colSpan': _fnVisbleColumns( settings ),\n\t\t\t'class':   settings.oClasses.empty.row\n\t\t} ).html( zero ) )[0];\n}\n\n\n/**\n * Expand the layout items into an object for the rendering function\n */\nfunction _layoutItems (row, align, items) {\n\tif ( Array.isArray(items)) {\n\t\tfor (var i=0 ; i<items.length ; i++) {\n\t\t\t_layoutItems(row, align, items[i]);\n\t\t}\n\n\t\treturn;\n\t}\n\n\tvar rowCell = row[align];\n\n\t// If it is an object, then there can be multiple features contained in it\n\tif ( $.isPlainObject( items ) ) {\n\t\t// A feature plugin cannot be named \"features\" due to this check\n\t\tif (items.features) {\n\t\t\tif (items.rowId) {\n\t\t\t\trow.id = items.rowId;\n\t\t\t}\n\t\t\tif (items.rowClass) {\n\t\t\t\trow.className = items.rowClass;\n\t\t\t}\n\n\t\t\trowCell.id = items.id;\n\t\t\trowCell.className = items.className;\n\n\t\t\t_layoutItems(row, align, items.features);\n\t\t}\n\t\telse {\n\t\t\tObject.keys(items).map(function (key) {\n\t\t\t\trowCell.contents.push( {\n\t\t\t\t\tfeature: key,\n\t\t\t\t\topts: items[key]\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n\telse {\n\t\trowCell.contents.push(items);\n\t}\n}\n\n/**\n * Find, or create a layout row\n */\nfunction _layoutGetRow(rows, rowNum, align) {\n\tvar row;\n\n\t// Find existing rows\n\tfor (var i=0; i<rows.length; i++) {\n\t\trow = rows[i];\n\n\t\tif (row.rowNum === rowNum) {\n\t\t\t// full is on its own, but start and end share a row\n\t\t\tif (\n\t\t\t\t(align === 'full' && row.full) ||\n\t\t\t\t((align === 'start' || align === 'end') && (row.start || row.end))\n\t\t\t) {\n\t\t\t\tif (! row[align]) {\n\t\t\t\t\trow[align] = {\n\t\t\t\t\t\tcontents: []\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\treturn row;\n\t\t\t}\n\t\t}\n\t}\n\n\t// If we get this far, then there was no match, create a new row\n\trow = {\n\t\trowNum: rowNum\t\n\t};\n\n\trow[align] = {\n\t\tcontents: []\n\t};\n\n\trows.push(row);\n\n\treturn row;\n}\n\n/**\n * Convert a `layout` object given by a user to the object structure needed\n * for the renderer. This is done twice, once for above and once for below\n * the table. Ordering must also be considered.\n *\n * @param {*} settings DataTables settings object\n * @param {*} layout Layout object to convert\n * @param {string} side `top` or `bottom`\n * @returns Converted array structure - one item for each row.\n */\nfunction _layoutArray ( settings, layout, side ) {\n\tvar rows = [];\n\t\n\t// Split out into an array\n\t$.each( layout, function ( pos, items ) {\n\t\tif (items === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar parts = pos.match(/^([a-z]+)([0-9]*)([A-Za-z]*)$/);\n\t\tvar rowNum = parts[2]\n\t\t\t? parts[2] * 1\n\t\t\t: 0;\n\t\tvar align = parts[3]\n\t\t\t? parts[3].toLowerCase()\n\t\t\t: 'full';\n\n\t\t// Filter out the side we aren't interested in\n\t\tif (parts[1] !== side) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Get or create the row we should attach to\n\t\tvar row = _layoutGetRow(rows, rowNum, align);\n\n\t\t_layoutItems(row, align, items);\n\t});\n\n\t// Order by item identifier\n\trows.sort( function ( a, b ) {\n\t\tvar order1 = a.rowNum;\n\t\tvar order2 = b.rowNum;\n\n\t\t// If both in the same row, then the row with `full` comes first\n\t\tif (order1 === order2) {\n\t\t\tvar ret = a.full && ! b.full ? -1 : 1;\n\n\t\t\treturn side === 'bottom'\n\t\t\t\t? ret * -1\n\t\t\t\t: ret;\n\t\t}\n\n\t\treturn order2 - order1;\n\t} );\n\n\t// Invert for below the table\n\tif ( side === 'bottom' ) {\n\t\trows.reverse();\n\t}\n\n\tfor (var row = 0; row<rows.length; row++) {\n\t\tdelete rows[row].rowNum;\n\n\t\t_layoutResolve(settings, rows[row]);\n\t}\n\n\treturn rows;\n}\n\n\n/**\n * Convert the contents of a row's layout object to nodes that can be inserted\n * into the document by a renderer. Execute functions, look up plug-ins, etc.\n *\n * @param {*} settings DataTables settings object\n * @param {*} row Layout object for this row\n */\nfunction _layoutResolve( settings, row ) {\n\tvar getFeature = function (feature, opts) {\n\t\tif ( ! _ext.features[ feature ] ) {\n\t\t\t_fnLog( settings, 0, 'Unknown feature: '+ feature );\n\t\t}\n\n\t\treturn _ext.features[ feature ].apply( this, [settings, opts] );\n\t};\n\n\tvar resolve = function ( item ) {\n\t\tif (! row[ item ]) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar line = row[ item ].contents;\n\n\t\tfor ( var i=0, ien=line.length ; i<ien ; i++ ) {\n\t\t\tif ( ! line[i] ) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'string' ) {\n\t\t\t\tline[i] = getFeature( line[i], null );\n\t\t\t}\n\t\t\telse if ( $.isPlainObject(line[i]) ) {\n\t\t\t\t// If it's an object, it just has feature and opts properties from\n\t\t\t\t// the transform in _layoutArray\n\t\t\t\tline[i] = getFeature(line[i].feature, line[i].opts);\n\t\t\t}\n\t\t\telse if ( typeof line[i].node === 'function' ) {\n\t\t\t\tline[i] = line[i].node( settings );\n\t\t\t}\n\t\t\telse if ( typeof line[i] === 'function' ) {\n\t\t\t\tvar inst = line[i]( settings );\n\n\t\t\t\tline[i] = typeof inst.node === 'function' ?\n\t\t\t\t\tinst.node() :\n\t\t\t\t\tinst;\n\t\t\t}\n\t\t}\n\t};\n\n\tresolve('start');\n\tresolve('end');\n\tresolve('full');\n}\n\n\n/**\n * Add the options to the page HTML for the table\n *  @param {object} settings DataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnAddOptionsHtml ( settings )\n{\n\tvar classes = settings.oClasses;\n\tvar table = $(settings.nTable);\n\n\t// Wrapper div around everything DataTables controls\n\tvar insert = $('<div/>')\n\t\t.attr({\n\t\t\tid:      settings.sTableId+'_wrapper',\n\t\t\t'class': classes.container\n\t\t})\n\t\t.insertBefore(table);\n\n\tsettings.nTableWrapper = insert[0];\n\n\tif (settings.sDom) {\n\t\t// Legacy\n\t\t_fnLayoutDom(settings, settings.sDom, insert);\n\t}\n\telse {\n\t\tvar top = _layoutArray( settings, settings.layout, 'top' );\n\t\tvar bottom = _layoutArray( settings, settings.layout, 'bottom' );\n\t\tvar renderer = _fnRenderer( settings, 'layout' );\n\t\n\t\t// Everything above - the renderer will actually insert the contents into the document\n\t\ttop.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\n\t\t// The table - always the center of attention\n\t\trenderer( settings, insert, {\n\t\t\tfull: {\n\t\t\t\ttable: true,\n\t\t\t\tcontents: [ _fnFeatureHtmlTable(settings) ]\n\t\t\t}\n\t\t} );\n\n\t\t// Everything below\n\t\tbottom.forEach(function (item) {\n\t\t\trenderer( settings, insert, item );\n\t\t});\n\t}\n\n\t// Processing floats on top, so it isn't an inserted feature\n\t_processingHtml( settings );\n}\n\n/**\n * Draw the table with the legacy DOM property\n * @param {*} settings DT settings object\n * @param {*} dom DOM string\n * @param {*} insert Insert point\n */\nfunction _fnLayoutDom( settings, dom, insert )\n{\n\tvar parts = dom.match(/(\".*?\")|('.*?')|./g);\n\tvar featureNode, option, newNode, next, attr;\n\n\tfor ( var i=0 ; i<parts.length ; i++ ) {\n\t\tfeatureNode = null;\n\t\toption = parts[i];\n\n\t\tif ( option == '<' ) {\n\t\t\t// New container div\n\t\t\tnewNode = $('<div/>');\n\n\t\t\t// Check to see if we should append an id and/or a class name to the container\n\t\t\tnext = parts[i+1];\n\n\t\t\tif ( next[0] == \"'\" || next[0] == '\"' ) {\n\t\t\t\tattr = next.replace(/['\"]/g, '');\n\n\t\t\t\tvar id = '', className;\n\n\t\t\t\t/* The attribute can be in the format of \"#id.class\", \"#id\" or \"class\" This logic\n\t\t\t\t * breaks the string into parts and applies them as needed\n\t\t\t\t */\n\t\t\t\tif ( attr.indexOf('.') != -1 ) {\n\t\t\t\t\tvar split = attr.split('.');\n\n\t\t\t\t\tid = split[0];\n\t\t\t\t\tclassName = split[1];\n\t\t\t\t}\n\t\t\t\telse if ( attr[0] == \"#\" ) {\n\t\t\t\t\tid = attr;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tclassName = attr;\n\t\t\t\t}\n\n\t\t\t\tnewNode\n\t\t\t\t\t.attr('id', id.substring(1))\n\t\t\t\t\t.addClass(className);\n\n\t\t\t\ti++; // Move along the position array\n\t\t\t}\n\n\t\t\tinsert.append( newNode );\n\t\t\tinsert = newNode;\n\t\t}\n\t\telse if ( option == '>' ) {\n\t\t\t// End container div\n\t\t\tinsert = insert.parent();\n\t\t}\n\t\telse if ( option == 't' ) {\n\t\t\t// Table\n\t\t\tfeatureNode = _fnFeatureHtmlTable( settings );\n\t\t}\n\t\telse\n\t\t{\n\t\t\tDataTable.ext.feature.forEach(function(feature) {\n\t\t\t\tif ( option == feature.cFeature ) {\n\t\t\t\t\tfeatureNode = feature.fnInit( settings );\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\n\t\t// Add to the display\n\t\tif ( featureNode ) {\n\t\t\tinsert.append( featureNode );\n\t\t}\n\t}\n}\n\n\n/**\n * Use the DOM source to create up an array of header cells. The idea here is to\n * create a layout grid (array) of rows x columns, which contains a reference\n * to the cell that that point in the grid (regardless of col/rowspan), such that\n * any column / row could be removed and the new grid constructed\n *  @param {node} thead The header/footer element for the table\n *  @returns {array} Calculated layout array\n *  @memberof DataTable#oApi\n */\nfunction _fnDetectHeader ( settings, thead, write )\n{\n\tvar columns = settings.aoColumns;\n\tvar rows = $(thead).children('tr');\n\tvar row, cell;\n\tvar i, k, l, iLen, shifted, column, colspan, rowspan;\n\tvar isHeader = thead && thead.nodeName.toLowerCase() === 'thead';\n\tvar layout = [];\n\tvar unique;\n\tvar shift = function ( a, i, j ) {\n\t\tvar k = a[i];\n\t\twhile ( k[j] ) {\n\t\t\tj++;\n\t\t}\n\t\treturn j;\n\t};\n\n\t// We know how many rows there are in the layout - so prep it\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\tlayout.push( [] );\n\t}\n\n\tfor ( i=0, iLen=rows.length ; i<iLen ; i++ ) {\n\t\trow = rows[i];\n\t\tcolumn = 0;\n\n\t\t// For every cell in the row..\n\t\tcell = row.firstChild;\n\t\twhile ( cell ) {\n\t\t\tif (\n\t\t\t\tcell.nodeName.toUpperCase() == 'TD' ||\n\t\t\t\tcell.nodeName.toUpperCase() == 'TH'\n\t\t\t) {\n\t\t\t\tvar cols = [];\n\n\t\t\t\t// Get the col and rowspan attributes from the DOM and sanitise them\n\t\t\t\tcolspan = cell.getAttribute('colspan') * 1;\n\t\t\t\trowspan = cell.getAttribute('rowspan') * 1;\n\t\t\t\tcolspan = (!colspan || colspan===0 || colspan===1) ? 1 : colspan;\n\t\t\t\trowspan = (!rowspan || rowspan===0 || rowspan===1) ? 1 : rowspan;\n\n\t\t\t\t// There might be colspan cells already in this row, so shift our target\n\t\t\t\t// accordingly\n\t\t\t\tshifted = shift( layout, i, column );\n\n\t\t\t\t// Cache calculation for unique columns\n\t\t\t\tunique = colspan === 1 ?\n\t\t\t\t\ttrue :\n\t\t\t\t\tfalse;\n\t\t\t\t\n\t\t\t\t// Perform header setup\n\t\t\t\tif ( write ) {\n\t\t\t\t\tif (unique) {\n\t\t\t\t\t\t// Allow column options to be set from HTML attributes\n\t\t\t\t\t\t_fnColumnOptions( settings, shifted, $(cell).data() );\n\t\t\t\t\t\t\n\t\t\t\t\t\t// Get the width for the column. This can be defined from the\n\t\t\t\t\t\t// width attribute, style attribute or `columns.width` option\n\t\t\t\t\t\tvar columnDef = columns[shifted];\n\t\t\t\t\t\tvar width = cell.getAttribute('width') || null;\n\t\t\t\t\t\tvar t = cell.style.width.match(/width:\\s*(\\d+[pxem%]+)/);\n\t\t\t\t\t\tif ( t ) {\n\t\t\t\t\t\t\twidth = t[1];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcolumnDef.sWidthOrig = columnDef.sWidth || width;\n\n\t\t\t\t\t\tif (isHeader) {\n\t\t\t\t\t\t\t// Column title handling - can be user set, or read from the DOM\n\t\t\t\t\t\t\t// This happens before the render, so the original is still in place\n\t\t\t\t\t\t\tif ( columnDef.sTitle !== null && ! columnDef.autoTitle ) {\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.sTitle;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (! columnDef.sTitle && unique) {\n\t\t\t\t\t\t\t\tcolumnDef.sTitle = _stripHtml(cell.innerHTML);\n\t\t\t\t\t\t\t\tcolumnDef.autoTitle = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// Footer specific operations\n\t\t\t\t\t\t\tif (columnDef.footer) {\n\t\t\t\t\t\t\t\tcell.innerHTML = columnDef.footer;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Fall back to the aria-label attribute on the table header if no ariaTitle is\n\t\t\t\t\t\t// provided.\n\t\t\t\t\t\tif (! columnDef.ariaTitle) {\n\t\t\t\t\t\t\tcolumnDef.ariaTitle = $(cell).attr(\"aria-label\") || columnDef.sTitle;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Column specific class names\n\t\t\t\t\t\tif ( columnDef.className ) {\n\t\t\t\t\t\t\t$(cell).addClass( columnDef.className );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wrap the column title so we can write to it in future\n\t\t\t\t\tif ( $('span.dt-column-title', cell).length === 0) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-title')\n\t\t\t\t\t\t\t.append(cell.childNodes)\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isHeader && $('span.dt-column-order', cell).length === 0) {\n\t\t\t\t\t\t$('<span>')\n\t\t\t\t\t\t\t.addClass('dt-column-order')\n\t\t\t\t\t\t\t.appendTo(cell);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t// If there is col / rowspan, copy the information into the layout grid\n\t\t\t\tfor ( l=0 ; l<colspan ; l++ ) {\n\t\t\t\t\tfor ( k=0 ; k<rowspan ; k++ ) {\n\t\t\t\t\t\tlayout[i+k][shifted+l] = {\n\t\t\t\t\t\t\tcell: cell,\n\t\t\t\t\t\t\tunique: unique\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\tlayout[i+k].row = row;\n\t\t\t\t\t}\n\n\t\t\t\t\tcols.push( shifted+l );\n\t\t\t\t}\n\n\t\t\t\t// Assign an attribute so spanning cells can still be identified\n\t\t\t\t// as belonging to a column\n\t\t\t\tcell.setAttribute('data-dt-column', _unique(cols).join(','));\n\t\t\t}\n\n\t\t\tcell = cell.nextSibling;\n\t\t}\n\t}\n\n\treturn layout;\n}\n\n/**\n * Set the start position for draw\n *  @param {object} oSettings dataTables settings object\n */\nfunction _fnStart( oSettings )\n{\n\tvar bServerSide = _fnDataSource( oSettings ) == 'ssp';\n\tvar iInitDisplayStart = oSettings.iInitDisplayStart;\n\n\t// Check and see if we have an initial draw position from state saving\n\tif ( iInitDisplayStart !== undefined && iInitDisplayStart !== -1 )\n\t{\n\t\toSettings._iDisplayStart = bServerSide ?\n\t\t\tiInitDisplayStart :\n\t\t\tiInitDisplayStart >= oSettings.fnRecordsDisplay() ?\n\t\t\t\t0 :\n\t\t\t\tiInitDisplayStart;\n\n\t\toSettings.iInitDisplayStart = -1;\n\t}\n}\n\n/**\n * Create an Ajax call based on the table's settings, taking into account that\n * parameters can have multiple forms, and backwards compatibility.\n *\n * @param {object} oSettings dataTables settings object\n * @param {array} data Data to send to the server, required by\n *     DataTables - may be augmented by developer callbacks\n * @param {function} fn Callback function to run when data is obtained\n */\nfunction _fnBuildAjax( oSettings, data, fn )\n{\n\tvar ajaxData;\n\tvar ajax = oSettings.ajax;\n\tvar instance = oSettings.oInstance;\n\tvar callback = function ( json ) {\n\t\tvar status = oSettings.jqXHR\n\t\t\t? oSettings.jqXHR.status\n\t\t\t: null;\n\n\t\tif ( json === null || (typeof status === 'number' && status == 204 ) ) {\n\t\t\tjson = {};\n\t\t\t_fnAjaxDataSrc( oSettings, json, [] );\n\t\t}\n\n\t\tvar error = json.error || json.sError;\n\t\tif ( error ) {\n\t\t\t_fnLog( oSettings, 0, error );\n\t\t}\n\n\t\t// Microsoft often wrap JSON as a string in another JSON object\n\t\t// Let's handle that automatically\n\t\tif (json.d && typeof json.d === 'string') {\n\t\t\ttry {\n\t\t\t\tjson = JSON.parse(json.d);\n\t\t\t}\n\t\t\tcatch (e) {\n\t\t\t\t// noop\n\t\t\t}\n\t\t}\n\n\t\toSettings.json = json;\n\n\t\t_fnCallbackFire( oSettings, null, 'xhr', [oSettings, json, oSettings.jqXHR], true );\n\t\tfn( json );\n\t};\n\n\tif ( $.isPlainObject( ajax ) && ajax.data )\n\t{\n\t\tajaxData = ajax.data;\n\n\t\tvar newData = typeof ajaxData === 'function' ?\n\t\t\tajaxData( data, oSettings ) :  // fn can manipulate data or return\n\t\t\tajaxData;                      // an object object or array to merge\n\n\t\t// If the function returned something, use that alone\n\t\tdata = typeof ajaxData === 'function' && newData ?\n\t\t\tnewData :\n\t\t\t$.extend( true, data, newData );\n\n\t\t// Remove the data property as we've resolved it already and don't want\n\t\t// jQuery to do it again (it is restored at the end of the function)\n\t\tdelete ajax.data;\n\t}\n\n\tvar baseAjax = {\n\t\t\"url\": typeof ajax === 'string' ?\n\t\t\tajax :\n\t\t\t'',\n\t\t\"data\": data,\n\t\t\"success\": callback,\n\t\t\"dataType\": \"json\",\n\t\t\"cache\": false,\n\t\t\"type\": oSettings.sServerMethod,\n\t\t\"error\": function (xhr, error) {\n\t\t\tvar ret = _fnCallbackFire( oSettings, null, 'xhr', [oSettings, null, oSettings.jqXHR], true );\n\n\t\t\tif ( ret.indexOf(true) === -1 ) {\n\t\t\t\tif ( error == \"parsererror\" ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Invalid JSON response', 1 );\n\t\t\t\t}\n\t\t\t\telse if ( xhr.readyState === 4 ) {\n\t\t\t\t\t_fnLog( oSettings, 0, 'Ajax error', 7 );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_fnProcessingDisplay( oSettings, false );\n\t\t}\n\t};\n\n\t// If `ajax` option is an object, extend and override our default base\n\tif ( $.isPlainObject( ajax ) ) {\n\t\t$.extend( baseAjax, ajax )\n\t}\n\n\t// Store the data submitted for the API\n\toSettings.oAjaxData = data;\n\n\t// Allow plug-ins and external processes to modify the data\n\t_fnCallbackFire( oSettings, null, 'preXhr', [oSettings, data, baseAjax], true );\n\n\tif ( typeof ajax === 'function' )\n\t{\n\t\t// Is a function - let the caller define what needs to be done\n\t\toSettings.jqXHR = ajax.call( instance, data, callback, oSettings );\n\t}\n\telse if (ajax.url === '') {\n\t\t// No url, so don't load any data. Just apply an empty data array\n\t\t// to the object for the callback.\n\t\tvar empty = {};\n\n\t\tDataTable.util.set(ajax.dataSrc)(empty, []);\n\t\tcallback(empty);\n\t}\n\telse {\n\t\t// Object to extend the base settings\n\t\toSettings.jqXHR = $.ajax( baseAjax );\n\t}\n\n\t// Restore for next time around\n\tif ( ajaxData ) {\n\t\tajax.data = ajaxData;\n\t}\n}\n\n\n/**\n * Update the table using an Ajax call\n *  @param {object} settings dataTables settings object\n *  @returns {boolean} Block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdate( settings )\n{\n\tsettings.iDraw++;\n\t_fnProcessingDisplay( settings, true );\n\n\t_fnBuildAjax(\n\t\tsettings,\n\t\t_fnAjaxParameters( settings ),\n\t\tfunction(json) {\n\t\t\t_fnAjaxUpdateDraw( settings, json );\n\t\t}\n\t);\n}\n\n\n/**\n * Build up the parameters in an object needed for a server-side processing\n * request.\n *  @param {object} oSettings dataTables settings object\n *  @returns {bool} block the table drawing or not\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxParameters( settings )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tfeatures = settings.oFeatures,\n\t\tpreSearch = settings.oPreviousSearch,\n\t\tpreColSearch = settings.aoPreSearchCols,\n\t\tcolData = function ( idx, prop ) {\n\t\t\treturn typeof columns[idx][prop] === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\tcolumns[idx][prop];\n\t\t};\n\n\treturn {\n\t\tdraw: settings.iDraw,\n\t\tcolumns: columns.map( function ( column, i ) {\n\t\t\treturn {\n\t\t\t\tdata: colData(i, 'mData'),\n\t\t\t\tname: column.sName,\n\t\t\t\tsearchable: column.bSearchable,\n\t\t\t\torderable: column.bSortable,\n\t\t\t\tsearch: {\n\t\t\t\t\tvalue: preColSearch[i].search,\n\t\t\t\t\tregex: preColSearch[i].regex,\n\t\t\t\t\tfixed: Object.keys(column.searchFixed).map( function(name) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tname: name,\n\t\t\t\t\t\t\tterm: column.searchFixed[name].toString()\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t};\n\t\t} ),\n\t\torder: _fnSortFlatten( settings ).map( function ( val ) {\n\t\t\treturn {\n\t\t\t\tcolumn: val.col,\n\t\t\t\tdir: val.dir,\n\t\t\t\tname: colData(val.col, 'sName')\n\t\t\t};\n\t\t} ),\n\t\tstart: settings._iDisplayStart,\n\t\tlength: features.bPaginate ?\n\t\t\tsettings._iDisplayLength :\n\t\t\t-1,\n\t\tsearch: {\n\t\t\tvalue: preSearch.search,\n\t\t\tregex: preSearch.regex,\n\t\t\tfixed: Object.keys(settings.searchFixed).map( function(name) {\n\t\t\t\treturn {\n\t\t\t\t\tname: name,\n\t\t\t\t\tterm: settings.searchFixed[name].toString()\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t};\n}\n\n\n/**\n * Data the data from the server (nuking the old) and redraw the table\n *  @param {object} oSettings dataTables settings object\n *  @param {object} json json data return from the server.\n *  @param {string} json.sEcho Tracking flag for DataTables to match requests\n *  @param {int} json.iTotalRecords Number of records in the data set, not accounting for filtering\n *  @param {int} json.iTotalDisplayRecords Number of records in the data set, accounting for filtering\n *  @param {array} json.aaData The data to display on this page\n *  @param {string} [json.sColumns] Column ordering (sName, comma separated)\n *  @memberof DataTable#oApi\n */\nfunction _fnAjaxUpdateDraw ( settings, json )\n{\n\tvar data = _fnAjaxDataSrc(settings, json);\n\tvar draw = _fnAjaxDataSrcParam(settings, 'draw', json);\n\tvar recordsTotal = _fnAjaxDataSrcParam(settings, 'recordsTotal', json);\n\tvar recordsFiltered = _fnAjaxDataSrcParam(settings, 'recordsFiltered', json);\n\n\tif ( draw !== undefined ) {\n\t\t// Protect against out of sequence returns\n\t\tif ( draw*1 < settings.iDraw ) {\n\t\t\treturn;\n\t\t}\n\t\tsettings.iDraw = draw * 1;\n\t}\n\n\t// No data in returned object, so rather than an array, we show an empty table\n\tif ( ! data ) {\n\t\tdata = [];\n\t}\n\n\t_fnClearTable( settings );\n\tsettings._iRecordsTotal   = parseInt(recordsTotal, 10);\n\tsettings._iRecordsDisplay = parseInt(recordsFiltered, 10);\n\n\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t_fnAddData( settings, data[i] );\n\t}\n\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t_fnColumnTypes(settings);\n\t_fnDraw( settings, true );\n\t_fnInitComplete( settings );\n\t_fnProcessingDisplay( settings, false );\n}\n\n\n/**\n * Get the data from the JSON data source to use for drawing a table. Using\n * `_fnGetObjectDataFn` allows the data to be sourced from a property of the\n * source object, or from a processing function.\n *  @param {object} settings dataTables settings object\n *  @param  {object} json Data source object / array from the server\n *  @return {array} Array of data to use\n */\nfunction _fnAjaxDataSrc ( settings, json, write )\n{\n\tvar dataProp = 'data';\n\n\tif ($.isPlainObject( settings.ajax ) && settings.ajax.dataSrc !== undefined) {\n\t\t// Could in inside a `dataSrc` object, or not!\n\t\tvar dataSrc = settings.ajax.dataSrc;\n\n\t\t// string, function and object are valid types\n\t\tif (typeof dataSrc === 'string' || typeof dataSrc === 'function') {\n\t\t\tdataProp = dataSrc;\n\t\t}\n\t\telse if (dataSrc.data !== undefined) {\n\t\t\tdataProp = dataSrc.data;\n\t\t}\n\t}\n\n\tif ( ! write ) {\n\t\tif ( dataProp === 'data' ) {\n\t\t\t// If the default, then we still want to support the old style, and safely ignore\n\t\t\t// it if possible\n\t\t\treturn json.aaData || json[dataProp];\n\t\t}\n\n\t\treturn dataProp !== \"\" ?\n\t\t\t_fnGetObjectDataFn( dataProp )( json ) :\n\t\t\tjson;\n\t}\n\t\n\t// set\n\t_fnSetObjectDataFn( dataProp )( json, write );\n}\n\n/**\n * Very similar to _fnAjaxDataSrc, but for the other SSP properties\n * @param {*} settings DataTables settings object\n * @param {*} param Target parameter\n * @param {*} json JSON data\n * @returns Resolved value\n */\nfunction _fnAjaxDataSrcParam (settings, param, json) {\n\tvar dataSrc = $.isPlainObject( settings.ajax )\n\t\t? settings.ajax.dataSrc\n\t\t: null;\n\n\tif (dataSrc && dataSrc[param]) {\n\t\t// Get from custom location\n\t\treturn _fnGetObjectDataFn( dataSrc[param] )( json );\n\t}\n\n\t// else - Default behaviour\n\tvar old = '';\n\n\t// Legacy support\n\tif (param === 'draw') {\n\t\told = 'sEcho';\n\t}\n\telse if (param === 'recordsTotal') {\n\t\told = 'iTotalRecords';\n\t}\n\telse if (param === 'recordsFiltered') {\n\t\told = 'iTotalDisplayRecords';\n\t}\n\n\treturn json[old] !== undefined\n\t\t? json[old]\n\t\t: json[param];\n}\n\n\n/**\n * Filter the table using both the global filter and column based filtering\n *  @param {object} settings dataTables settings object\n *  @param {object} input search information\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterComplete ( settings, input )\n{\n\tvar columnsSearch = settings.aoPreSearchCols;\n\n\t// In server-side processing all filtering is done by the server, so no point hanging around here\n\tif ( _fnDataSource( settings ) != 'ssp' )\n\t{\n\t\t// Check if any of the rows were invalidated\n\t\t_fnFilterData( settings );\n\n\t\t// Start from the full data set\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t// Global filter first\n\t\t_fnFilter( settings.aiDisplay, settings, input.search, input );\n\n\t\t$.each(settings.searchFixed, function (name, term) {\n\t\t\t_fnFilter(settings.aiDisplay, settings, term, {});\n\t\t});\n\n\t\t// Then individual column filters\n\t\tfor ( var i=0 ; i<columnsSearch.length ; i++ )\n\t\t{\n\t\t\tvar col = columnsSearch[i];\n\n\t\t\t_fnFilter(\n\t\t\t\tsettings.aiDisplay,\n\t\t\t\tsettings,\n\t\t\t\tcol.search,\n\t\t\t\tcol,\n\t\t\t\ti\n\t\t\t);\n\n\t\t\t$.each(settings.aoColumns[i].searchFixed, function (name, term) {\n\t\t\t\t_fnFilter(settings.aiDisplay, settings, term, {}, i);\n\t\t\t});\n\t\t}\n\n\t\t// And finally global filtering\n\t\t_fnFilterCustom( settings );\n\t}\n\n\t// Tell the draw function we have been filtering\n\tsettings.bFiltered = true;\n\n\t_fnCallbackFire( settings, null, 'search', [settings] );\n}\n\n\n/**\n * Apply custom filtering functions\n * \n * This is legacy now that we have named functions, but it is widely used\n * from 1.x, so it is not yet deprecated.\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCustom( settings )\n{\n\tvar filters = DataTable.ext.search;\n\tvar displayRows = settings.aiDisplay;\n\tvar row, rowIdx;\n\n\tfor ( var i=0, ien=filters.length ; i<ien ; i++ ) {\n\t\tvar rows = [];\n\n\t\t// Loop over each row and see if it should be included\n\t\tfor ( var j=0, jen=displayRows.length ; j<jen ; j++ ) {\n\t\t\trowIdx = displayRows[ j ];\n\t\t\trow = settings.aoData[ rowIdx ];\n\n\t\t\tif ( filters[i]( settings, row._aFilterData, rowIdx, row._aData, j ) ) {\n\t\t\t\trows.push( rowIdx );\n\t\t\t}\n\t\t}\n\n\t\t// So the array reference doesn't break set the results into the\n\t\t// existing array\n\t\tdisplayRows.length = 0;\n\t\tdisplayRows.push.apply(displayRows, rows);\n\t}\n}\n\n\n/**\n * Filter the data table based on user input and draw the table\n */\nfunction _fnFilter( searchRows, settings, input, options, column )\n{\n\tif ( input === '' ) {\n\t\treturn;\n\t}\n\n\tvar i = 0;\n\tvar matched = [];\n\n\t// Search term can be a function, regex or string - if a string we apply our\n\t// smart filtering regex (assuming the options require that)\n\tvar searchFunc = typeof input === 'function' ? input : null;\n\tvar rpSearch = input instanceof RegExp\n\t\t? input\n\t\t: searchFunc\n\t\t\t? null\n\t\t\t: _fnFilterCreateSearch( input, options );\n\n\t// Then for each row, does the test pass. If not, lop the row from the array\n\tfor (i=0 ; i<searchRows.length ; i++) {\n\t\tvar row = settings.aoData[ searchRows[i] ];\n\t\tvar data = column === undefined\n\t\t\t? row._sFilterRow\n\t\t\t: row._aFilterData[ column ];\n\n\t\tif ( (searchFunc && searchFunc(data, row._aData, searchRows[i], column)) || (rpSearch && rpSearch.test(data)) ) {\n\t\t\tmatched.push(searchRows[i]);\n\t\t}\n\t}\n\n\t// Mutate the searchRows array\n\tsearchRows.length = matched.length;\n\n\tfor (i=0 ; i<matched.length ; i++) {\n\t\tsearchRows[i] = matched[i];\n\t}\n}\n\n\n/**\n * Build a regular expression object suitable for searching a table\n *  @param {string} sSearch string to search for\n *  @param {bool} bRegex treat as a regular expression or not\n *  @param {bool} bSmart perform smart filtering or not\n *  @param {bool} bCaseInsensitive Do case insensitive matching or not\n *  @returns {RegExp} constructed object\n *  @memberof DataTable#oApi\n */\nfunction _fnFilterCreateSearch( search, inOpts )\n{\n\tvar not = [];\n\tvar options = $.extend({}, {\n\t\tboundary: false,\n\t\tcaseInsensitive: true,\n\t\texact: false,\n\t\tregex: false,\n\t\tsmart: true\n\t}, inOpts);\n\n\tif (typeof search !== 'string') {\n\t\tsearch = search.toString();\n\t}\n\n\t// Remove diacritics if normalize is set up to do so\n\tsearch = _normalize(search);\n\n\tif (options.exact) {\n\t\treturn new RegExp(\n\t\t\t'^'+_fnEscapeRegex(search)+'$',\n\t\t\toptions.caseInsensitive ? 'i' : ''\n\t\t);\n\t}\n\n\tsearch = options.regex ?\n\t\tsearch :\n\t\t_fnEscapeRegex( search );\n\t\n\tif ( options.smart ) {\n\t\t/* For smart filtering we want to allow the search to work regardless of\n\t\t * word order. We also want double quoted text to be preserved, so word\n\t\t * order is important - a la google. And a negative look around for\n\t\t * finding rows which don't contain a given string.\n\t\t * \n\t\t * So this is the sort of thing we want to generate:\n\t\t * \n\t\t * ^(?=.*?\\bone\\b)(?=.*?\\btwo three\\b)(?=.*?\\bfour\\b).*$\n\t\t */\n\t\tvar parts = search.match( /!?[\"\\u201C][^\"\\u201D]+[\"\\u201D]|[^ ]+/g ) || [''];\n\t\tvar a = parts.map( function ( word ) {\n\t\t\tvar negative = false;\n\t\t\tvar m;\n\n\t\t\t// Determine if it is a \"does not include\"\n\t\t\tif ( word.charAt(0) === '!' ) {\n\t\t\t\tnegative = true;\n\t\t\t\tword = word.substring(1);\n\t\t\t}\n\n\t\t\t// Strip the quotes from around matched phrases\n\t\t\tif ( word.charAt(0) === '\"' ) {\n\t\t\t\tm = word.match( /^\"(.*)\"$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\t\t\telse if ( word.charAt(0) === '\\u201C' ) {\n\t\t\t\t// Smart quote match (iPhone users)\n\t\t\t\tm = word.match( /^\\u201C(.*)\\u201D$/ );\n\t\t\t\tword = m ? m[1] : word;\n\t\t\t}\n\n\t\t\t// For our \"not\" case, we need to modify the string that is\n\t\t\t// allowed to match at the end of the expression.\n\t\t\tif (negative) {\n\t\t\t\tif (word.length > 1) {\n\t\t\t\t\tnot.push('(?!'+word+')');\n\t\t\t\t}\n\n\t\t\t\tword = '';\n\t\t\t}\n\n\t\t\treturn word.replace(/\"/g, '');\n\t\t} );\n\n\t\tvar match = not.length\n\t\t\t? not.join('')\n\t\t\t: '';\n\n\t\tvar boundary = options.boundary\n\t\t\t? '\\\\b'\n\t\t\t: '';\n\n\t\tsearch = '^(?=.*?'+boundary+a.join( ')(?=.*?'+boundary )+')('+match+'.)*$';\n\t}\n\n\treturn new RegExp( search, options.caseInsensitive ? 'i' : '' );\n}\n\n\n/**\n * Escape a string such that it can be used in a regular expression\n *  @param {string} sVal string to escape\n *  @returns {string} escaped string\n *  @memberof DataTable#oApi\n */\nvar _fnEscapeRegex = DataTable.util.escapeRegex;\n\nvar __filter_div = $('<div>')[0];\nvar __filter_div_textContent = __filter_div.textContent !== undefined;\n\n// Update the filtering data for each row if needed (by invalidation or first run)\nfunction _fnFilterData ( settings )\n{\n\tvar columns = settings.aoColumns;\n\tvar data = settings.aoData;\n\tvar column;\n\tvar j, jen, filterData, cellData, row;\n\tvar wasInvalidated = false;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aFilterData ) {\n\t\t\tfilterData = [];\n\n\t\t\tfor ( j=0, jen=columns.length ; j<jen ; j++ ) {\n\t\t\t\tcolumn = columns[j];\n\n\t\t\t\tif ( column.bSearchable ) {\n\t\t\t\t\tcellData = _fnGetCellData( settings, rowIdx, j, 'filter' );\n\n\t\t\t\t\t// Search in DataTables is string based\n\t\t\t\t\tif ( cellData === null ) {\n\t\t\t\t\t\tcellData = '';\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( typeof cellData !== 'string' && cellData.toString ) {\n\t\t\t\t\t\tcellData = cellData.toString();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcellData = '';\n\t\t\t\t}\n\n\t\t\t\t// If it looks like there is an HTML entity in the string,\n\t\t\t\t// attempt to decode it so sorting works as expected. Note that\n\t\t\t\t// we could use a single line of jQuery to do this, but the DOM\n\t\t\t\t// method used here is much faster https://jsperf.com/html-decode\n\t\t\t\tif ( cellData.indexOf && cellData.indexOf('&') !== -1 ) {\n\t\t\t\t\t__filter_div.innerHTML = cellData;\n\t\t\t\t\tcellData = __filter_div_textContent ?\n\t\t\t\t\t\t__filter_div.textContent :\n\t\t\t\t\t\t__filter_div.innerText;\n\t\t\t\t}\n\n\t\t\t\tif ( cellData.replace ) {\n\t\t\t\t\tcellData = cellData.replace(/[\\r\\n\\u2028]/g, '');\n\t\t\t\t}\n\n\t\t\t\tfilterData.push( cellData );\n\t\t\t}\n\n\t\t\trow._aFilterData = filterData;\n\t\t\trow._sFilterRow = filterData.join('  ');\n\t\t\twasInvalidated = true;\n\t\t}\n\t}\n\n\treturn wasInvalidated;\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitialise ( settings )\n{\n\tvar i;\n\tvar init = settings.oInit;\n\tvar deferLoading = settings.deferLoading;\n\tvar dataSrc = _fnDataSource( settings );\n\n\t// Ensure that the table data is fully initialised\n\tif ( ! settings.bInitialised ) {\n\t\tsetTimeout( function(){ _fnInitialise( settings ); }, 200 );\n\t\treturn;\n\t}\n\n\t// Build the header / footer for the table\n\t_fnBuildHead( settings, 'header' );\n\t_fnBuildHead( settings, 'footer' );\n\n\t// Load the table's state (if needed) and then render around it and draw\n\t_fnLoadState( settings, init, function () {\n\t\t// Then draw the header / footer\n\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t_fnDrawHead( settings, settings.aoFooter );\n\n\t\t// Cache the paging start point, as the first redraw will reset it\n\t\tvar iAjaxStart = settings.iInitDisplayStart\n\n\t\t// Local data load\n\t\t// Check if there is data passing into the constructor\n\t\tif ( init.aaData ) {\n\t\t\tfor ( i=0 ; i<init.aaData.length ; i++ ) {\n\t\t\t\t_fnAddData( settings, init.aaData[ i ] );\n\t\t\t}\n\t\t}\n\t\telse if ( deferLoading || dataSrc == 'dom' ) {\n\t\t\t// Grab the data from the page\n\t\t\t_fnAddTr( settings, $(settings.nTBody).children('tr') );\n\t\t}\n\n\t\t// Filter not yet applied - copy the display master\n\t\tsettings.aiDisplay = settings.aiDisplayMaster.slice();\n\n\t\t// Enable features\n\t\t_fnAddOptionsHtml( settings );\n\t\t_fnSortInit( settings );\n\n\t\t_colGroup( settings );\n\n\t\t/* Okay to show that something is going on now */\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t_fnCallbackFire( settings, null, 'preInit', [settings], true );\n\n\t\t// If there is default sorting required - let's do it. The sort function\n\t\t// will do the drawing for us. Otherwise we draw the table regardless of the\n\t\t// Ajax source - this allows the table to look initialised for Ajax sourcing\n\t\t// data (show 'loading' message possibly)\n\t\t_fnReDraw( settings );\n\n\t\t// Server-side processing init complete is done by _fnAjaxUpdateDraw\n\t\tif ( dataSrc != 'ssp' || deferLoading ) {\n\t\t\t// if there is an ajax source load the data\n\t\t\tif ( dataSrc == 'ajax' ) {\n\t\t\t\t_fnBuildAjax( settings, {}, function(json) {\n\t\t\t\t\tvar aData = _fnAjaxDataSrc( settings, json );\n\n\t\t\t\t\t// Got the data - add it to the table\n\t\t\t\t\tfor ( i=0 ; i<aData.length ; i++ ) {\n\t\t\t\t\t\t_fnAddData( settings, aData[i] );\n\t\t\t\t\t}\n\n\t\t\t\t\t// Reset the init display for cookie saving. We've already done\n\t\t\t\t\t// a filter, and therefore cleared it before. So we need to make\n\t\t\t\t\t// it appear 'fresh'\n\t\t\t\t\tsettings.iInitDisplayStart = iAjaxStart;\n\n\t\t\t\t\t_fnReDraw( settings );\n\t\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t\t\t_fnInitComplete( settings );\n\t\t\t\t}, settings );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnInitComplete( settings );\n\t\t\t\t_fnProcessingDisplay( settings, false );\n\t\t\t}\n\t\t}\n\t} );\n}\n\n\n/**\n * Draw the table for the first time, adding all required features\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnInitComplete ( settings )\n{\n\tif (settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar args = [settings, settings.json];\n\n\tsettings._bInitComplete = true;\n\n\t// Table is fully set up and we have data, so calculate the\n\t// column widths\n\t_fnAdjustColumnSizing( settings );\n\n\t_fnCallbackFire( settings, null, 'plugin-init', args, true );\n\t_fnCallbackFire( settings, 'aoInitComplete', 'init', args, true );\n}\n\nfunction _fnLengthChange ( settings, val )\n{\n\tvar len = parseInt( val, 10 );\n\tsettings._iDisplayLength = len;\n\n\t_fnLengthOverflow( settings );\n\n\t// Fire length change event\n\t_fnCallbackFire( settings, null, 'length', [settings, len] );\n}\n\n/**\n * Alter the display settings to change the page\n *  @param {object} settings DataTables settings object\n *  @param {string|int} action Paging action to take: \"first\", \"previous\",\n *    \"next\" or \"last\" or page number to jump to (integer)\n *  @param [bool] redraw Automatically draw the update or not\n *  @returns {bool} true page has changed, false - no change\n *  @memberof DataTable#oApi\n */\nfunction _fnPageChange ( settings, action, redraw )\n{\n\tvar\n\t\tstart     = settings._iDisplayStart,\n\t\tlen       = settings._iDisplayLength,\n\t\trecords   = settings.fnRecordsDisplay();\n\n\tif ( records === 0 || len === -1 )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( typeof action === \"number\" )\n\t{\n\t\tstart = action * len;\n\n\t\tif ( start > records )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"first\" )\n\t{\n\t\tstart = 0;\n\t}\n\telse if ( action == \"previous\" )\n\t{\n\t\tstart = len >= 0 ?\n\t\t\tstart - len :\n\t\t\t0;\n\n\t\tif ( start < 0 )\n\t\t{\n\t\t\tstart = 0;\n\t\t}\n\t}\n\telse if ( action == \"next\" )\n\t{\n\t\tif ( start + len < records )\n\t\t{\n\t\t\tstart += len;\n\t\t}\n\t}\n\telse if ( action == \"last\" )\n\t{\n\t\tstart = Math.floor( (records-1) / len) * len;\n\t}\n\telse if ( action === 'ellipsis' )\n\t{\n\t\treturn;\n\t}\n\telse\n\t{\n\t\t_fnLog( settings, 0, \"Unknown paging action: \"+action, 5 );\n\t}\n\n\tvar changed = settings._iDisplayStart !== start;\n\tsettings._iDisplayStart = start;\n\n\t_fnCallbackFire( settings, null, changed ? 'page' : 'page-nc', [settings] );\n\n\tif ( changed && redraw ) {\n\t\t_fnDraw( settings );\n\t}\n\n\treturn changed;\n}\n\n\n/**\n * Generate the node required for the processing node\n *  @param {object} settings DataTables settings object\n */\nfunction _processingHtml ( settings )\n{\n\tvar table = settings.nTable;\n\tvar scrolling = settings.oScroll.sX !== '' || settings.oScroll.sY !== '';\n\n\tif ( settings.oFeatures.bProcessing ) {\n\t\tvar n = $('<div/>', {\n\t\t\t\t'id': settings.sTableId + '_processing',\n\t\t\t\t'class': settings.oClasses.processing.container,\n\t\t\t\t'role': 'status'\n\t\t\t} )\n\t\t\t.html( settings.oLanguage.sProcessing )\n\t\t\t.append('<div><div></div><div></div><div></div><div></div></div>');\n\n\t\t// Different positioning depending on if scrolling is enabled or not\n\t\tif (scrolling) {\n\t\t\tn.prependTo( $('div.dt-scroll', settings.nTableWrapper) );\n\t\t}\n\t\telse {\n\t\t\tn.insertBefore( table );\n\t\t}\n\n\t\t$(table).on( 'processing.dt.DT', function (e, s, show) {\n\t\t\tn.css( 'display', show ? 'block' : 'none' );\n\t\t} );\n\t}\n}\n\n\n/**\n * Display or hide the processing indicator\n *  @param {object} settings DataTables settings object\n *  @param {bool} show Show the processing indicator (true) or not (false)\n */\nfunction _fnProcessingDisplay ( settings, show )\n{\n\t// Ignore cases when we are still redrawing\n\tif (settings.bDrawing && show === false) {\n\t\treturn;\n\t}\n\n\t_fnCallbackFire( settings, null, 'processing', [settings, show] );\n}\n\n/**\n * Show the processing element if an action takes longer than a given time\n *\n * @param {*} settings DataTables settings object\n * @param {*} enable Do (true) or not (false) async processing (local feature enablement)\n * @param {*} run Function to run\n */\nfunction _fnProcessingRun( settings, enable, run ) {\n\tif (! enable) {\n\t\t// Immediate execution, synchronous\n\t\trun();\n\t}\n\telse {\n\t\t_fnProcessingDisplay(settings, true);\n\t\t\n\t\t// Allow the processing display to show if needed\n\t\tsetTimeout(function () {\n\t\t\trun();\n\n\t\t\t_fnProcessingDisplay(settings, false);\n\t\t}, 0);\n\t}\n}\n/**\n * Add any control elements for the table - specifically scrolling\n *  @param {object} settings dataTables settings object\n *  @returns {node} Node to add to the DOM\n *  @memberof DataTable#oApi\n */\nfunction _fnFeatureHtmlTable ( settings )\n{\n\tvar table = $(settings.nTable);\n\n\t// Scrolling from here on in\n\tvar scroll = settings.oScroll;\n\n\tif ( scroll.sX === '' && scroll.sY === '' ) {\n\t\treturn settings.nTable;\n\t}\n\n\tvar scrollX = scroll.sX;\n\tvar scrollY = scroll.sY;\n\tvar classes = settings.oClasses.scrolling;\n\tvar caption = settings.captionNode;\n\tvar captionSide = caption ? caption._captionSide : null;\n\tvar headerClone = $( table[0].cloneNode(false) );\n\tvar footerClone = $( table[0].cloneNode(false) );\n\tvar footer = table.children('tfoot');\n\tvar _div = '<div/>';\n\tvar size = function ( s ) {\n\t\treturn !s ? null : _fnStringToCss( s );\n\t};\n\n\tif ( ! footer.length ) {\n\t\tfooter = null;\n\t}\n\n\t/*\n\t * The HTML structure that we want to generate in this function is:\n\t *  div - scroller\n\t *    div - scroll head\n\t *      div - scroll head inner\n\t *        table - scroll head table\n\t *          thead - thead\n\t *    div - scroll body\n\t *      table - table (master table)\n\t *        thead - thead clone for sizing\n\t *        tbody - tbody\n\t *    div - scroll foot\n\t *      div - scroll foot inner\n\t *        table - scroll foot table\n\t *          tfoot - tfoot\n\t */\n\tvar scroller = $( _div, { 'class': classes.container } )\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.header.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.header.inner } )\n\t\t\t\t\t\t.css( {\n\t\t\t\t\t\t\t'box-sizing': 'content-box',\n\t\t\t\t\t\t\twidth: scroll.sXInner || '100%'\n\t\t\t\t\t\t} )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\theaderClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'top' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('thead')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t)\n\t\t.append(\n\t\t\t$(_div, { 'class': classes.body } )\n\t\t\t\t.css( {\n\t\t\t\t\tposition: 'relative',\n\t\t\t\t\toverflow: 'auto',\n\t\t\t\t\twidth: size( scrollX )\n\t\t\t\t} )\n\t\t\t\t.append( table )\n\t\t);\n\n\tif ( footer ) {\n\t\tscroller.append(\n\t\t\t$(_div, { 'class': classes.footer.self } )\n\t\t\t\t.css( {\n\t\t\t\t\toverflow: 'hidden',\n\t\t\t\t\tborder: 0,\n\t\t\t\t\twidth: scrollX ? size(scrollX) : '100%'\n\t\t\t\t} )\n\t\t\t\t.append(\n\t\t\t\t\t$(_div, { 'class': classes.footer.inner } )\n\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\tfooterClone\n\t\t\t\t\t\t\t\t.removeAttr('id')\n\t\t\t\t\t\t\t\t.css( 'margin-left', 0 )\n\t\t\t\t\t\t\t\t.append( captionSide === 'bottom' ? caption : null )\n\t\t\t\t\t\t\t\t.append(\n\t\t\t\t\t\t\t\t\ttable.children('tfoot')\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t)\n\t\t\t\t)\n\t\t);\n\t}\n\n\tvar children = scroller.children();\n\tvar scrollHead = children[0];\n\tvar scrollBody = children[1];\n\tvar scrollFoot = footer ? children[2] : null;\n\n\t// When the body is scrolled, then we also want to scroll the headers\n\t$(scrollBody).on( 'scroll.DT', function () {\n\t\tvar scrollLeft = this.scrollLeft;\n\n\t\tscrollHead.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollFoot.scrollLeft = scrollLeft;\n\t\t}\n\t} );\n\n\t// When focus is put on the header cells, we might need to scroll the body\n\t$('th, td', scrollHead).on('focus', function () {\n\t\tvar scrollLeft = scrollHead.scrollLeft;\n\n\t\tscrollBody.scrollLeft = scrollLeft;\n\n\t\tif ( footer ) {\n\t\t\tscrollBody.scrollLeft = scrollLeft;\n\t\t}\n\t});\n\n\t$(scrollBody).css('max-height', scrollY);\n\tif (! scroll.bCollapse) {\n\t\t$(scrollBody).css('height', scrollY);\n\t}\n\n\tsettings.nScrollHead = scrollHead;\n\tsettings.nScrollBody = scrollBody;\n\tsettings.nScrollFoot = scrollFoot;\n\n\t// On redraw - align columns\n\tsettings.aoDrawCallback.push(_fnScrollDraw);\n\n\treturn scroller[0];\n}\n\n\n\n/**\n * Update the header, footer and body tables for resizing - i.e. column\n * alignment.\n *\n * Welcome to the most horrible function DataTables. The process that this\n * function follows is basically:\n *   1. Re-create the table inside the scrolling div\n *   2. Correct colgroup > col values if needed\n *   3. Copy colgroup > col over to header and footer\n *   4. Clean up\n *\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnScrollDraw ( settings )\n{\n\t// Given that this is such a monster function, a lot of variables are use\n\t// to try and keep the minimised size as small as possible\n\tvar\n\t\tscroll         = settings.oScroll,\n\t\tbarWidth       = scroll.iBarWidth,\n\t\tdivHeader      = $(settings.nScrollHead),\n\t\tdivHeaderInner = divHeader.children('div'),\n\t\tdivHeaderTable = divHeaderInner.children('table'),\n\t\tdivBodyEl      = settings.nScrollBody,\n\t\tdivBody        = $(divBodyEl),\n\t\tdivFooter      = $(settings.nScrollFoot),\n\t\tdivFooterInner = divFooter.children('div'),\n\t\tdivFooterTable = divFooterInner.children('table'),\n\t\theader         = $(settings.nTHead),\n\t\ttable          = $(settings.nTable),\n\t\tfooter         = settings.nTFoot && $('th, td', settings.nTFoot).length ? $(settings.nTFoot) : null,\n\t\tbrowser        = settings.oBrowser,\n\t\theaderCopy, footerCopy;\n\n\t// If the scrollbar visibility has changed from the last draw, we need to\n\t// adjust the column sizes as the table width will have changed to account\n\t// for the scrollbar\n\tvar scrollBarVis = divBodyEl.scrollHeight > divBodyEl.clientHeight;\n\t\n\tif ( settings.scrollBarVis !== scrollBarVis && settings.scrollBarVis !== undefined ) {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t\t_fnAdjustColumnSizing( settings );\n\t\treturn; // adjust column sizing will call this function again\n\t}\n\telse {\n\t\tsettings.scrollBarVis = scrollBarVis;\n\t}\n\n\t// 1. Re-create the table inside the scrolling div\n\t// Remove the old minimised thead and tfoot elements in the inner table\n\ttable.children('thead, tfoot').remove();\n\n\t// Clone the current header and footer elements and then place it into the inner table\n\theaderCopy = header.clone().prependTo( table );\n\theaderCopy.find('th, td').removeAttr('tabindex');\n\theaderCopy.find('[id]').removeAttr('id');\n\n\tif ( footer ) {\n\t\tfooterCopy = footer.clone().prependTo( table );\n\t\tfooterCopy.find('[id]').removeAttr('id');\n\t}\n\n\t// 2. Correct colgroup > col values if needed\n\t// It is possible that the cell sizes are smaller than the content, so we need to\n\t// correct colgroup>col for such cases. This can happen if the auto width detection\n\t// uses a cell which has a longer string, but isn't the widest! For example \n\t// \"Chief Executive Officer (CEO)\" is the longest string in the demo, but\n\t// \"Systems Administrator\" is actually the widest string since it doesn't collapse.\n\t// Note the use of translating into a column index to get the `col` element. This\n\t// is because of Responsive which might remove `col` elements, knocking the alignment\n\t// of the indexes out.\n\tif (settings.aiDisplay.length) {\n\t\t// Get the column sizes from the first row in the table. This should really be a\n\t\t// [].find, but it wasn't supported in Chrome until Sept 2015, and DT has 10 year\n\t\t// browser support\n\t\tvar firstTr = null;\n\n\t\tfor (i=settings._iDisplayStart ; i<settings.aiDisplay.length ; i++) {\n\t\t\tvar idx = settings.aiDisplay[i];\n\t\t\tvar tr = settings.aoData[idx].nTr;\n\n\t\t\tif (tr) {\n\t\t\t\tfirstTr = tr;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tif (firstTr) {\n\t\t\tvar colSizes = $(firstTr).children('th, td').map(function (vis) {\n\t\t\t\treturn {\n\t\t\t\t\tidx: _fnVisibleToColumnIndex(settings, vis),\n\t\t\t\t\twidth: $(this).outerWidth()\n\t\t\t\t}\n\t\t\t});\n\n\t\t\t// Check against what the colgroup > col is set to and correct if needed\n\t\t\tfor (var i=0 ; i<colSizes.length ; i++) {\n\t\t\t\tvar colEl = settings.aoColumns[ colSizes[i].idx ].colEl[0];\n\t\t\t\tvar colWidth = colEl.style.width.replace('px', '');\n\n\t\t\t\tif (colWidth !== colSizes[i].width) {\n\t\t\t\t\tcolEl.style.width = colSizes[i].width + 'px';\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// 3. Copy the colgroup over to the header and footer\n\tdivHeaderTable\n\t\t.find('colgroup')\n\t\t.remove();\n\n\tdivHeaderTable.append(settings.colgroup.clone());\n\n\tif ( footer ) {\n\t\tdivFooterTable\n\t\t\t.find('colgroup')\n\t\t\t.remove();\n\n\t\tdivFooterTable.append(settings.colgroup.clone());\n\t}\n\n\t// \"Hide\" the header and footer that we used for the sizing. We need to keep\n\t// the content of the cell so that the width applied to the header and body\n\t// both match, but we want to hide it completely.\n\t$('th, td', headerCopy).each(function () {\n\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t});\n\n\tif ( footer ) {\n\t\t$('th, td', footerCopy).each(function () {\n\t\t\t$(this.childNodes).wrapAll('<div class=\"dt-scroll-sizing\">');\n\t\t});\n\t}\n\n\t// 4. Clean up\n\t// Figure out if there are scrollbar present - if so then we need a the header and footer to\n\t// provide a bit more space to allow \"overflow\" scrolling (i.e. past the scrollbar)\n\tvar isScrolling = Math.floor(table.height()) > divBodyEl.clientHeight || divBody.css('overflow-y') == \"scroll\";\n\tvar paddingSide = 'padding' + (browser.bScrollbarLeft ? 'Left' : 'Right' );\n\n\t// Set the width's of the header and footer tables\n\tvar outerWidth = table.outerWidth();\n\n\tdivHeaderTable.css('width', _fnStringToCss( outerWidth ));\n\tdivHeaderInner\n\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\n\tif ( footer ) {\n\t\tdivFooterTable.css('width', _fnStringToCss( outerWidth ));\n\t\tdivFooterInner\n\t\t\t.css('width', _fnStringToCss( outerWidth ))\n\t\t\t.css(paddingSide, isScrolling ? barWidth+\"px\" : \"0px\");\n\t}\n\n\t// Correct DOM ordering for colgroup - comes before the thead\n\ttable.children('colgroup').prependTo(table);\n\n\t// Adjust the position of the header in case we loose the y-scrollbar\n\tdivBody.trigger('scroll');\n\n\t// If sorting or filtering has occurred, jump the scrolling back to the top\n\t// only if we aren't holding the position\n\tif ( (settings.bSorted || settings.bFiltered) && ! settings._drawHold ) {\n\t\tdivBodyEl.scrollTop = 0;\n\t}\n}\n\n/**\n * Calculate the width of columns for the table\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnCalculateColumnWidths ( settings )\n{\n\t// Not interested in doing column width calculation if auto-width is disabled\n\tif (! settings.oFeatures.bAutoWidth) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ttable = settings.nTable,\n\t\tcolumns = settings.aoColumns,\n\t\tscroll = settings.oScroll,\n\t\tscrollY = scroll.sY,\n\t\tscrollX = scroll.sX,\n\t\tscrollXInner = scroll.sXInner,\n\t\tvisibleColumns = _fnGetColumns( settings, 'bVisible' ),\n\t\ttableWidthAttr = table.getAttribute('width'), // from DOM element\n\t\ttableContainer = table.parentNode,\n\t\ti, column, columnIdx;\n\t\t\n\tvar styleWidth = table.style.width;\n\n\t// If there is no width applied as a CSS style or as an attribute, we assume that\n\t// the width is intended to be 100%, which is usually is in CSS, but it is very\n\t// difficult to correctly parse the rules to get the final result.\n\tif ( ! styleWidth && ! tableWidthAttr) {\n\t\ttable.style.width = '100%';\n\t\tstyleWidth = '100%';\n\t}\n\n\tif ( styleWidth && styleWidth.indexOf('%') !== -1 ) {\n\t\ttableWidthAttr = styleWidth;\n\t}\n\n\t// Let plug-ins know that we are doing a recalc, in case they have changed any of the\n\t// visible columns their own way (e.g. Responsive uses display:none).\n\t_fnCallbackFire(\n\t\tsettings,\n\t\tnull,\n\t\t'column-calc',\n\t\t{visible: visibleColumns},\n\t\tfalse\n\t);\n\n\t// Construct a single row, worst case, table with the widest\n\t// node in the data, assign any user defined widths, then insert it into\n\t// the DOM and allow the browser to do all the hard work of calculating\n\t// table widths\n\tvar tmpTable = $(table.cloneNode())\n\t\t.css( 'visibility', 'hidden' )\n\t\t.removeAttr( 'id' );\n\n\t// Clean up the table body\n\ttmpTable.append('<tbody>')\n\tvar tr = $('<tr/>').appendTo( tmpTable.find('tbody') );\n\n\t// Clone the table header and footer - we can't use the header / footer\n\t// from the cloned table, since if scrolling is active, the table's\n\t// real header and footer are contained in different table tags\n\ttmpTable\n\t\t.append( $(settings.nTHead).clone() )\n\t\t.append( $(settings.nTFoot).clone() );\n\n\t// Remove any assigned widths from the footer (from scrolling)\n\ttmpTable.find('tfoot th, tfoot td').css('width', '');\n\n\t// Apply custom sizing to the cloned header\n\ttmpTable.find('thead th, thead td').each( function () {\n\t\t// Get the `width` from the header layout\n\t\tvar width = _fnColumnsSumWidth( settings, this, true, false );\n\n\t\tif ( width ) {\n\t\t\tthis.style.width = width;\n\n\t\t\t// For scrollX we need to force the column width otherwise the\n\t\t\t// browser will collapse it. If this width is smaller than the\n\t\t\t// width the column requires, then it will have no effect\n\t\t\tif ( scrollX ) {\n\t\t\t\t$( this ).append( $('<div/>').css( {\n\t\t\t\t\twidth: width,\n\t\t\t\t\tmargin: 0,\n\t\t\t\t\tpadding: 0,\n\t\t\t\t\tborder: 0,\n\t\t\t\t\theight: 1\n\t\t\t\t} ) );\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tthis.style.width = '';\n\t\t}\n\t} );\n\n\t// Find the widest piece of data for each column and put it into the table\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\tcolumnIdx = visibleColumns[i];\n\t\tcolumn = columns[ columnIdx ];\n\n\t\tvar longest = _fnGetMaxLenString(settings, columnIdx);\n\t\tvar autoClass = _ext.type.className[column.sType];\n\t\tvar text = longest + column.sContentPadding;\n\t\tvar insert = longest.indexOf('<') === -1\n\t\t\t? document.createTextNode(text)\n\t\t\t: text\n\t\t\n\t\t$('<td/>')\n\t\t\t.addClass(autoClass)\n\t\t\t.addClass(column.sClass)\n\t\t\t.append(insert)\n\t\t\t.appendTo(tr);\n\t}\n\n\t// Tidy the temporary table - remove name attributes so there aren't\n\t// duplicated in the dom (radio elements for example)\n\t$('[name]', tmpTable).removeAttr('name');\n\n\t// Table has been built, attach to the document so we can work with it.\n\t// A holding element is used, positioned at the top of the container\n\t// with minimal height, so it has no effect on if the container scrolls\n\t// or not. Otherwise it might trigger scrolling when it actually isn't\n\t// needed\n\tvar holder = $('<div/>').css( scrollX || scrollY ?\n\t\t\t{\n\t\t\t\tposition: 'absolute',\n\t\t\t\ttop: 0,\n\t\t\t\tleft: 0,\n\t\t\t\theight: 1,\n\t\t\t\tright: 0,\n\t\t\t\toverflow: 'hidden'\n\t\t\t} :\n\t\t\t{}\n\t\t)\n\t\t.append( tmpTable )\n\t\t.appendTo( tableContainer );\n\n\t// When scrolling (X or Y) we want to set the width of the table as \n\t// appropriate. However, when not scrolling leave the table width as it\n\t// is. This results in slightly different, but I think correct behaviour\n\tif ( scrollX && scrollXInner ) {\n\t\ttmpTable.width( scrollXInner );\n\t}\n\telse if ( scrollX ) {\n\t\ttmpTable.css( 'width', 'auto' );\n\t\ttmpTable.removeAttr('width');\n\n\t\t// If there is no width attribute or style, then allow the table to\n\t\t// collapse\n\t\tif ( tmpTable.width() < tableContainer.clientWidth && tableWidthAttr ) {\n\t\t\ttmpTable.width( tableContainer.clientWidth );\n\t\t}\n\t}\n\telse if ( scrollY ) {\n\t\ttmpTable.width( tableContainer.clientWidth );\n\t}\n\telse if ( tableWidthAttr ) {\n\t\ttmpTable.width( tableWidthAttr );\n\t}\n\n\t// Get the width of each column in the constructed table\n\tvar total = 0;\n\tvar bodyCells = tmpTable.find('tbody tr').eq(0).children();\n\n\tfor ( i=0 ; i<visibleColumns.length ; i++ ) {\n\t\t// Use getBounding for sub-pixel accuracy, which we then want to round up!\n\t\tvar bounding = bodyCells[i].getBoundingClientRect().width;\n\n\t\t// Total is tracked to remove any sub-pixel errors as the outerWidth\n\t\t// of the table might not equal the total given here\n\t\ttotal += bounding;\n\n\t\t// Width for each column to use\n\t\tcolumns[ visibleColumns[i] ].sWidth = _fnStringToCss( bounding );\n\t}\n\n\ttable.style.width = _fnStringToCss( total );\n\n\t// Finished with the table - ditch it\n\tholder.remove();\n\n\t// If there is a width attr, we want to attach an event listener which\n\t// allows the table sizing to automatically adjust when the window is\n\t// resized. Use the width attr rather than CSS, since we can't know if the\n\t// CSS is a relative value or absolute - DOM read is always px.\n\tif ( tableWidthAttr ) {\n\t\ttable.style.width = _fnStringToCss( tableWidthAttr );\n\t}\n\n\tif ( (tableWidthAttr || scrollX) && ! settings._reszEvt ) {\n\t\tvar bindResize = function () {\n\t\t\t$(window).on('resize.DT-'+settings.sInstance, DataTable.util.throttle( function () {\n\t\t\t\tif (! settings.bDestroying) {\n\t\t\t\t\t_fnAdjustColumnSizing( settings );\n\t\t\t\t}\n\t\t\t} ) );\n\t\t};\n\n\t\tbindResize();\n\n\t\tsettings._reszEvt = true;\n\t}\n}\n\n\n/**\n * Get the maximum strlen for each data column\n *  @param {object} settings dataTables settings object\n *  @param {int} colIdx column of interest\n *  @returns {string} string of the max length\n *  @memberof DataTable#oApi\n */\nfunction _fnGetMaxLenString( settings, colIdx )\n{\n\tvar column = settings.aoColumns[colIdx];\n\n\tif (! column.maxLenString) {\n\t\tvar s, max='', maxLen = -1;\n\t\n\t\tfor ( var i=0, ien=settings.aiDisplayMaster.length ; i<ien ; i++ ) {\n\t\t\tvar rowIdx = settings.aiDisplayMaster[i];\n\t\t\tvar data = _fnGetRowDisplay(settings, rowIdx)[colIdx];\n\n\t\t\tvar cellString = data && typeof data === 'object' && data.nodeType\n\t\t\t\t? data.innerHTML\n\t\t\t\t: data+'';\n\n\t\t\t// Remove id / name attributes from elements so they\n\t\t\t// don't interfere with existing elements\n\t\t\tcellString = cellString\n\t\t\t\t.replace(/id=\".*?\"/g, '')\n\t\t\t\t.replace(/name=\".*?\"/g, '');\n\n\t\t\ts = _stripHtml(cellString)\n\t\t\t\t.replace( /&nbsp;/g, ' ' );\n\t\n\t\t\tif ( s.length > maxLen ) {\n\t\t\t\t// We want the HTML in the string, but the length that\n\t\t\t\t// is important is the stripped string\n\t\t\t\tmax = cellString;\n\t\t\t\tmaxLen = s.length;\n\t\t\t}\n\t\t}\n\n\t\tcolumn.maxLenString = max;\n\t}\n\n\treturn column.maxLenString;\n}\n\n\n/**\n * Append a CSS unit (only if required) to a string\n *  @param {string} value to css-ify\n *  @returns {string} value with css unit\n *  @memberof DataTable#oApi\n */\nfunction _fnStringToCss( s )\n{\n\tif ( s === null ) {\n\t\treturn '0px';\n\t}\n\n\tif ( typeof s == 'number' ) {\n\t\treturn s < 0 ?\n\t\t\t'0px' :\n\t\t\ts+'px';\n\t}\n\n\t// Check it has a unit character already\n\treturn s.match(/\\d$/) ?\n\t\ts+'px' :\n\t\ts;\n}\n\n/**\n * Re-insert the `col` elements for current visibility\n *\n * @param {*} settings DT settings\n */\nfunction _colGroup( settings ) {\n\tvar cols = settings.aoColumns;\n\n\tsettings.colgroup.empty();\n\n\tfor (i=0 ; i<cols.length ; i++) {\n\t\tif (cols[i].bVisible) {\n\t\t\tsettings.colgroup.append(cols[i].colEl);\n\t\t}\n\t}\n}\n\n\nfunction _fnSortInit( settings ) {\n\tvar target = settings.nTHead;\n\tvar headerRows = target.querySelectorAll('tr');\n\tvar legacyTop = settings.bSortCellsTop;\n\tvar notSelector = ':not([data-dt-order=\"disable\"]):not([data-dt-order=\"icon-only\"])';\n\t\n\t// Legacy support for `orderCellsTop`\n\tif (legacyTop === true) {\n\t\ttarget = headerRows[0];\n\t}\n\telse if (legacyTop === false) {\n\t\ttarget = headerRows[ headerRows.length - 1 ];\n\t}\n\n\t_fnSortAttachListener(\n\t\tsettings,\n\t\ttarget,\n\t\ttarget === settings.nTHead\n\t\t\t? 'tr'+notSelector+' th'+notSelector+', tr'+notSelector+' td'+notSelector\n\t\t\t: 'th'+notSelector+', td'+notSelector\n\t);\n\n\t// Need to resolve the user input array into our internal structure\n\tvar order = [];\n\t_fnSortResolve( settings, order, settings.aaSorting );\n\n\tsettings.aaSorting = order;\n}\n\n\nfunction _fnSortAttachListener(settings, node, selector, column, callback) {\n\t_fnBindAction( node, selector, function (e) {\n\t\tvar run = false;\n\t\tvar columns = column === undefined\n\t\t\t? _fnColumnsFromHeader( e.target )\n\t\t\t: [column];\n\n\t\tif ( columns.length ) {\n\t\t\tfor ( var i=0, ien=columns.length ; i<ien ; i++ ) {\n\t\t\t\tvar ret = _fnSortAdd( settings, columns[i], i, e.shiftKey );\n\n\t\t\t\tif (ret !== false) {\n\t\t\t\t\trun = true;\n\t\t\t\t}\t\t\t\t\t\n\n\t\t\t\t// If the first entry is no sort, then subsequent\n\t\t\t\t// sort columns are ignored\n\t\t\t\tif (settings.aaSorting.length === 1 && settings.aaSorting[0][1] === '') {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (run) {\n\t\t\t\t_fnProcessingRun(settings, true, function () {\n\t\t\t\t\t_fnSort( settings );\n\t\t\t\t\t_fnSortDisplay( settings, settings.aiDisplay );\n\n\t\t\t\t\t_fnReDraw( settings, false, false );\n\n\t\t\t\t\tif (callback) {\n\t\t\t\t\t\tcallback();\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t} );\n}\n\n/**\n * Sort the display array to match the master's order\n * @param {*} settings\n */\nfunction _fnSortDisplay(settings, display) {\n\tif (display.length < 2) {\n\t\treturn;\n\t}\n\n\tvar master = settings.aiDisplayMaster;\n\tvar masterMap = {};\n\tvar map = {};\n\tvar i;\n\n\t// Rather than needing an `indexOf` on master array, we can create a map\n\tfor (i=0 ; i<master.length ; i++) {\n\t\tmasterMap[master[i]] = i;\n\t}\n\n\t// And then cache what would be the indexOf fom the display\n\tfor (i=0 ; i<display.length ; i++) {\n\t\tmap[display[i]] = masterMap[display[i]];\n\t}\n\n\tdisplay.sort(function(a, b){\n\t\t// Short version of this function is simply `master.indexOf(a) - master.indexOf(b);`\n\t\treturn map[a] - map[b];\n\t});\n}\n\n\nfunction _fnSortResolve (settings, nestedSort, sort) {\n\tvar push = function ( a ) {\n\t\tif ($.isPlainObject(a)) {\n\t\t\tif (a.idx !== undefined) {\n\t\t\t\t// Index based ordering\n\t\t\t\tnestedSort.push([a.idx, a.dir]);\n\t\t\t}\n\t\t\telse if (a.name) {\n\t\t\t\t// Name based ordering\n\t\t\t\tvar cols = _pluck( settings.aoColumns, 'sName');\n\t\t\t\tvar idx = cols.indexOf(a.name);\n\n\t\t\t\tif (idx !== -1) {\n\t\t\t\t\tnestedSort.push([idx, a.dir]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// Plain column index and direction pair\n\t\t\tnestedSort.push(a);\n\t\t}\n\t};\n\n\tif ( $.isPlainObject(sort) ) {\n\t\t// Object\n\t\tpush(sort);\n\t}\n\telse if ( sort.length && typeof sort[0] === 'number' ) {\n\t\t// 1D array\n\t\tpush(sort);\n\t}\n\telse if ( sort.length ) {\n\t\t// 2D array\n\t\tfor (var z=0; z<sort.length; z++) {\n\t\t\tpush(sort[z]); // Object or array\n\t\t}\n\t}\n}\n\n\nfunction _fnSortFlatten ( settings )\n{\n\tvar\n\t\ti, k, kLen,\n\t\taSort = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoColumns = settings.aoColumns,\n\t\taDataSort, iCol, sType, srcCol,\n\t\tfixed = settings.aaSortingFixed,\n\t\tfixedObj = $.isPlainObject( fixed ),\n\t\tnestedSort = [];\n\t\n\tif ( ! settings.oFeatures.bSort ) {\n\t\treturn aSort;\n\t}\n\n\t// Build the sort array, with pre-fix and post-fix options if they have been\n\t// specified\n\tif ( Array.isArray( fixed ) ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed );\n\t}\n\n\tif ( fixedObj && fixed.pre ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.pre );\n\t}\n\n\t_fnSortResolve( settings, nestedSort, settings.aaSorting );\n\n\tif (fixedObj && fixed.post ) {\n\t\t_fnSortResolve( settings, nestedSort, fixed.post );\n\t}\n\n\tfor ( i=0 ; i<nestedSort.length ; i++ )\n\t{\n\t\tsrcCol = nestedSort[i][0];\n\n\t\tif ( aoColumns[ srcCol ] ) {\n\t\t\taDataSort = aoColumns[ srcCol ].aDataSort;\n\n\t\t\tfor ( k=0, kLen=aDataSort.length ; k<kLen ; k++ )\n\t\t\t{\n\t\t\t\tiCol = aDataSort[k];\n\t\t\t\tsType = aoColumns[ iCol ].sType || 'string';\n\n\t\t\t\tif ( nestedSort[i]._idx === undefined ) {\n\t\t\t\t\tnestedSort[i]._idx = aoColumns[iCol].asSorting.indexOf(nestedSort[i][1]);\n\t\t\t\t}\n\n\t\t\t\tif ( nestedSort[i][1] ) {\n\t\t\t\t\taSort.push( {\n\t\t\t\t\t\tsrc:       srcCol,\n\t\t\t\t\t\tcol:       iCol,\n\t\t\t\t\t\tdir:       nestedSort[i][1],\n\t\t\t\t\t\tindex:     nestedSort[i]._idx,\n\t\t\t\t\t\ttype:      sType,\n\t\t\t\t\t\tformatter: extSort[ sType+\"-pre\" ],\n\t\t\t\t\t\tsorter:    extSort[ sType+\"-\"+nestedSort[i][1] ]\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn aSort;\n}\n\n/**\n * Change the order of the table\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSort ( oSettings, col, dir )\n{\n\tvar\n\t\ti, ien, iLen,\n\t\taiOrig = [],\n\t\textSort = DataTable.ext.type.order,\n\t\taoData = oSettings.aoData,\n\t\tsortCol,\n\t\tdisplayMaster = oSettings.aiDisplayMaster,\n\t\taSort;\n\n\t// Allow a specific column to be sorted, which will _not_ alter the display\n\t// master\n\tif (col !== undefined) {\n\t\tvar srcCol = oSettings.aoColumns[col];\n\t\taSort = [{\n\t\t\tsrc:       col,\n\t\t\tcol:       col,\n\t\t\tdir:       dir,\n\t\t\tindex:     0,\n\t\t\ttype:      srcCol.sType,\n\t\t\tformatter: extSort[ srcCol.sType+\"-pre\" ],\n\t\t\tsorter:    extSort[ srcCol.sType+\"-\"+dir ]\n\t\t}];\n\t\tdisplayMaster = displayMaster.slice();\n\t}\n\telse {\n\t\taSort = _fnSortFlatten( oSettings );\n\t}\n\n\tfor ( i=0, ien=aSort.length ; i<ien ; i++ ) {\n\t\tsortCol = aSort[i];\n\n\t\t// Load the data needed for the sort, for each cell\n\t\t_fnSortData( oSettings, sortCol.col );\n\t}\n\n\t/* No sorting required if server-side or no sorting array */\n\tif ( _fnDataSource( oSettings ) != 'ssp' && aSort.length !== 0 )\n\t{\n\t\t// Reset the initial positions on each pass so we get a stable sort\n\t\tfor ( i=0, iLen=displayMaster.length ; i<iLen ; i++ ) {\n\t\t\taiOrig[ i ] = i;\n\t\t}\n\n\t\t// If the first sort is desc, then reverse the array to preserve original\n\t\t// order, just in reverse\n\t\tif (aSort.length && aSort[0].dir === 'desc' && oSettings.orderDescReverse) {\n\t\t\taiOrig.reverse();\n\t\t}\n\n\t\t/* Do the sort - here we want multi-column sorting based on a given data source (column)\n\t\t * and sorting function (from oSort) in a certain direction. It's reasonably complex to\n\t\t * follow on it's own, but this is what we want (example two column sorting):\n\t\t *  fnLocalSorting = function(a,b){\n\t\t *    var test;\n\t\t *    test = oSort['string-asc']('data11', 'data12');\n\t\t *      if (test !== 0)\n\t\t *        return test;\n\t\t *    test = oSort['numeric-desc']('data21', 'data22');\n\t\t *    if (test !== 0)\n\t\t *      return test;\n\t\t *    return oSort['numeric-asc']( aiOrig[a], aiOrig[b] );\n\t\t *  }\n\t\t * Basically we have a test for each sorting column, if the data in that column is equal,\n\t\t * test the next column. If all columns match, then we use a numeric sort on the row\n\t\t * positions in the original data array to provide a stable sort.\n\t\t */\n\t\tdisplayMaster.sort( function ( a, b ) {\n\t\t\tvar\n\t\t\t\tx, y, k, test, sort,\n\t\t\t\tlen=aSort.length,\n\t\t\t\tdataA = aoData[a]._aSortData,\n\t\t\t\tdataB = aoData[b]._aSortData;\n\n\t\t\tfor ( k=0 ; k<len ; k++ ) {\n\t\t\t\tsort = aSort[k];\n\n\t\t\t\t// Data, which may have already been through a `-pre` function\n\t\t\t\tx = dataA[ sort.col ];\n\t\t\t\ty = dataB[ sort.col ];\n\n\t\t\t\tif (sort.sorter) {\n\t\t\t\t\t// If there is a custom sorter (`-asc` or `-desc`) for this\n\t\t\t\t\t// data type, use it\n\t\t\t\t\ttest = sort.sorter(x, y);\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\t// Otherwise, use generic sorting\n\t\t\t\t\ttest = x<y ? -1 : x>y ? 1 : 0;\n\n\t\t\t\t\tif ( test !== 0 ) {\n\t\t\t\t\t\treturn sort.dir === 'asc' ? test : -test;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tx = aiOrig[a];\n\t\t\ty = aiOrig[b];\n\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t} );\n\t}\n\telse if ( aSort.length === 0 ) {\n\t\t// Apply index order\n\t\tdisplayMaster.sort(function (x, y) {\n\t\t\treturn x<y ? -1 : x>y ? 1 : 0;\n\t\t});\n\t}\n\n\tif (col === undefined) {\n\t\t// Tell the draw function that we have sorted the data\n\t\toSettings.bSorted = true;\n\t\toSettings.sortDetails = aSort;\n\n\t\t_fnCallbackFire( oSettings, null, 'order', [oSettings, aSort] );\n\t}\n\n\treturn displayMaster;\n}\n\n\n/**\n * Function to run on user sort request\n *  @param {object} settings dataTables settings object\n *  @param {node} attachTo node to attach the handler to\n *  @param {int} colIdx column sorting index\n *  @param {int} addIndex Counter\n *  @param {boolean} [shift=false] Shift click add\n *  @param {function} [callback] callback function\n *  @memberof DataTable#oApi\n */\nfunction _fnSortAdd ( settings, colIdx, addIndex, shift )\n{\n\tvar col = settings.aoColumns[ colIdx ];\n\tvar sorting = settings.aaSorting;\n\tvar asSorting = col.asSorting;\n\tvar nextSortIdx;\n\tvar next = function ( a, overflow ) {\n\t\tvar idx = a._idx;\n\t\tif ( idx === undefined ) {\n\t\t\tidx = asSorting.indexOf(a[1]);\n\t\t}\n\n\t\treturn idx+1 < asSorting.length ?\n\t\t\tidx+1 :\n\t\t\toverflow ?\n\t\t\t\tnull :\n\t\t\t\t0;\n\t};\n\n\tif ( ! col.bSortable ) {\n\t\treturn false;\n\t}\n\n\t// Convert to 2D array if needed\n\tif ( typeof sorting[0] === 'number' ) {\n\t\tsorting = settings.aaSorting = [ sorting ];\n\t}\n\n\t// If appending the sort then we are multi-column sorting\n\tif ( (shift || addIndex) && settings.oFeatures.bSortMulti ) {\n\t\t// Are we already doing some kind of sort on this column?\n\t\tvar sortIdx = _pluck(sorting, '0').indexOf(colIdx);\n\n\t\tif ( sortIdx !== -1 ) {\n\t\t\t// Yes, modify the sort\n\t\t\tnextSortIdx = next( sorting[sortIdx], true );\n\n\t\t\tif ( nextSortIdx === null && sorting.length === 1 ) {\n\t\t\t\tnextSortIdx = 0; // can't remove sorting completely\n\t\t\t}\n\n\t\t\tif ( nextSortIdx === null ) {\n\t\t\t\tsorting.splice( sortIdx, 1 );\n\t\t\t}\n\t\t\telse {\n\t\t\t\tsorting[sortIdx][1] = asSorting[ nextSortIdx ];\n\t\t\t\tsorting[sortIdx]._idx = nextSortIdx;\n\t\t\t}\n\t\t}\n\t\telse if (shift) {\n\t\t\t// No sort on this column yet, being added by shift click\n\t\t\t// add it as itself\n\t\t\tsorting.push( [ colIdx, asSorting[0], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t\telse {\n\t\t\t// No sort on this column yet, being added from a colspan\n\t\t\t// so add with same direction as first column\n\t\t\tsorting.push( [ colIdx, sorting[0][1], 0 ] );\n\t\t\tsorting[sorting.length-1]._idx = 0;\n\t\t}\n\t}\n\telse if ( sorting.length && sorting[0][0] == colIdx ) {\n\t\t// Single column - already sorting on this column, modify the sort\n\t\tnextSortIdx = next( sorting[0] );\n\n\t\tsorting.length = 1;\n\t\tsorting[0][1] = asSorting[ nextSortIdx ];\n\t\tsorting[0]._idx = nextSortIdx;\n\t}\n\telse {\n\t\t// Single column - sort only on this column\n\t\tsorting.length = 0;\n\t\tsorting.push( [ colIdx, asSorting[0] ] );\n\t\tsorting[0]._idx = 0;\n\t}\n}\n\n\n/**\n * Set the sorting classes on table's body, Note: it is safe to call this function\n * when bSort and bSortClasses are false\n *  @param {object} oSettings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnSortingClasses( settings )\n{\n\tvar oldSort = settings.aLastSort;\n\tvar sortClass = settings.oClasses.order.position;\n\tvar sort = _fnSortFlatten( settings );\n\tvar features = settings.oFeatures;\n\tvar i, ien, colIdx;\n\n\tif ( features.bSort && features.bSortClasses ) {\n\t\t// Remove old sorting classes\n\t\tfor ( i=0, ien=oldSort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = oldSort[i].src;\n\n\t\t\t// Remove column sorting\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.removeClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\n\t\t// Add new column sorting\n\t\tfor ( i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\tcolIdx = sort[i].src;\n\n\t\t\t$( _pluck( settings.aoData, 'anCells', colIdx ) )\n\t\t\t\t.addClass( sortClass + (i<2 ? i+1 : 3) );\n\t\t}\n\t}\n\n\tsettings.aLastSort = sort;\n}\n\n\n// Get the data to sort a column, be it from cache, fresh (populating the\n// cache), or from a sort formatter\nfunction _fnSortData( settings, colIdx )\n{\n\t// Custom sorting function - provided by the sort data type\n\tvar column = settings.aoColumns[ colIdx ];\n\tvar customSort = DataTable.ext.order[ column.sSortDataType ];\n\tvar customData;\n\n\tif ( customSort ) {\n\t\tcustomData = customSort.call( settings.oInstance, settings, colIdx,\n\t\t\t_fnColumnIndexToVisible( settings, colIdx )\n\t\t);\n\t}\n\n\t// Use / populate cache\n\tvar row, cellData;\n\tvar formatter = DataTable.ext.type.order[ column.sType+\"-pre\" ];\n\tvar data = settings.aoData;\n\n\tfor ( var rowIdx=0 ; rowIdx<data.length ; rowIdx++ ) {\n\t\t// Sparse array\n\t\tif (! data[rowIdx]) {\n\t\t\tcontinue;\n\t\t}\n\n\t\trow = data[rowIdx];\n\n\t\tif ( ! row._aSortData ) {\n\t\t\trow._aSortData = [];\n\t\t}\n\n\t\tif ( ! row._aSortData[colIdx] || customSort ) {\n\t\t\tcellData = customSort ?\n\t\t\t\tcustomData[rowIdx] : // If there was a custom sort function, use data from there\n\t\t\t\t_fnGetCellData( settings, rowIdx, colIdx, 'sort' );\n\n\t\t\trow._aSortData[ colIdx ] = formatter ?\n\t\t\t\tformatter( cellData, settings ) :\n\t\t\t\tcellData;\n\t\t}\n\t}\n}\n\n\n/**\n * State information for a table\n *\n * @param {*} settings\n * @returns State object\n */\nfunction _fnSaveState ( settings )\n{\n\tif (settings._bLoadingState) {\n\t\treturn;\n\t}\n\n\t/* Store the interesting variables */\n\tvar state = {\n\t\ttime:    +new Date(),\n\t\tstart:   settings._iDisplayStart,\n\t\tlength:  settings._iDisplayLength,\n\t\torder:   $.extend( true, [], settings.aaSorting ),\n\t\tsearch:  $.extend({}, settings.oPreviousSearch),\n\t\tcolumns: settings.aoColumns.map( function ( col, i ) {\n\t\t\treturn {\n\t\t\t\tvisible: col.bVisible,\n\t\t\t\tsearch: $.extend({}, settings.aoPreSearchCols[i])\n\t\t\t};\n\t\t} )\n\t};\n\n\tsettings.oSavedState = state;\n\t_fnCallbackFire( settings, \"aoStateSaveParams\", 'stateSaveParams', [settings, state] );\n\t\n\tif ( settings.oFeatures.bStateSave && !settings.bDestroying )\n\t{\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, state );\n\t}\t\n}\n\n\n/**\n * Attempt to load a saved table state\n *  @param {object} oSettings dataTables settings object\n *  @param {object} oInit DataTables init object so we can override settings\n *  @param {function} callback Callback to execute when the state has been loaded\n *  @memberof DataTable#oApi\n */\nfunction _fnLoadState ( settings, init, callback )\n{\n\tif ( ! settings.oFeatures.bStateSave ) {\n\t\tcallback();\n\t\treturn;\n\t}\n\n\tvar loaded = function(state) {\n\t\t_fnImplementState(settings, state, callback);\n\t}\n\n\tvar state = settings.fnStateLoadCallback.call( settings.oInstance, settings, loaded );\n\n\tif ( state !== undefined ) {\n\t\t_fnImplementState( settings, state, callback );\n\t}\n\t// otherwise, wait for the loaded callback to be executed\n\n\treturn true;\n}\n\nfunction _fnImplementState ( settings, s, callback) {\n\tvar i, ien;\n\tvar columns = settings.aoColumns;\n\tsettings._bLoadingState = true;\n\n\t// When StateRestore was introduced the state could now be implemented at any time\n\t// Not just initialisation. To do this an api instance is required in some places\n\tvar api = settings._bInitComplete ? new DataTable.Api(settings) : null;\n\n\tif ( ! s || ! s.time ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Reject old data\n\tvar duration = settings.iStateDuration;\n\tif ( duration > 0 && s.time < +new Date() - (duration*1000) ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Allow custom and plug-in manipulation functions to alter the saved data set and\n\t// cancelling of loading by returning false\n\tvar abStateLoad = _fnCallbackFire( settings, 'aoStateLoadParams', 'stateLoadParams', [settings, s] );\n\tif ( abStateLoad.indexOf(false) !== -1 ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Number of columns have changed - all bets are off, no restore of settings\n\tif ( s.columns && columns.length !== s.columns.length ) {\n\t\tsettings._bLoadingState = false;\n\t\tcallback();\n\t\treturn;\n\t}\n\n\t// Store the saved state so it might be accessed at any time\n\tsettings.oLoadedState = $.extend( true, {}, s );\n\n\t// This is needed for ColReorder, which has to happen first to allow all\n\t// the stored indexes to be usable. It is not publicly documented.\n\t_fnCallbackFire( settings, null, 'stateLoadInit', [settings, s], true );\n\n\t// Page Length\n\tif ( s.length !== undefined ) {\n\t\t// If already initialised just set the value directly so that the select element is also updated\n\t\tif (api) {\n\t\t\tapi.page.len(s.length)\n\t\t}\n\t\telse {\n\t\t\tsettings._iDisplayLength   = s.length;\n\t\t}\n\t}\n\n\t// Restore key features\n\tif ( s.start !== undefined ) {\n\t\tif(api === null) {\n\t\t\tsettings._iDisplayStart    = s.start;\n\t\t\tsettings.iInitDisplayStart = s.start;\n\t\t}\n\t\telse {\n\t\t\t_fnPageChange(settings, s.start/settings._iDisplayLength);\n\t\t}\n\t}\n\n\t// Order\n\tif ( s.order !== undefined ) {\n\t\tsettings.aaSorting = [];\n\t\t$.each( s.order, function ( i, col ) {\n\t\t\tsettings.aaSorting.push( col[0] >= columns.length ?\n\t\t\t\t[ 0, col[1] ] :\n\t\t\t\tcol\n\t\t\t);\n\t\t} );\n\t}\n\n\t// Search\n\tif ( s.search !== undefined ) {\n\t\t$.extend( settings.oPreviousSearch, s.search );\n\t}\n\n\t// Columns\n\tif ( s.columns ) {\n\t\tfor ( i=0, ien=s.columns.length ; i<ien ; i++ ) {\n\t\t\tvar col = s.columns[i];\n\n\t\t\t// Visibility\n\t\t\tif ( col.visible !== undefined ) {\n\t\t\t\t// If the api is defined, the table has been initialised so we need to use it rather than internal settings\n\t\t\t\tif (api) {\n\t\t\t\t\t// Don't redraw the columns on every iteration of this loop, we will do this at the end instead\n\t\t\t\t\tapi.column(i).visible(col.visible, false);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcolumns[i].bVisible = col.visible;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Search\n\t\t\tif ( col.search !== undefined ) {\n\t\t\t\t$.extend( settings.aoPreSearchCols[i], col.search );\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If the api is defined then we need to adjust the columns once the visibility has been changed\n\t\tif (api) {\n\t\t\tapi.columns.adjust();\n\t\t}\n\t}\n\n\tsettings._bLoadingState = false;\n\t_fnCallbackFire( settings, 'aoStateLoaded', 'stateLoaded', [settings, s] );\n\tcallback();\n}\n\n/**\n * Log an error message\n *  @param {object} settings dataTables settings object\n *  @param {int} level log error messages, or display them to the user\n *  @param {string} msg error message\n *  @param {int} tn Technical note id to get more information about the error.\n *  @memberof DataTable#oApi\n */\nfunction _fnLog( settings, level, msg, tn )\n{\n\tmsg = 'DataTables warning: '+\n\t\t(settings ? 'table id='+settings.sTableId+' - ' : '')+msg;\n\n\tif ( tn ) {\n\t\tmsg += '. For more information about this error, please see '+\n\t\t'https://datatables.net/tn/'+tn;\n\t}\n\n\tif ( ! level  ) {\n\t\t// Backwards compatibility pre 1.10\n\t\tvar ext = DataTable.ext;\n\t\tvar type = ext.sErrMode || ext.errMode;\n\n\t\tif ( settings ) {\n\t\t\t_fnCallbackFire( settings, null, 'dt-error', [ settings, tn, msg ], true );\n\t\t}\n\n\t\tif ( type == 'alert' ) {\n\t\t\talert( msg );\n\t\t}\n\t\telse if ( type == 'throw' ) {\n\t\t\tthrow new Error(msg);\n\t\t}\n\t\telse if ( typeof type == 'function' ) {\n\t\t\ttype( settings, tn, msg );\n\t\t}\n\t}\n\telse if ( window.console && console.log ) {\n\t\tconsole.log( msg );\n\t}\n}\n\n\n/**\n * See if a property is defined on one object, if so assign it to the other object\n *  @param {object} ret target object\n *  @param {object} src source object\n *  @param {string} name property\n *  @param {string} [mappedName] name to map too - optional, name used if not given\n *  @memberof DataTable#oApi\n */\nfunction _fnMap( ret, src, name, mappedName )\n{\n\tif ( Array.isArray( name ) ) {\n\t\t$.each( name, function (i, val) {\n\t\t\tif ( Array.isArray( val ) ) {\n\t\t\t\t_fnMap( ret, src, val[0], val[1] );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t_fnMap( ret, src, val );\n\t\t\t}\n\t\t} );\n\n\t\treturn;\n\t}\n\n\tif ( mappedName === undefined ) {\n\t\tmappedName = name;\n\t}\n\n\tif ( src[name] !== undefined ) {\n\t\tret[mappedName] = src[name];\n\t}\n}\n\n\n/**\n * Extend objects - very similar to jQuery.extend, but deep copy objects, and\n * shallow copy arrays. The reason we need to do this, is that we don't want to\n * deep copy array init values (such as aaSorting) since the dev wouldn't be\n * able to override them, but we do want to deep copy arrays.\n *  @param {object} out Object to extend\n *  @param {object} extender Object from which the properties will be applied to\n *      out\n *  @param {boolean} breakRefs If true, then arrays will be sliced to take an\n *      independent copy with the exception of the `data` or `aaData` parameters\n *      if they are present. This is so you can pass in a collection to\n *      DataTables and have that used as your data source without breaking the\n *      references\n *  @returns {object} out Reference, just for convenience - out === the return.\n *  @memberof DataTable#oApi\n *  @todo This doesn't take account of arrays inside the deep copied objects.\n */\nfunction _fnExtend( out, extender, breakRefs )\n{\n\tvar val;\n\n\tfor ( var prop in extender ) {\n\t\tif ( Object.prototype.hasOwnProperty.call(extender, prop) ) {\n\t\t\tval = extender[prop];\n\n\t\t\tif ( $.isPlainObject( val ) ) {\n\t\t\t\tif ( ! $.isPlainObject( out[prop] ) ) {\n\t\t\t\t\tout[prop] = {};\n\t\t\t\t}\n\t\t\t\t$.extend( true, out[prop], val );\n\t\t\t}\n\t\t\telse if ( breakRefs && prop !== 'data' && prop !== 'aaData' && Array.isArray(val) ) {\n\t\t\t\tout[prop] = val.slice();\n\t\t\t}\n\t\t\telse {\n\t\t\t\tout[prop] = val;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn out;\n}\n\n\n/**\n * Bind an event handers to allow a click or return key to activate the callback.\n * This is good for accessibility since a return on the keyboard will have the\n * same effect as a click, if the element has focus.\n *  @param {element} n Element to bind the action to\n *  @param {object|string} selector Selector (for delegated events) or data object\n *   to pass to the triggered function\n *  @param {function} fn Callback function for when the event is triggered\n *  @memberof DataTable#oApi\n */\nfunction _fnBindAction( n, selector, fn )\n{\n\t$(n)\n\t\t.on( 'click.DT', selector, function (e) {\n\t\t\tfn(e);\n\t\t} )\n\t\t.on( 'keypress.DT', selector, function (e){\n\t\t\tif ( e.which === 13 ) {\n\t\t\t\te.preventDefault();\n\t\t\t\tfn(e);\n\t\t\t}\n\t\t} )\n\t\t.on( 'selectstart.DT', selector, function () {\n\t\t\t// Don't want a double click resulting in text selection\n\t\t\treturn false;\n\t\t} );\n}\n\n\n/**\n * Register a callback function. Easily allows a callback function to be added to\n * an array store of callback functions that can then all be called together.\n *  @param {object} settings dataTables settings object\n *  @param {string} store Name of the array storage for the callbacks in oSettings\n *  @param {function} fn Function to be called back\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackReg( settings, store, fn )\n{\n\tif ( fn ) {\n\t\tsettings[store].push(fn);\n\t}\n}\n\n\n/**\n * Fire callback functions and trigger events. Note that the loop over the\n * callback array store is done backwards! Further note that you do not want to\n * fire off triggers in time sensitive applications (for example cell creation)\n * as its slow.\n *  @param {object} settings dataTables settings object\n *  @param {string} callbackArr Name of the array storage for the callbacks in\n *      oSettings\n *  @param {string} eventName Name of the jQuery custom event to trigger. If\n *      null no trigger is fired\n *  @param {array} args Array of arguments to pass to the callback function /\n *      trigger\n *  @param {boolean} [bubbles] True if the event should bubble\n *  @memberof DataTable#oApi\n */\nfunction _fnCallbackFire( settings, callbackArr, eventName, args, bubbles )\n{\n\tvar ret = [];\n\n\tif ( callbackArr ) {\n\t\tret = settings[callbackArr].slice().reverse().map( function (val) {\n\t\t\treturn val.apply( settings.oInstance, args );\n\t\t} );\n\t}\n\n\tif ( eventName !== null) {\n\t\tvar e = $.Event( eventName+'.dt' );\n\t\tvar table = $(settings.nTable);\n\t\t\n\t\t// Expose the DataTables API on the event object for easy access\n\t\te.dt = settings.api;\n\n\t\ttable[bubbles ?  'trigger' : 'triggerHandler']( e, args );\n\n\t\t// If not yet attached to the document, trigger the event\n\t\t// on the body directly to sort of simulate the bubble\n\t\tif (bubbles && table.parents('body').length === 0) {\n\t\t\t$('body').trigger( e, args );\n\t\t}\n\n\t\tret.push( e.result );\n\t}\n\n\treturn ret;\n}\n\n\nfunction _fnLengthOverflow ( settings )\n{\n\tvar\n\t\tstart = settings._iDisplayStart,\n\t\tend = settings.fnDisplayEnd(),\n\t\tlen = settings._iDisplayLength;\n\n\t/* If we have space to show extra rows (backing up from the end point - then do so */\n\tif ( start >= end )\n\t{\n\t\tstart = end - len;\n\t}\n\n\t// Keep the start record on the current page\n\tstart -= (start % len);\n\n\tif ( len === -1 || start < 0 )\n\t{\n\t\tstart = 0;\n\t}\n\n\tsettings._iDisplayStart = start;\n}\n\n\nfunction _fnRenderer( settings, type )\n{\n\tvar renderer = settings.renderer;\n\tvar host = DataTable.ext.renderer[type];\n\n\tif ( $.isPlainObject( renderer ) && renderer[type] ) {\n\t\t// Specific renderer for this type. If available use it, otherwise use\n\t\t// the default.\n\t\treturn host[renderer[type]] || host._;\n\t}\n\telse if ( typeof renderer === 'string' ) {\n\t\t// Common renderer - if there is one available for this type use it,\n\t\t// otherwise use the default\n\t\treturn host[renderer] || host._;\n\t}\n\n\t// Use the default\n\treturn host._;\n}\n\n\n/**\n * Detect the data source being used for the table. Used to simplify the code\n * a little (ajax) and to make it compress a little smaller.\n *\n *  @param {object} settings dataTables settings object\n *  @returns {string} Data source\n *  @memberof DataTable#oApi\n */\nfunction _fnDataSource ( settings )\n{\n\tif ( settings.oFeatures.bServerSide ) {\n\t\treturn 'ssp';\n\t}\n\telse if ( settings.ajax ) {\n\t\treturn 'ajax';\n\t}\n\treturn 'dom';\n}\n\n/**\n * Common replacement for language strings\n *\n * @param {*} settings DT settings object\n * @param {*} str String with values to replace\n * @param {*} entries Plural number for _ENTRIES_ - can be undefined\n * @returns String\n */\nfunction _fnMacros ( settings, str, entries )\n{\n\t// When infinite scrolling, we are always starting at 1. _iDisplayStart is\n\t// used only internally\n\tvar\n\t\tformatter  = settings.fnFormatNumber,\n\t\tstart      = settings._iDisplayStart+1,\n\t\tlen        = settings._iDisplayLength,\n\t\tvis        = settings.fnRecordsDisplay(),\n\t\tmax        = settings.fnRecordsTotal(),\n\t\tall        = len === -1;\n\n\treturn str.\n\t\treplace(/_START_/g, formatter.call( settings, start ) ).\n\t\treplace(/_END_/g,   formatter.call( settings, settings.fnDisplayEnd() ) ).\n\t\treplace(/_MAX_/g,   formatter.call( settings, max ) ).\n\t\treplace(/_TOTAL_/g, formatter.call( settings, vis ) ).\n\t\treplace(/_PAGE_/g,  formatter.call( settings, all ? 1 : Math.ceil( start / len ) ) ).\n\t\treplace(/_PAGES_/g, formatter.call( settings, all ? 1 : Math.ceil( vis / len ) ) ).\n\t\treplace(/_ENTRIES_/g, settings.api.i18n('entries', '', entries) ).\n\t\treplace(/_ENTRIES-MAX_/g, settings.api.i18n('entries', '', max) ).\n\t\treplace(/_ENTRIES-TOTAL_/g, settings.api.i18n('entries', '', vis) );\n}\n\n\n\n/**\n * Computed structure of the DataTables API, defined by the options passed to\n * `DataTable.Api.register()` when building the API.\n *\n * The structure is built in order to speed creation and extension of the Api\n * objects since the extensions are effectively pre-parsed.\n *\n * The array is an array of objects with the following structure, where this\n * base array represents the Api prototype base:\n *\n *     [\n *       {\n *         name:      'data'                -- string   - Property name\n *         val:       function () {},       -- function - Api method (or undefined if just an object\n *         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n *         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n *       },\n *       {\n *         name:     'row'\n *         val:       {},\n *         methodExt: [ ... ],\n *         propExt:   [\n *           {\n *             name:      'data'\n *             val:       function () {},\n *             methodExt: [ ... ],\n *             propExt:   [ ... ]\n *           },\n *           ...\n *         ]\n *       }\n *     ]\n *\n * @type {Array}\n * @ignore\n */\nvar __apiStruct = [];\n\n\n/**\n * `Array.prototype` reference.\n *\n * @type object\n * @ignore\n */\nvar __arrayProto = Array.prototype;\n\n\n/**\n * Abstraction for `context` parameter of the `Api` constructor to allow it to\n * take several different forms for ease of use.\n *\n * Each of the input parameter types will be converted to a DataTables settings\n * object where possible.\n *\n * @param  {string|node|jQuery|object} mixed DataTable identifier. Can be one\n *   of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n *   * `DataTables.Api` - API instance\n * @return {array|null} Matching DataTables settings objects. `null` or\n *   `undefined` is returned if no matching DataTable is found.\n * @ignore\n */\nvar _toSettings = function ( mixed )\n{\n\tvar idx, jq;\n\tvar settings = DataTable.settings;\n\tvar tables = _pluck(settings, 'nTable');\n\n\tif ( ! mixed ) {\n\t\treturn [];\n\t}\n\telse if ( mixed.nTable && mixed.oFeatures ) {\n\t\t// DataTables settings object\n\t\treturn [ mixed ];\n\t}\n\telse if ( mixed.nodeName && mixed.nodeName.toLowerCase() === 'table' ) {\n\t\t// Table node\n\t\tidx = tables.indexOf(mixed);\n\t\treturn idx !== -1 ? [ settings[idx] ] : null;\n\t}\n\telse if ( mixed && typeof mixed.settings === 'function' ) {\n\t\treturn mixed.settings().toArray();\n\t}\n\telse if ( typeof mixed === 'string' ) {\n\t\t// jQuery selector\n\t\tjq = $(mixed).get();\n\t}\n\telse if ( mixed instanceof $ ) {\n\t\t// jQuery object (also DataTables instance)\n\t\tjq = mixed.get();\n\t}\n\n\tif ( jq ) {\n\t\treturn settings.filter(function (v, idx) {\n\t\t\treturn jq.includes(tables[idx]);\n\t\t});\n\t}\n};\n\n\n/**\n * DataTables API class - used to control and interface with  one or more\n * DataTables enhanced tables.\n *\n * The API class is heavily based on jQuery, presenting a chainable interface\n * that you can use to interact with tables. Each instance of the API class has\n * a \"context\" - i.e. the tables that it will operate on. This could be a single\n * table, all tables on a page or a sub-set thereof.\n *\n * Additionally the API is designed to allow you to easily work with the data in\n * the tables, retrieving and manipulating it as required. This is done by\n * presenting the API class as an array like interface. The contents of the\n * array depend upon the actions requested by each method (for example\n * `rows().nodes()` will return an array of nodes, while `rows().data()` will\n * return an array of objects or arrays depending upon your table's\n * configuration). The API object has a number of array like methods (`push`,\n * `pop`, `reverse` etc) as well as additional helper methods (`each`, `pluck`,\n * `unique` etc) to assist your working with the data held in a table.\n *\n * Most methods (those which return an Api instance) are chainable, which means\n * the return from a method call also has all of the methods available that the\n * top level object had. For example, these two calls are equivalent:\n *\n *     // Not chained\n *     api.row.add( {...} );\n *     api.draw();\n *\n *     // Chained\n *     api.row.add( {...} ).draw();\n *\n * @class DataTable.Api\n * @param {array|object|string|jQuery} context DataTable identifier. This is\n *   used to define which DataTables enhanced tables this API will operate on.\n *   Can be one of:\n *\n *   * `string` - jQuery selector. Any DataTables' matching the given selector\n *     with be found and used.\n *   * `node` - `TABLE` node which has already been formed into a DataTable.\n *   * `jQuery` - A jQuery object of `TABLE` nodes.\n *   * `object` - DataTables settings object\n * @param {array} [data] Data to initialise the Api instance with.\n *\n * @example\n *   // Direct initialisation during DataTables construction\n *   var api = $('#example').DataTable();\n *\n * @example\n *   // Initialisation using a DataTables jQuery object\n *   var api = $('#example').dataTable().api();\n *\n * @example\n *   // Initialisation as a constructor\n *   var api = new DataTable.Api( 'table.dataTable' );\n */\n_Api = function ( context, data )\n{\n\tif ( ! (this instanceof _Api) ) {\n\t\treturn new _Api( context, data );\n\t}\n\n\tvar i;\n\tvar settings = [];\n\tvar ctxSettings = function ( o ) {\n\t\tvar a = _toSettings( o );\n\t\tif ( a ) {\n\t\t\tsettings.push.apply( settings, a );\n\t\t}\n\t};\n\n\tif ( Array.isArray( context ) ) {\n\t\tfor ( i=0 ; i<context.length ; i++ ) {\n\t\t\tctxSettings( context[i] );\n\t\t}\n\t}\n\telse {\n\t\tctxSettings( context );\n\t}\n\n\t// Remove duplicates\n\tthis.context = settings.length > 1\n\t\t? _unique( settings )\n\t\t: settings;\n\n\t// Initial data\n\tif ( data ) {\n\t\t// Chrome can throw a max stack error if apply is called with\n\t\t// too large an array, but apply is faster.\n\t\tif (data.length < 10000) {\n\t\t\tthis.push.apply(this, data);\n\t\t}\n\t\telse {\n\t\t\tfor (i=0 ; i<data.length ; i++) {\n\t\t\t\tthis.push(data[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector\n\tthis.selector = {\n\t\trows: null,\n\t\tcols: null,\n\t\topts: null\n\t};\n\n\t_Api.extend( this, this, __apiStruct );\n};\n\nDataTable.Api = _Api;\n\n// Don't destroy the existing prototype, just extend it. Required for jQuery 2's\n// isPlainObject.\n$.extend( _Api.prototype, {\n\tany: function ()\n\t{\n\t\treturn this.count() !== 0;\n\t},\n\n\tcontext: [], // array of table settings objects\n\n\tcount: function ()\n\t{\n\t\treturn this.flatten().length;\n\t},\n\n\teach: function ( fn )\n\t{\n\t\tfor ( var i=0, ien=this.length ; i<ien; i++ ) {\n\t\t\tfn.call( this, this[i], i, this );\n\t\t}\n\n\t\treturn this;\n\t},\n\n\teq: function ( idx )\n\t{\n\t\tvar ctx = this.context;\n\n\t\treturn ctx.length > idx ?\n\t\t\tnew _Api( ctx[idx], this[idx] ) :\n\t\t\tnull;\n\t},\n\n\tfilter: function ( fn )\n\t{\n\t\tvar a = __arrayProto.filter.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tflatten: function ()\n\t{\n\t\tvar a = [];\n\n\t\treturn new _Api( this.context, a.concat.apply( a, this.toArray() ) );\n\t},\n\n\tget: function ( idx )\n\t{\n\t\treturn this[ idx ];\n\t},\n\n\tjoin:    __arrayProto.join,\n\n\tincludes: function ( find ) {\n\t\treturn this.indexOf( find ) === -1 ? false : true;\n\t},\n\n\tindexOf: __arrayProto.indexOf,\n\n\titerator: function ( flatten, type, fn, alwaysNew ) {\n\t\tvar\n\t\t\ta = [], ret,\n\t\t\ti, ien, j, jen,\n\t\t\tcontext = this.context,\n\t\t\trows, items, item,\n\t\t\tselector = this.selector;\n\n\t\t// Argument shifting\n\t\tif ( typeof flatten === 'string' ) {\n\t\t\talwaysNew = fn;\n\t\t\tfn = type;\n\t\t\ttype = flatten;\n\t\t\tflatten = false;\n\t\t}\n\n\t\tfor ( i=0, ien=context.length ; i<ien ; i++ ) {\n\t\t\tvar apiInst = new _Api( context[i] );\n\n\t\t\tif ( type === 'table' ) {\n\t\t\t\tret = fn.call( apiInst, context[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'columns' || type === 'rows' ) {\n\t\t\t\t// this has same length as context - one entry for each table\n\t\t\t\tret = fn.call( apiInst, context[i], this[i], i );\n\n\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\ta.push( ret );\n\t\t\t\t}\n\t\t\t}\n\t\t\telse if ( type === 'every' || type === 'column' || type === 'column-rows' || type === 'row' || type === 'cell' ) {\n\t\t\t\t// columns and rows share the same structure.\n\t\t\t\t// 'this' is an array of column indexes for each context\n\t\t\t\titems = this[i];\n\n\t\t\t\tif ( type === 'column-rows' ) {\n\t\t\t\t\trows = _selector_row_indexes( context[i], selector.opts );\n\t\t\t\t}\n\n\t\t\t\tfor ( j=0, jen=items.length ; j<jen ; j++ ) {\n\t\t\t\t\titem = items[j];\n\n\t\t\t\t\tif ( type === 'cell' ) {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item.row, item.column, i, j );\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tret = fn.call( apiInst, context[i], item, i, j, rows );\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ret !== undefined ) {\n\t\t\t\t\t\ta.push( ret );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif ( a.length || alwaysNew ) {\n\t\t\tvar api = new _Api( context, flatten ? a.concat.apply( [], a ) : a );\n\t\t\tvar apiSelector = api.selector;\n\t\t\tapiSelector.rows = selector.rows;\n\t\t\tapiSelector.cols = selector.cols;\n\t\t\tapiSelector.opts = selector.opts;\n\t\t\treturn api;\n\t\t}\n\t\treturn this;\n\t},\n\n\tlastIndexOf: __arrayProto.lastIndexOf,\n\n\tlength:  0,\n\n\tmap: function ( fn )\n\t{\n\t\tvar a = __arrayProto.map.call( this, fn, this );\n\n\t\treturn new _Api( this.context, a );\n\t},\n\n\tpluck: function ( prop )\n\t{\n\t\tvar fn = DataTable.util.get(prop);\n\n\t\treturn this.map( function ( el ) {\n\t\t\treturn fn(el);\n\t\t} );\n\t},\n\n\tpop:     __arrayProto.pop,\n\n\tpush:    __arrayProto.push,\n\n\treduce: __arrayProto.reduce,\n\n\treduceRight: __arrayProto.reduceRight,\n\n\treverse: __arrayProto.reverse,\n\n\t// Object with rows, columns and opts\n\tselector: null,\n\n\tshift:   __arrayProto.shift,\n\n\tslice: function () {\n\t\treturn new _Api( this.context, this );\n\t},\n\n\tsort:    __arrayProto.sort,\n\n\tsplice:  __arrayProto.splice,\n\n\ttoArray: function ()\n\t{\n\t\treturn __arrayProto.slice.call( this );\n\t},\n\n\tto$: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\ttoJQuery: function ()\n\t{\n\t\treturn $( this );\n\t},\n\n\tunique: function ()\n\t{\n\t\treturn new _Api( this.context, _unique(this.toArray()) );\n\t},\n\n\tunshift: __arrayProto.unshift\n} );\n\n\nfunction _api_scope( scope, fn, struc ) {\n\treturn function () {\n\t\tvar ret = fn.apply( scope || this, arguments );\n\n\t\t// Method extension\n\t\t_Api.extend( ret, ret, struc.methodExt );\n\t\treturn ret;\n\t};\n}\n\nfunction _api_find( src, name ) {\n\tfor ( var i=0, ien=src.length ; i<ien ; i++ ) {\n\t\tif ( src[i].name === name ) {\n\t\t\treturn src[i];\n\t\t}\n\t}\n\treturn null;\n}\n\nwindow.__apiStruct = __apiStruct;\n\n_Api.extend = function ( scope, obj, ext )\n{\n\t// Only extend API instances and static properties of the API\n\tif ( ! ext.length || ! obj || ( ! (obj instanceof _Api) && ! obj.__dt_wrapper ) ) {\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\tstruct;\n\n\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\tstruct = ext[i];\n\n\t\tif (struct.name === '__proto__') {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Value\n\t\tobj[ struct.name ] = struct.type === 'function' ?\n\t\t\t_api_scope( scope, struct.val, struct ) :\n\t\t\tstruct.type === 'object' ?\n\t\t\t\t{} :\n\t\t\t\tstruct.val;\n\n\t\tobj[ struct.name ].__dt_wrapper = true;\n\n\t\t// Property extension\n\t\t_Api.extend( scope, obj[ struct.name ], struct.propExt );\n\t}\n};\n\n//     [\n//       {\n//         name:      'data'                -- string   - Property name\n//         val:       function () {},       -- function - Api method (or undefined if just an object\n//         methodExt: [ ... ],              -- array    - Array of Api object definitions to extend the method result\n//         propExt:   [ ... ]               -- array    - Array of Api object definitions to extend the property\n//       },\n//       {\n//         name:     'row'\n//         val:       {},\n//         methodExt: [ ... ],\n//         propExt:   [\n//           {\n//             name:      'data'\n//             val:       function () {},\n//             methodExt: [ ... ],\n//             propExt:   [ ... ]\n//           },\n//           ...\n//         ]\n//       }\n//     ]\n\n\n_Api.register = _api_register = function ( name, val )\n{\n\tif ( Array.isArray( name ) ) {\n\t\tfor ( var j=0, jen=name.length ; j<jen ; j++ ) {\n\t\t\t_Api.register( name[j], val );\n\t\t}\n\t\treturn;\n\t}\n\n\tvar\n\t\ti, ien,\n\t\their = name.split('.'),\n\t\tstruct = __apiStruct,\n\t\tkey, method;\n\n\tfor ( i=0, ien=heir.length ; i<ien ; i++ ) {\n\t\tmethod = heir[i].indexOf('()') !== -1;\n\t\tkey = method ?\n\t\t\their[i].replace('()', '') :\n\t\t\their[i];\n\n\t\tvar src = _api_find( struct, key );\n\t\tif ( ! src ) {\n\t\t\tsrc = {\n\t\t\t\tname:      key,\n\t\t\t\tval:       {},\n\t\t\t\tmethodExt: [],\n\t\t\t\tpropExt:   [],\n\t\t\t\ttype:      'object'\n\t\t\t};\n\t\t\tstruct.push( src );\n\t\t}\n\n\t\tif ( i === ien-1 ) {\n\t\t\tsrc.val = val;\n\t\t\tsrc.type = typeof val === 'function' ?\n\t\t\t\t'function' :\n\t\t\t\t$.isPlainObject( val ) ?\n\t\t\t\t\t'object' :\n\t\t\t\t\t'other';\n\t\t}\n\t\telse {\n\t\t\tstruct = method ?\n\t\t\t\tsrc.methodExt :\n\t\t\t\tsrc.propExt;\n\t\t}\n\t}\n};\n\n_Api.registerPlural = _api_registerPlural = function ( pluralName, singularName, val ) {\n\t_Api.register( pluralName, val );\n\n\t_Api.register( singularName, function () {\n\t\tvar ret = val.apply( this, arguments );\n\n\t\tif ( ret === this ) {\n\t\t\t// Returned item is the API instance that was passed in, return it\n\t\t\treturn this;\n\t\t}\n\t\telse if ( ret instanceof _Api ) {\n\t\t\t// New API instance returned, want the value from the first item\n\t\t\t// in the returned array for the singular result.\n\t\t\treturn ret.length ?\n\t\t\t\tArray.isArray( ret[0] ) ?\n\t\t\t\t\tnew _Api( ret.context, ret[0] ) : // Array results are 'enhanced'\n\t\t\t\t\tret[0] :\n\t\t\t\tundefined;\n\t\t}\n\n\t\t// Non-API return - just fire it back\n\t\treturn ret;\n\t} );\n};\n\n\n/**\n * Selector for HTML tables. Apply the given selector to the give array of\n * DataTables settings objects.\n *\n * @param {string|integer} [selector] jQuery selector string or integer\n * @param  {array} Array of DataTables settings objects to be filtered\n * @return {array}\n * @ignore\n */\nvar __table_selector = function ( selector, a )\n{\n\tif ( Array.isArray(selector) ) {\n\t\tvar result = [];\n\n\t\tselector.forEach(function (sel) {\n\t\t\tvar inner = __table_selector(sel, a);\n\n\t\t\tresult.push.apply(result, inner);\n\t\t});\n\n\t\treturn result.filter( function (item) {\n\t\t\treturn item;\n\t\t});\n\t}\n\n\t// Integer is used to pick out a table by index\n\tif ( typeof selector === 'number' ) {\n\t\treturn [ a[ selector ] ];\n\t}\n\n\t// Perform a jQuery selector on the table nodes\n\tvar nodes = a.map( function (el) {\n\t\treturn el.nTable;\n\t} );\n\n\treturn $(nodes)\n\t\t.filter( selector )\n\t\t.map( function () {\n\t\t\t// Need to translate back from the table node to the settings\n\t\t\tvar idx = nodes.indexOf(this);\n\t\t\treturn a[ idx ];\n\t\t} )\n\t\t.toArray();\n};\n\n\n\n/**\n * Context selector for the API's context (i.e. the tables the API instance\n * refers to.\n *\n * @name    DataTable.Api#tables\n * @param {string|integer} [selector] Selector to pick which tables the iterator\n *   should operate on. If not given, all tables in the current context are\n *   used. This can be given as a jQuery selector (for example `':gt(0)'`) to\n *   select multiple tables or as an integer to select a single table.\n * @returns {DataTable.Api} Returns a new API instance if a selector is given.\n */\n_api_register( 'tables()', function ( selector ) {\n\t// A new instance is created if there was a selector specified\n\treturn selector !== undefined && selector !== null ?\n\t\tnew _Api( __table_selector( selector, this.context ) ) :\n\t\tthis;\n} );\n\n\n_api_register( 'table()', function ( selector ) {\n\tvar tables = this.tables( selector );\n\tvar ctx = tables.context;\n\n\t// Truncate to the first matched table\n\treturn ctx.length ?\n\t\tnew _Api( ctx[0] ) :\n\t\ttables;\n} );\n\n// Common methods, combined to reduce size\n[\n\t['nodes', 'node', 'nTable'],\n\t['body', 'body', 'nTBody'],\n\t['header', 'header', 'nTHead'],\n\t['footer', 'footer', 'nTFoot'],\n].forEach(function (item) {\n\t_api_registerPlural(\n\t\t'tables().' + item[0] + '()',\n\t\t'table().' + item[1] + '()' ,\n\t\tfunction () {\n\t\t\treturn this.iterator( 'table', function ( ctx ) {\n\t\t\t\treturn ctx[item[2]];\n\t\t\t}, 1 );\n\t\t}\n\t);\n});\n\n// Structure methods\n[\n\t['header', 'aoHeader'],\n\t['footer', 'aoFooter'],\n].forEach(function (item) {\n\t_api_register( 'table().' + item[0] + '.structure()' , function (selector) {\n\t\tvar indexes = this.columns(selector).indexes().flatten();\n\t\tvar ctx = this.context[0];\n\t\t\n\t\treturn _fnHeaderLayout(ctx, ctx[item[1]], indexes);\n\t} );\n})\n\n\n_api_registerPlural( 'tables().containers()', 'table().container()' , function () {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\treturn ctx.nTableWrapper;\n\t}, 1 );\n} );\n\n_api_register( 'tables().every()', function ( fn ) {\n\tvar that = this;\n\n\treturn this.iterator('table', function (s, i) {\n\t\tfn.call(that.table(i), i);\n\t});\n});\n\n_api_register( 'caption()', function ( value, side ) {\n\tvar context = this.context;\n\n\t// Getter - return existing node's content\n\tif ( value === undefined ) {\n\t\tvar caption = context[0].captionNode;\n\n\t\treturn caption && context.length ?\n\t\t\tcaption.innerHTML : \n\t\t\tnull;\n\t}\n\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\tvar table = $(ctx.nTable);\n\t\tvar caption = $(ctx.captionNode);\n\t\tvar container = $(ctx.nTableWrapper);\n\n\t\t// Create the node if it doesn't exist yet\n\t\tif ( ! caption.length ) {\n\t\t\tcaption = $('<caption/>').html( value );\n\t\t\tctx.captionNode = caption[0];\n\n\t\t\t// If side isn't set, we need to insert into the document to let the\n\t\t\t// CSS decide so we can read it back, otherwise there is no way to\n\t\t\t// know if the CSS would put it top or bottom for scrolling\n\t\t\tif (! side) {\n\t\t\t\ttable.prepend(caption);\n\n\t\t\t\tside = caption.css('caption-side');\n\t\t\t}\n\t\t}\n\n\t\tcaption.html( value );\n\n\t\tif ( side ) {\n\t\t\tcaption.css( 'caption-side', side );\n\t\t\tcaption[0]._captionSide = side;\n\t\t}\n\n\t\tif (container.find('div.dataTables_scroll').length) {\n\t\t\tvar selector = (side === 'top' ? 'Head' : 'Foot');\n\n\t\t\tcontainer.find('div.dataTables_scroll'+ selector +' table').prepend(caption);\n\t\t}\n\t\telse {\n\t\t\ttable.prepend(caption);\n\t\t}\n\t}, 1 );\n} );\n\n_api_register( 'caption.node()', function () {\n\tvar ctx = this.context;\n\n\treturn ctx.length ? ctx[0].captionNode : null;\n} );\n\n\n/**\n * Redraw the tables in the current context.\n */\n_api_register( 'draw()', function ( paging ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( paging === 'page' ) {\n\t\t\t_fnDraw( settings );\n\t\t}\n\t\telse {\n\t\t\tif ( typeof paging === 'string' ) {\n\t\t\t\tpaging = paging === 'full-hold' ?\n\t\t\t\t\tfalse :\n\t\t\t\t\ttrue;\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, paging===false );\n\t\t}\n\t} );\n} );\n\n\n\n/**\n * Get the current page index.\n *\n * @return {integer} Current page index (zero based)\n *//**\n * Set the current page.\n *\n * Note that if you attempt to show a page which does not exist, DataTables will\n * not throw an error, but rather reset the paging.\n *\n * @param {integer|string} action The paging action to take. This can be one of:\n *  * `integer` - The page index to jump to\n *  * `string` - An action to take:\n *    * `first` - Jump to first page.\n *    * `next` - Jump to the next page\n *    * `previous` - Jump to previous page\n *    * `last` - Jump to the last page.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page()', function ( action ) {\n\tif ( action === undefined ) {\n\t\treturn this.page.info().page; // not an expensive call\n\t}\n\n\t// else, have an action to take on all tables\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnPageChange( settings, action );\n\t} );\n} );\n\n\n/**\n * Paging information for the first table in the current context.\n *\n * If you require paging information for another table, use the `table()` method\n * with a suitable selector.\n *\n * @return {object} Object with the following properties set:\n *  * `page` - Current page index (zero based - i.e. the first page is `0`)\n *  * `pages` - Total number of pages\n *  * `start` - Display index for the first record shown on the current page\n *  * `end` - Display index for the last record shown on the current page\n *  * `length` - Display length (number of records). Note that generally `start\n *    + length = end`, but this is not always true, for example if there are\n *    only 2 records to show on the final page, with a length of 10.\n *  * `recordsTotal` - Full data set length\n *  * `recordsDisplay` - Data set length once the current filtering criterion\n *    are applied.\n */\n_api_register( 'page.info()', function () {\n\tif ( this.context.length === 0 ) {\n\t\treturn undefined;\n\t}\n\n\tvar\n\t\tsettings   = this.context[0],\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings.oFeatures.bPaginate ? settings._iDisplayLength : -1,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1;\n\n\treturn {\n\t\t\"page\":           all ? 0 : Math.floor( start / len ),\n\t\t\"pages\":          all ? 1 : Math.ceil( visRecords / len ),\n\t\t\"start\":          start,\n\t\t\"end\":            settings.fnDisplayEnd(),\n\t\t\"length\":         len,\n\t\t\"recordsTotal\":   settings.fnRecordsTotal(),\n\t\t\"recordsDisplay\": visRecords,\n\t\t\"serverSide\":     _fnDataSource( settings ) === 'ssp'\n\t};\n} );\n\n\n/**\n * Get the current page length.\n *\n * @return {integer} Current page length. Note `-1` indicates that all records\n *   are to be shown.\n *//**\n * Set the current page length.\n *\n * @param {integer} Page length to set. Use `-1` to show all records.\n * @returns {DataTables.Api} this\n */\n_api_register( 'page.len()', function ( len ) {\n\t// Note that we can't call this function 'length()' because `length`\n\t// is a Javascript property of functions which defines how many arguments\n\t// the function expects.\n\tif ( len === undefined ) {\n\t\treturn this.context.length !== 0 ?\n\t\t\tthis.context[0]._iDisplayLength :\n\t\t\tundefined;\n\t}\n\n\t// else, set the page length\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLengthChange( settings, len );\n\t} );\n} );\n\n\n\nvar __reload = function ( settings, holdPosition, callback ) {\n\t// Use the draw event to trigger a callback\n\tif ( callback ) {\n\t\tvar api = new _Api( settings );\n\n\t\tapi.one( 'draw', function () {\n\t\t\tcallback( api.ajax.json() );\n\t\t} );\n\t}\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t_fnReDraw( settings, holdPosition );\n\t}\n\telse {\n\t\t_fnProcessingDisplay( settings, true );\n\n\t\t// Cancel an existing request\n\t\tvar xhr = settings.jqXHR;\n\t\tif ( xhr && xhr.readyState !== 4 ) {\n\t\t\txhr.abort();\n\t\t}\n\n\t\t// Trigger xhr\n\t\t_fnBuildAjax( settings, {}, function( json ) {\n\t\t\t_fnClearTable( settings );\n\n\t\t\tvar data = _fnAjaxDataSrc( settings, json );\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\t_fnAddData( settings, data[i] );\n\t\t\t}\n\n\t\t\t_fnReDraw( settings, holdPosition );\n\t\t\t_fnInitComplete( settings );\n\t\t\t_fnProcessingDisplay( settings, false );\n\t\t} );\n\t}\n};\n\n\n/**\n * Get the JSON response from the last Ajax request that DataTables made to the\n * server. Note that this returns the JSON from the first table in the current\n * context.\n *\n * @return {object} JSON received from the server.\n */\n_api_register( 'ajax.json()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].json;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Get the data submitted in the last Ajax request\n */\n_api_register( 'ajax.params()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length > 0 ) {\n\t\treturn ctx[0].oAjaxData;\n\t}\n\n\t// else return undefined;\n} );\n\n\n/**\n * Reload tables from the Ajax data source. Note that this function will\n * automatically re-draw the table when the remote data has been loaded.\n *\n * @param {boolean} [reset=true] Reset (default) or hold the current paging\n *   position. A full re-sort and re-filter is performed when this method is\n *   called, which is why the pagination reset is the default action.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.reload()', function ( callback, resetPaging ) {\n\treturn this.iterator( 'table', function (settings) {\n\t\t__reload( settings, resetPaging===false, callback );\n\t} );\n} );\n\n\n/**\n * Get the current Ajax URL. Note that this returns the URL from the first\n * table in the current context.\n *\n * @return {string} Current Ajax source URL\n *//**\n * Set the Ajax URL. Note that this will set the URL for all tables in the\n * current context.\n *\n * @param {string} url URL to set.\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url()', function ( url ) {\n\tvar ctx = this.context;\n\n\tif ( url === undefined ) {\n\t\t// get\n\t\tif ( ctx.length === 0 ) {\n\t\t\treturn undefined;\n\t\t}\n\t\tctx = ctx[0];\n\n\t\treturn $.isPlainObject( ctx.ajax ) ?\n\t\t\tctx.ajax.url :\n\t\t\tctx.ajax;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( $.isPlainObject( settings.ajax ) ) {\n\t\t\tsettings.ajax.url = url;\n\t\t}\n\t\telse {\n\t\t\tsettings.ajax = url;\n\t\t}\n\t} );\n} );\n\n\n/**\n * Load data from the newly set Ajax URL. Note that this method is only\n * available when `ajax.url()` is used to set a URL. Additionally, this method\n * has the same effect as calling `ajax.reload()` but is provided for\n * convenience when setting a new URL. Like `ajax.reload()` it will\n * automatically redraw the table once the remote data has been loaded.\n *\n * @returns {DataTables.Api} this\n */\n_api_register( 'ajax.url().load()', function ( callback, resetPaging ) {\n\t// Same as a reload, but makes sense to present it for easy access after a\n\t// url change\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t__reload( ctx, resetPaging===false, callback );\n\t} );\n} );\n\n\n\n\nvar _selector_run = function ( type, selector, selectFn, settings, opts )\n{\n\tvar\n\t\tout = [], res,\n\t\ta, i, ien, j, jen,\n\t\tselectorType = typeof selector;\n\n\t// Can't just check for isArray here, as an API or jQuery instance might be\n\t// given with their array like look\n\tif ( ! selector || selectorType === 'string' || selectorType === 'function' || selector.length === undefined ) {\n\t\tselector = [ selector ];\n\t}\n\n\tfor ( i=0, ien=selector.length ; i<ien ; i++ ) {\n\t\t// Only split on simple strings - complex expressions will be jQuery selectors\n\t\ta = selector[i] && selector[i].split && ! selector[i].match(/[[(:]/) ?\n\t\t\tselector[i].split(',') :\n\t\t\t[ selector[i] ];\n\n\t\tfor ( j=0, jen=a.length ; j<jen ; j++ ) {\n\t\t\tres = selectFn( typeof a[j] === 'string' ? (a[j]).trim() : a[j] );\n\n\t\t\t// Remove empty items\n\t\t\tres = res.filter( function (item) {\n\t\t\t\treturn item !== null && item !== undefined;\n\t\t\t});\n\n\t\t\tif ( res && res.length ) {\n\t\t\t\tout = out.concat( res );\n\t\t\t}\n\t\t}\n\t}\n\n\t// selector extensions\n\tvar ext = _ext.selector[ type ];\n\tif ( ext.length ) {\n\t\tfor ( i=0, ien=ext.length ; i<ien ; i++ ) {\n\t\t\tout = ext[i]( settings, opts, out );\n\t\t}\n\t}\n\n\treturn _unique( out );\n};\n\n\nvar _selector_opts = function ( opts )\n{\n\tif ( ! opts ) {\n\t\topts = {};\n\t}\n\n\t// Backwards compatibility for 1.9- which used the terminology filter rather\n\t// than search\n\tif ( opts.filter && opts.search === undefined ) {\n\t\topts.search = opts.filter;\n\t}\n\n\treturn $.extend( {\n\t\tsearch: 'none',\n\t\torder: 'current',\n\t\tpage: 'all'\n\t}, opts );\n};\n\n\n// Reduce the API instance to the first item found\nvar _selector_first = function ( old )\n{\n\tvar inst = new _Api(old.context[0]);\n\n\t// Use a push rather than passing to the constructor, since it will\n\t// merge arrays down automatically, which isn't what is wanted here\n\tif (old.length) {\n\t\tinst.push( old[0] );\n\t}\n\n\tinst.selector = old.selector;\n\n\t// Limit to a single row / column / cell\n\tif (inst.length && inst[0].length > 1) {\n\t\tinst[0].splice(1);\n\t}\n\n\treturn inst;\n};\n\n\nvar _selector_row_indexes = function ( settings, opts )\n{\n\tvar\n\t\ti, ien, tmp, a=[],\n\t\tdisplayFiltered = settings.aiDisplay,\n\t\tdisplayMaster = settings.aiDisplayMaster;\n\n\tvar\n\t\tsearch = opts.search,  // none, applied, removed\n\t\torder  = opts.order,   // applied, current, index (original - compatibility with 1.9)\n\t\tpage   = opts.page;    // all, current\n\n\tif ( _fnDataSource( settings ) == 'ssp' ) {\n\t\t// In server-side processing mode, most options are irrelevant since\n\t\t// rows not shown don't exist and the index order is the applied order\n\t\t// Removed is a special case - for consistency just return an empty\n\t\t// array\n\t\treturn search === 'removed' ?\n\t\t\t[] :\n\t\t\t_range( 0, displayMaster.length );\n\t}\n\n\tif ( page == 'current' ) {\n\t\t// Current page implies that order=current and filter=applied, since it is\n\t\t// fairly senseless otherwise, regardless of what order and search actually\n\t\t// are\n\t\tfor ( i=settings._iDisplayStart, ien=settings.fnDisplayEnd() ; i<ien ; i++ ) {\n\t\t\ta.push( displayFiltered[i] );\n\t\t}\n\t}\n\telse if ( order == 'current' || order == 'applied' ) {\n\t\tif ( search == 'none') {\n\t\t\ta = displayMaster.slice();\n\t\t}\n\t\telse if ( search == 'applied' ) {\n\t\t\ta = displayFiltered.slice();\n\t\t}\n\t\telse if ( search == 'removed' ) {\n\t\t\t// O(n+m) solution by creating a hash map\n\t\t\tvar displayFilteredMap = {};\n\n\t\t\tfor ( i=0, ien=displayFiltered.length ; i<ien ; i++ ) {\n\t\t\t\tdisplayFilteredMap[displayFiltered[i]] = null;\n\t\t\t}\n\n\t\t\tdisplayMaster.forEach(function (item) {\n\t\t\t\tif (! Object.prototype.hasOwnProperty.call(displayFilteredMap, item)) {\n\t\t\t\t\ta.push(item);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t}\n\telse if ( order == 'index' || order == 'original' ) {\n\t\tfor ( i=0, ien=settings.aoData.length ; i<ien ; i++ ) {\n\t\t\tif (! settings.aoData[i]) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif ( search == 'none' ) {\n\t\t\t\ta.push( i );\n\t\t\t}\n\t\t\telse { // applied | removed\n\t\t\t\ttmp = displayFiltered.indexOf(i);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( i );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse if ( typeof order === 'number' ) {\n\t\t// Order the rows by the given column\n\t\tvar ordered = _fnSort(settings, order, 'asc');\n\n\t\tif (search === 'none') {\n\t\t\ta = ordered;\n\t\t}\n\t\telse { // applied | removed\n\t\t\tfor (i=0; i<ordered.length; i++) {\n\t\t\t\ttmp = displayFiltered.indexOf(ordered[i]);\n\n\t\t\t\tif ((tmp === -1 && search == 'removed') ||\n\t\t\t\t\t(tmp >= 0   && search == 'applied') )\n\t\t\t\t{\n\t\t\t\t\ta.push( ordered[i] );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn a;\n};\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Rows\n *\n * {}          - no selector - use all available rows\n * {integer}   - row aoData index\n * {node}      - TR node\n * {string}    - jQuery selector to apply to the TR elements\n * {array}     - jQuery array of nodes, or simply an array of TR nodes\n *\n */\nvar __row_selector = function ( settings, selector, opts )\n{\n\tvar rows;\n\tvar run = function ( sel ) {\n\t\tvar selInt = _intVal( sel );\n\t\tvar aoData = settings.aoData;\n\n\t\t// Short cut - selector is a number and no options provided (default is\n\t\t// all records, so no need to check if the index is in there, since it\n\t\t// must be - dev error if the index doesn't exist).\n\t\tif ( selInt !== null && ! opts ) {\n\t\t\treturn [ selInt ];\n\t\t}\n\n\t\tif ( ! rows ) {\n\t\t\trows = _selector_row_indexes( settings, opts );\n\t\t}\n\n\t\tif ( selInt !== null && rows.indexOf(selInt) !== -1 ) {\n\t\t\t// Selector - integer\n\t\t\treturn [ selInt ];\n\t\t}\n\t\telse if ( sel === null || sel === undefined || sel === '' ) {\n\t\t\t// Selector - none\n\t\t\treturn rows;\n\t\t}\n\n\t\t// Selector - function\n\t\tif ( typeof sel === 'function' ) {\n\t\t\treturn rows.map( function (idx) {\n\t\t\t\tvar row = aoData[ idx ];\n\t\t\t\treturn sel( idx, row._aData, row.nTr ) ? idx : null;\n\t\t\t} );\n\t\t}\n\n\t\t// Selector - node\n\t\tif ( sel.nodeName ) {\n\t\t\tvar rowIdx = sel._DT_RowIndex;  // Property added by DT for fast lookup\n\t\t\tvar cellIdx = sel._DT_CellIndex;\n\n\t\t\tif ( rowIdx !== undefined ) {\n\t\t\t\t// Make sure that the row is actually still present in the table\n\t\t\t\treturn aoData[ rowIdx ] && aoData[ rowIdx ].nTr === sel ?\n\t\t\t\t\t[ rowIdx ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse if ( cellIdx ) {\n\t\t\t\treturn aoData[ cellIdx.row ] && aoData[ cellIdx.row ].nTr === sel.parentNode ?\n\t\t\t\t\t[ cellIdx.row ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tvar host = $(sel).closest('*[data-dt-row]');\n\t\t\t\treturn host.length ?\n\t\t\t\t\t[ host.data('dt-row') ] :\n\t\t\t\t\t[];\n\t\t\t}\n\t\t}\n\n\t\t// ID selector. Want to always be able to select rows by id, regardless\n\t\t// of if the tr element has been created or not, so can't rely upon\n\t\t// jQuery here - hence a custom implementation. This does not match\n\t\t// Sizzle's fast selector or HTML4 - in HTML5 the ID can be anything,\n\t\t// but to select it using a CSS selector engine (like Sizzle or\n\t\t// querySelect) it would need to need to be escaped for some characters.\n\t\t// DataTables simplifies this for row selectors since you can select\n\t\t// only a row. A # indicates an id any anything that follows is the id -\n\t\t// unescaped.\n\t\tif ( typeof sel === 'string' && sel.charAt(0) === '#' ) {\n\t\t\t// get row index from id\n\t\t\tvar rowObj = settings.aIds[ sel.replace( /^#/, '' ) ];\n\t\t\tif ( rowObj !== undefined ) {\n\t\t\t\treturn [ rowObj.idx ];\n\t\t\t}\n\n\t\t\t// need to fall through to jQuery in case there is DOM id that\n\t\t\t// matches\n\t\t}\n\t\t\n\t\t// Get nodes in the order from the `rows` array with null values removed\n\t\tvar nodes = _removeEmpty(\n\t\t\t_pluck_order( settings.aoData, rows, 'nTr' )\n\t\t);\n\n\t\t// Selector - jQuery selector string, array of nodes or jQuery object/\n\t\t// As jQuery's .filter() allows jQuery objects to be passed in filter,\n\t\t// it also allows arrays, so this will cope with all three options\n\t\treturn $(nodes)\n\t\t\t.filter( sel )\n\t\t\t.map( function () {\n\t\t\t\treturn this._DT_RowIndex;\n\t\t\t} )\n\t\t\t.toArray();\n\t};\n\n\tvar matched = _selector_run( 'row', selector, run, settings, opts );\n\n\tif (opts.order === 'current' || opts.order === 'applied') {\n\t\t_fnSortDisplay(settings, matched);\n\t}\n\n\treturn matched;\n};\n\n\n_api_register( 'rows()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __row_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in __row_selector?\n\tinst.selector.rows = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_register( 'rows().nodes()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn settings.aoData[ row ].nTr || undefined;\n\t}, 1 );\n} );\n\n_api_register( 'rows().data()', function () {\n\treturn this.iterator( true, 'rows', function ( settings, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, '_aData' );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().cache()', 'row().cache()', function ( type ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\tvar r = settings.aoData[ row ];\n\t\treturn type === 'search' ? r._aFilterData : r._aSortData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().invalidate()', 'row().invalidate()', function ( src ) {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\t_fnInvalidate( settings, row, src );\n\t} );\n} );\n\n_api_registerPlural( 'rows().indexes()', 'row().index()', function () {\n\treturn this.iterator( 'row', function ( settings, row ) {\n\t\treturn row;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'rows().ids()', 'row().id()', function ( hash ) {\n\tvar a = [];\n\tvar context = this.context;\n\n\t// `iterator` will drop undefined values, but in this case we want them\n\tfor ( var i=0, ien=context.length ; i<ien ; i++ ) {\n\t\tfor ( var j=0, jen=this[i].length ; j<jen ; j++ ) {\n\t\t\tvar id = context[i].rowIdFn( context[i].aoData[ this[i][j] ]._aData );\n\t\t\ta.push( (hash === true ? '#' : '' )+ id );\n\t\t}\n\t}\n\n\treturn new _Api( context, a );\n} );\n\n_api_registerPlural( 'rows().remove()', 'row().remove()', function () {\n\tthis.iterator( 'row', function ( settings, row ) {\n\t\tvar data = settings.aoData;\n\t\tvar rowData = data[ row ];\n\n\t\t// Delete from the display arrays\n\t\tvar idx = settings.aiDisplayMaster.indexOf(row);\n\t\tif (idx !== -1) {\n\t\t\tsettings.aiDisplayMaster.splice(idx, 1);\n\t\t}\n\n\t\t// For server-side processing tables - subtract the deleted row from the count\n\t\tif ( settings._iRecordsDisplay > 0 ) {\n\t\t\tsettings._iRecordsDisplay--;\n\t\t}\n\n\t\t// Check for an 'overflow' they case for displaying the table\n\t\t_fnLengthOverflow( settings );\n\n\t\t// Remove the row's ID reference if there is one\n\t\tvar id = settings.rowIdFn( rowData._aData );\n\t\tif ( id !== undefined ) {\n\t\t\tdelete settings.aIds[ id ];\n\t\t}\n\n\t\tdata[row] = null;\n\t} );\n\n\treturn this;\n} );\n\n\n_api_register( 'rows.add()', function ( rows ) {\n\tvar newRows = this.iterator( 'table', function ( settings ) {\n\t\t\tvar row, i, ien;\n\t\t\tvar out = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\t\t\tout.push( _fnAddTr( settings, row )[0] );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tout.push( _fnAddData( settings, row ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn out;\n\t\t}, 1 );\n\n\t// Return an Api.rows() extended instance, so rows().nodes() etc can be used\n\tvar modRows = this.rows( -1 );\n\tmodRows.pop();\n\tmodRows.push.apply(modRows, newRows);\n\n\treturn modRows;\n} );\n\n\n\n\n\n/**\n *\n */\n_api_register( 'row()', function ( selector, opts ) {\n\treturn _selector_first( this.rows( selector, opts ) );\n} );\n\n\n_api_register( 'row().data()', function ( data ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && this.length && this[0].length ?\n\t\t\tctx[0].aoData[ this[0] ]._aData :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\tvar row = ctx[0].aoData[ this[0] ];\n\trow._aData = data;\n\n\t// If the DOM has an id, and the data source is an array\n\tif ( Array.isArray( data ) && row.nTr && row.nTr.id ) {\n\t\t_fnSetObjectDataFn( ctx[0].rowId )( data, row.nTr.id );\n\t}\n\n\t// Automatically invalidate\n\t_fnInvalidate( ctx[0], this[0], 'data' );\n\n\treturn this;\n} );\n\n\n_api_register( 'row().node()', function () {\n\tvar ctx = this.context;\n\n\tif (ctx.length && this.length && this[0].length) {\n\t\tvar row = ctx[0].aoData[ this[0] ];\n\n\t\tif (row && row.nTr) {\n\t\t\treturn row.nTr;\n\t\t}\n\t}\n\n\treturn null;\n} );\n\n\n_api_register( 'row.add()', function ( row ) {\n\t// Allow a jQuery object to be passed in - only a single row is added from\n\t// it though - the first element in the set\n\tif ( row instanceof $ && row.length ) {\n\t\trow = row[0];\n\t}\n\n\tvar rows = this.iterator( 'table', function ( settings ) {\n\t\tif ( row.nodeName && row.nodeName.toUpperCase() === 'TR' ) {\n\t\t\treturn _fnAddTr( settings, row )[0];\n\t\t}\n\t\treturn _fnAddData( settings, row );\n\t} );\n\n\t// Return an Api.rows() extended instance, with the newly added row selected\n\treturn this.row( rows[0] );\n} );\n\n\n$(document).on('plugin-init.dt', function (e, context) {\n\tvar api = new _Api( context );\n\n\tapi.on( 'stateSaveParams.DT', function ( e, settings, d ) {\n\t\t// This could be more compact with the API, but it is a lot faster as a simple\n\t\t// internal loop\n\t\tvar idFn = settings.rowIdFn;\n\t\tvar rows = settings.aiDisplayMaster;\n\t\tvar ids = [];\n\n\t\tfor (var i=0 ; i<rows.length ; i++) {\n\t\t\tvar rowIdx = rows[i];\n\t\t\tvar data = settings.aoData[rowIdx];\n\n\t\t\tif (data._detailsShow) {\n\t\t\t\tids.push( '#' + idFn(data._aData) );\n\t\t\t}\n\t\t}\n\n\t\td.childRows = ids;\n\t});\n\n\t// For future state loads (e.g. with StateRestore)\n\tapi.on( 'stateLoaded.DT', function (e, settings, state) {\n\t\t__details_state_load( api, state );\n\t});\n\n\t// And the initial load state\n\t__details_state_load( api, api.state.loaded() );\n});\n\nvar __details_state_load = function (api, state)\n{\n\tif ( state && state.childRows ) {\n\t\tapi\n\t\t\t.rows( state.childRows.map(function (id) {\n\t\t\t\t// Escape any `:` characters from the row id. Accounts for\n\t\t\t\t// already escaped characters.\n\t\t\t\treturn id.replace(/([^:\\\\]*(?:\\\\.[^:\\\\]*)*):/g, \"$1\\\\:\");\n\t\t\t}) )\n\t\t\t.every( function () {\n\t\t\t\t_fnCallbackFire( api.settings()[0], null, 'requestChild', [ this ] )\n\t\t\t});\n\t}\n}\n\nvar __details_add = function ( ctx, row, data, klass )\n{\n\t// Convert to array of TR elements\n\tvar rows = [];\n\tvar addRow = function ( r, k ) {\n\t\t// Recursion to allow for arrays of jQuery objects\n\t\tif ( Array.isArray( r ) || r instanceof $ ) {\n\t\t\tfor ( var i=0, ien=r.length ; i<ien ; i++ ) {\n\t\t\t\taddRow( r[i], k );\n\t\t\t}\n\t\t\treturn;\n\t\t}\n\n\t\t// If we get a TR element, then just add it directly - up to the dev\n\t\t// to add the correct number of columns etc\n\t\tif ( r.nodeName && r.nodeName.toLowerCase() === 'tr' ) {\n\t\t\tr.setAttribute( 'data-dt-row', row.idx );\n\t\t\trows.push( r );\n\t\t}\n\t\telse {\n\t\t\t// Otherwise create a row with a wrapper\n\t\t\tvar created = $('<tr><td></td></tr>')\n\t\t\t\t.attr( 'data-dt-row', row.idx )\n\t\t\t\t.addClass( k );\n\t\t\t\n\t\t\t$('td', created)\n\t\t\t\t.addClass( k )\n\t\t\t\t.html( r )[0].colSpan = _fnVisbleColumns( ctx );\n\n\t\t\trows.push( created[0] );\n\t\t}\n\t};\n\n\taddRow( data, klass );\n\n\tif ( row._details ) {\n\t\trow._details.detach();\n\t}\n\n\trow._details = $(rows);\n\n\t// If the children were already shown, that state should be retained\n\tif ( row._detailsShow ) {\n\t\trow._details.insertAfter( row.nTr );\n\t}\n};\n\n\n// Make state saving of child row details async to allow them to be batch processed\nvar __details_state = DataTable.util.throttle(\n\tfunction (ctx) {\n\t\t_fnSaveState( ctx[0] )\n\t},\n\t500\n);\n\n\nvar __details_remove = function ( api, idx )\n{\n\tvar ctx = api.context;\n\n\tif ( ctx.length ) {\n\t\tvar row = ctx[0].aoData[ idx !== undefined ? idx : api[0] ];\n\n\t\tif ( row && row._details ) {\n\t\t\trow._details.remove();\n\n\t\t\trow._detailsShow = undefined;\n\t\t\trow._details = undefined;\n\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_display = function ( api, show ) {\n\tvar ctx = api.context;\n\n\tif ( ctx.length && api.length ) {\n\t\tvar row = ctx[0].aoData[ api[0] ];\n\n\t\tif ( row._details ) {\n\t\t\trow._detailsShow = show;\n\n\t\t\tif ( show ) {\n\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t$( row.nTr ).addClass( 'dt-hasChild' );\n\t\t\t}\n\t\t\telse {\n\t\t\t\trow._details.detach();\n\t\t\t\t$( row.nTr ).removeClass( 'dt-hasChild' );\n\t\t\t}\n\n\t\t\t_fnCallbackFire( ctx[0], null, 'childRow', [ show, api.row( api[0] ) ] )\n\n\t\t\t__details_events( ctx[0] );\n\t\t\t__details_state( ctx );\n\t\t}\n\t}\n};\n\n\nvar __details_events = function ( settings )\n{\n\tvar api = new _Api( settings );\n\tvar namespace = '.dt.DT_details';\n\tvar drawEvent = 'draw'+namespace;\n\tvar colvisEvent = 'column-sizing'+namespace;\n\tvar destroyEvent = 'destroy'+namespace;\n\tvar data = settings.aoData;\n\n\tapi.off( drawEvent +' '+ colvisEvent +' '+ destroyEvent );\n\n\tif ( _pluck( data, '_details' ).length > 0 ) {\n\t\t// On each draw, insert the required elements into the document\n\t\tapi.on( drawEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tapi.rows( {page:'current'} ).eq(0).each( function (idx) {\n\t\t\t\t// Internal data grab\n\t\t\t\tvar row = data[ idx ];\n\n\t\t\t\tif ( row._detailsShow ) {\n\t\t\t\t\trow._details.insertAfter( row.nTr );\n\t\t\t\t}\n\t\t\t} );\n\t\t} );\n\n\t\t// Column visibility change - update the colspan\n\t\tapi.on( colvisEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Update the colspan for the details rows (note, only if it already has\n\t\t\t// a colspan)\n\t\t\tvar row, visible = _fnVisbleColumns( ctx );\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\trow = data[i];\n\n\t\t\t\tif ( row && row._details ) {\n\t\t\t\t\trow._details.each(function () {\n\t\t\t\t\t\tvar el = $(this).children('td');\n\n\t\t\t\t\t\tif (el.length == 1) {\n\t\t\t\t\t\t\tel.attr('colspan', visible);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t\t// Table destroyed - nuke any child rows\n\t\tapi.on( destroyEvent, function ( e, ctx ) {\n\t\t\tif ( settings !== ctx ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tfor ( var i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\t\tif ( data[i] && data[i]._details ) {\n\t\t\t\t\t__details_remove( api, i );\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n};\n\n// Strings for the method names to help minification\nvar _emp = '';\nvar _child_obj = _emp+'row().child';\nvar _child_mth = _child_obj+'()';\n\n// data can be:\n//  tr\n//  string\n//  jQuery or array of any of the above\n_api_register( _child_mth, function ( data, klass ) {\n\tvar ctx = this.context;\n\n\tif ( data === undefined ) {\n\t\t// get\n\t\treturn ctx.length && this.length && ctx[0].aoData[ this[0] ]\n\t\t\t? ctx[0].aoData[ this[0] ]._details\n\t\t\t: undefined;\n\t}\n\telse if ( data === true ) {\n\t\t// show\n\t\tthis.child.show();\n\t}\n\telse if ( data === false ) {\n\t\t// remove\n\t\t__details_remove( this );\n\t}\n\telse if ( ctx.length && this.length ) {\n\t\t// set\n\t\t__details_add( ctx[0], ctx[0].aoData[ this[0] ], data, klass );\n\t}\n\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.show()',\n\t_child_mth+'.show()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, true );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.hide()',\n\t_child_mth+'.hide()' // only when `child()` was called with parameters (without\n], function () {         // it returns an object and this method is not executed)\n\t__details_display( this, false );\n\treturn this;\n} );\n\n\n_api_register( [\n\t_child_obj+'.remove()',\n\t_child_mth+'.remove()' // only when `child()` was called with parameters (without\n], function () {           // it returns an object and this method is not executed)\n\t__details_remove( this );\n\treturn this;\n} );\n\n\n_api_register( _child_obj+'.isShown()', function () {\n\tvar ctx = this.context;\n\n\tif ( ctx.length && this.length && ctx[0].aoData[ this[0] ] ) {\n\t\t// _detailsShown as false or undefined will fall through to return false\n\t\treturn ctx[0].aoData[ this[0] ]._detailsShow || false;\n\t}\n\treturn false;\n} );\n\n\n\n/* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *\n * Columns\n *\n * {integer}           - column index (>=0 count from left, <0 count from right)\n * \"{integer}:visIdx\"  - visible column index (i.e. translate to column index)  (>=0 count from left, <0 count from right)\n * \"{integer}:visible\" - alias for {integer}:visIdx  (>=0 count from left, <0 count from right)\n * \"{string}:name\"     - column name\n * \"{string}\"          - jQuery selector on column header nodes\n *\n */\n\n// can be an array of these items, comma separated list, or an array of comma\n// separated lists\n\nvar __re_column_selector = /^([^:]+)?:(name|title|visIdx|visible)$/;\n\n\n// r1 and r2 are redundant - but it means that the parameters match for the\n// iterator callback in columns().data()\nvar __columnData = function ( settings, column, r1, r2, rows, type ) {\n\tvar a = [];\n\tfor ( var row=0, ien=rows.length ; row<ien ; row++ ) {\n\t\ta.push( _fnGetCellData( settings, rows[row], column, type ) );\n\t}\n\treturn a;\n};\n\n\nvar __column_header = function ( settings, column, row ) {\n\tvar header = settings.aoHeader;\n\tvar target = row !== undefined\n\t\t? row\n\t\t: settings.bSortCellsTop // legacy support\n\t\t\t? 0\n\t\t\t: header.length - 1;\n\n\treturn header[target][column].cell;\n};\n\nvar __column_selector = function ( settings, selector, opts )\n{\n\tvar\n\t\tcolumns = settings.aoColumns,\n\t\tnames = _pluck( columns, 'sName' ),\n\t\ttitles = _pluck( columns, 'sTitle' ),\n\t\tcells = DataTable.util.get('[].[].cell')(settings.aoHeader),\n\t\tnodes = _unique( _flatten([], cells) );\n\t\n\tvar run = function ( s ) {\n\t\tvar selInt = _intVal( s );\n\n\t\t// Selector - all\n\t\tif ( s === '' ) {\n\t\t\treturn _range( columns.length );\n\t\t}\n\n\t\t// Selector - index\n\t\tif ( selInt !== null ) {\n\t\t\treturn [ selInt >= 0 ?\n\t\t\t\tselInt : // Count from left\n\t\t\t\tcolumns.length + selInt // Count from right (+ because its a negative value)\n\t\t\t];\n\t\t}\n\n\t\t// Selector = function\n\t\tif ( typeof s === 'function' ) {\n\t\t\tvar rows = _selector_row_indexes( settings, opts );\n\n\t\t\treturn columns.map(function (col, idx) {\n\t\t\t\treturn s(\n\t\t\t\t\t\tidx,\n\t\t\t\t\t\t__columnData( settings, idx, 0, 0, rows ),\n\t\t\t\t\t\t__column_header( settings, idx )\n\t\t\t\t\t) ? idx : null;\n\t\t\t});\n\t\t}\n\n\t\t// jQuery or string selector\n\t\tvar match = typeof s === 'string' ?\n\t\t\ts.match( __re_column_selector ) :\n\t\t\t'';\n\n\t\tif ( match ) {\n\t\t\tswitch( match[2] ) {\n\t\t\t\tcase 'visIdx':\n\t\t\t\tcase 'visible':\n\t\t\t\t\t// Selector is a column index\n\t\t\t\t\tif (match[1] && match[1].match(/^\\d+$/)) {\n\t\t\t\t\t\tvar idx = parseInt( match[1], 10 );\n\n\t\t\t\t\t\t// Visible index given, convert to column index\n\t\t\t\t\t\tif ( idx < 0 ) {\n\t\t\t\t\t\t\t// Counting from the right\n\t\t\t\t\t\t\tvar visColumns = columns.map( function (col,i) {\n\t\t\t\t\t\t\t\treturn col.bVisible ? i : null;\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t\treturn [ visColumns[ visColumns.length + idx ] ];\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// Counting from the left\n\t\t\t\t\t\treturn [ _fnVisibleToColumnIndex( settings, idx ) ];\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\treturn columns.map( function (col, idx) {\n\t\t\t\t\t\t// Not visible, can't match\n\t\t\t\t\t\tif (! col.bVisible) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Selector\n\t\t\t\t\t\tif (match[1]) {\n\t\t\t\t\t\t\treturn $(nodes[idx]).filter(match[1]).length > 0 ? idx : null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// `:visible` on its own\n\t\t\t\t\t\treturn idx;\n\t\t\t\t\t} );\n\n\t\t\t\tcase 'name':\n\t\t\t\t\t// match by name. `names` is column index complete and in order\n\t\t\t\t\treturn names.map( function (name, i) {\n\t\t\t\t\t\treturn name === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tcase 'title':\n\t\t\t\t\t// match by column title\n\t\t\t\t\treturn titles.map( function (title, i) {\n\t\t\t\t\t\treturn title === match[1] ? i : null;\n\t\t\t\t\t} );\n\n\t\t\t\tdefault:\n\t\t\t\t\treturn [];\n\t\t\t}\n\t\t}\n\n\t\t// Cell in the table body\n\t\tif ( s.nodeName && s._DT_CellIndex ) {\n\t\t\treturn [ s._DT_CellIndex.column ];\n\t\t}\n\n\t\t// jQuery selector on the TH elements for the columns\n\t\tvar jqResult = $( nodes )\n\t\t\t.filter( s )\n\t\t\t.map( function () {\n\t\t\t\treturn _fnColumnsFromHeader( this ); // `nodes` is column index complete and in order\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise a node which might have a `dt-column` data attribute, or be\n\t\t// a child or such an element\n\t\tvar host = $(s).closest('*[data-dt-column]');\n\t\treturn host.length ?\n\t\t\t[ host.data('dt-column') ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'column', selector, run, settings, opts );\n};\n\n\nvar __setColumnVis = function ( settings, column, vis ) {\n\tvar\n\t\tcols = settings.aoColumns,\n\t\tcol  = cols[ column ],\n\t\tdata = settings.aoData,\n\t\tcells, i, ien, tr;\n\n\t// Get\n\tif ( vis === undefined ) {\n\t\treturn col.bVisible;\n\t}\n\n\t// Set\n\t// No change\n\tif ( col.bVisible === vis ) {\n\t\treturn false;\n\t}\n\n\tif ( vis ) {\n\t\t// Insert column\n\t\t// Need to decide if we should use appendChild or insertBefore\n\t\tvar insertBefore = _pluck(cols, 'bVisible').indexOf(true, column+1);\n\n\t\tfor ( i=0, ien=data.length ; i<ien ; i++ ) {\n\t\t\tif (data[i]) {\n\t\t\t\ttr = data[i].nTr;\n\t\t\t\tcells = data[i].anCells;\n\n\t\t\t\tif ( tr ) {\n\t\t\t\t\t// insertBefore can act like appendChild if 2nd arg is null\n\t\t\t\t\ttr.insertBefore( cells[ column ], cells[ insertBefore ] || null );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\telse {\n\t\t// Remove column\n\t\t$( _pluck( settings.aoData, 'anCells', column ) ).detach();\n\t}\n\n\t// Common actions\n\tcol.bVisible = vis;\n\n\t_colGroup(settings);\n\t\n\treturn true;\n};\n\n\n_api_register( 'columns()', function ( selector, opts ) {\n\t// argument shifting\n\tif ( selector === undefined ) {\n\t\tselector = '';\n\t}\n\telse if ( $.isPlainObject( selector ) ) {\n\t\topts = selector;\n\t\tselector = '';\n\t}\n\n\topts = _selector_opts( opts );\n\n\tvar inst = this.iterator( 'table', function ( settings ) {\n\t\treturn __column_selector( settings, selector, opts );\n\t}, 1 );\n\n\t// Want argument shifting here and in _row_selector?\n\tinst.selector.cols = selector;\n\tinst.selector.opts = opts;\n\n\treturn inst;\n} );\n\n_api_registerPlural( 'columns().header()', 'column().header()', function ( row ) {\n\treturn this.iterator( 'column', function (settings, column) {\n\t\treturn __column_header(settings, column, row);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().footer()', 'column().footer()', function ( row ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar footer = settings.aoFooter;\n\n\t\tif (! footer.length) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn settings.aoFooter[row !== undefined ? row : 0][column].cell;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().data()', 'column().data()', function () {\n\treturn this.iterator( 'column-rows', __columnData, 1 );\n} );\n\n_api_registerPlural( 'columns().render()', 'column().render()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn __columnData( settings, column, i, j, rows, type );\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().dataSrc()', 'column().dataSrc()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column].mData;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().cache()', 'column().cache()', function ( type ) {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows,\n\t\t\ttype === 'search' ? '_aFilterData' : '_aSortData', column\n\t\t);\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().init()', 'column().init()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn settings.aoColumns[column];\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().nodes()', 'column().nodes()', function () {\n\treturn this.iterator( 'column-rows', function ( settings, column, i, j, rows ) {\n\t\treturn _pluck_order( settings.aoData, rows, 'anCells', column ) ;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().titles()', 'column().title()', function (title, row) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t// Argument shifting\n\t\tif (typeof title === 'number') {\n\t\t\trow = title;\n\t\t\ttitle = undefined;\n\t\t}\n\n\t\tvar span = $('span.dt-column-title', this.column(column).header(row));\n\n\t\tif (title !== undefined) {\n\t\t\tspan.html(title);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn span.html();\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().types()', 'column().type()', function () {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar type = settings.aoColumns[column].sType;\n\n\t\t// If the type was invalidated, then resolve it. This actually does\n\t\t// all columns at the moment. Would only happen once if getting all\n\t\t// column's data types.\n\t\tif (! type) {\n\t\t\t_fnColumnTypes(settings);\n\t\t}\n\n\t\treturn type;\n\t}, 1 );\n} );\n\n_api_registerPlural( 'columns().visible()', 'column().visible()', function ( vis, calc ) {\n\tvar that = this;\n\tvar changed = [];\n\tvar ret = this.iterator( 'column', function ( settings, column ) {\n\t\tif ( vis === undefined ) {\n\t\t\treturn settings.aoColumns[ column ].bVisible;\n\t\t} // else\n\t\t\n\t\tif (__setColumnVis( settings, column, vis )) {\n\t\t\tchanged.push(column);\n\t\t}\n\t} );\n\n\t// Group the column visibility changes\n\tif ( vis !== undefined ) {\n\t\tthis.iterator( 'table', function ( settings ) {\n\t\t\t// Redraw the header after changes\n\t\t\t_fnDrawHead( settings, settings.aoHeader );\n\t\t\t_fnDrawHead( settings, settings.aoFooter );\n\t\n\t\t\t// Update colspan for no records display. Child rows and extensions will use their own\n\t\t\t// listeners to do this - only need to update the empty table item here\n\t\t\tif ( ! settings.aiDisplay.length ) {\n\t\t\t\t$(settings.nTBody).find('td[colspan]').attr('colspan', _fnVisbleColumns(settings));\n\t\t\t}\n\t\n\t\t\t_fnSaveState( settings );\n\n\t\t\t// Second loop once the first is done for events\n\t\t\tthat.iterator( 'column', function ( settings, column ) {\n\t\t\t\tif (changed.includes(column)) {\n\t\t\t\t\t_fnCallbackFire( settings, null, 'column-visibility', [settings, column, vis, calc] );\n\t\t\t\t}\n\t\t\t} );\n\n\t\t\tif ( changed.length && (calc === undefined || calc) ) {\n\t\t\t\tthat.columns.adjust();\n\t\t\t}\n\t\t});\n\t}\n\n\treturn ret;\n} );\n\n_api_registerPlural( 'columns().widths()', 'column().width()', function () {\n\t// Injects a fake row into the table for just a moment so the widths can\n\t// be read, regardless of colspan in the header and rows being present in\n\t// the body\n\tvar columns = this.columns(':visible').count();\n\tvar row = $('<tr>').html('<td>' + Array(columns).join('</td><td>') + '</td>');\n\n\t$(this.table().body()).append(row);\n\n\tvar widths = row.children().map(function () {\n\t\treturn $(this).outerWidth();\n\t});\n\n\trow.remove();\n\t\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\tvar visIdx = _fnColumnIndexToVisible( settings, column );\n\n\t\treturn visIdx !== null ? widths[visIdx] : 0;\n\t}, 1);\n} );\n\n_api_registerPlural( 'columns().indexes()', 'column().index()', function ( type ) {\n\treturn this.iterator( 'column', function ( settings, column ) {\n\t\treturn type === 'visible' ?\n\t\t\t_fnColumnIndexToVisible( settings, column ) :\n\t\t\tcolumn;\n\t}, 1 );\n} );\n\n_api_register( 'columns.adjust()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnAdjustColumnSizing( settings );\n\t}, 1 );\n} );\n\n_api_register( 'column.index()', function ( type, idx ) {\n\tif ( this.context.length !== 0 ) {\n\t\tvar ctx = this.context[0];\n\n\t\tif ( type === 'fromVisible' || type === 'toData' ) {\n\t\t\treturn _fnVisibleToColumnIndex( ctx, idx );\n\t\t}\n\t\telse if ( type === 'fromData' || type === 'toVisible' ) {\n\t\t\treturn _fnColumnIndexToVisible( ctx, idx );\n\t\t}\n\t}\n} );\n\n_api_register( 'column()', function ( selector, opts ) {\n\treturn _selector_first( this.columns( selector, opts ) );\n} );\n\nvar __cell_selector = function ( settings, selector, opts )\n{\n\tvar data = settings.aoData;\n\tvar rows = _selector_row_indexes( settings, opts );\n\tvar cells = _removeEmpty( _pluck_order( data, rows, 'anCells' ) );\n\tvar allCells = $(_flatten( [], cells ));\n\tvar row;\n\tvar columns = settings.aoColumns.length;\n\tvar a, i, ien, j, o, host;\n\n\tvar run = function ( s ) {\n\t\tvar fnSelector = typeof s === 'function';\n\n\t\tif ( s === null || s === undefined || fnSelector ) {\n\t\t\t// All cells and function selectors\n\t\t\ta = [];\n\n\t\t\tfor ( i=0, ien=rows.length ; i<ien ; i++ ) {\n\t\t\t\trow = rows[i];\n\n\t\t\t\tfor ( j=0 ; j<columns ; j++ ) {\n\t\t\t\t\to = {\n\t\t\t\t\t\trow: row,\n\t\t\t\t\t\tcolumn: j\n\t\t\t\t\t};\n\n\t\t\t\t\tif ( fnSelector ) {\n\t\t\t\t\t\t// Selector - function\n\t\t\t\t\t\thost = data[ row ];\n\n\t\t\t\t\t\tif ( s( o, _fnGetCellData(settings, row, j), host.anCells ? host.anCells[j] : null ) ) {\n\t\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\t// Selector - all\n\t\t\t\t\t\ta.push( o );\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn a;\n\t\t}\n\t\t\n\t\t// Selector - index\n\t\tif ( $.isPlainObject( s ) ) {\n\t\t\t// Valid cell index and its in the array of selectable rows\n\t\t\treturn s.column !== undefined && s.row !== undefined && rows.indexOf(s.row) !== -1 ?\n\t\t\t\t[s] :\n\t\t\t\t[];\n\t\t}\n\n\t\t// Selector - jQuery filtered cells\n\t\tvar jqResult = allCells\n\t\t\t.filter( s )\n\t\t\t.map( function (i, el) {\n\t\t\t\treturn { // use a new object, in case someone changes the values\n\t\t\t\t\trow:    el._DT_CellIndex.row,\n\t\t\t\t\tcolumn: el._DT_CellIndex.column\n\t\t\t\t};\n\t\t\t} )\n\t\t\t.toArray();\n\n\t\tif ( jqResult.length || ! s.nodeName ) {\n\t\t\treturn jqResult;\n\t\t}\n\n\t\t// Otherwise the selector is a node, and there is one last option - the\n\t\t// element might be a child of an element which has dt-row and dt-column\n\t\t// data attributes\n\t\thost = $(s).closest('*[data-dt-row]');\n\t\treturn host.length ?\n\t\t\t[ {\n\t\t\t\trow: host.data('dt-row'),\n\t\t\t\tcolumn: host.data('dt-column')\n\t\t\t} ] :\n\t\t\t[];\n\t};\n\n\treturn _selector_run( 'cell', selector, run, settings, opts );\n};\n\n\n\n\n_api_register( 'cells()', function ( rowSelector, columnSelector, opts ) {\n\t// Argument shifting\n\tif ( $.isPlainObject( rowSelector ) ) {\n\t\t// Indexes\n\t\tif ( rowSelector.row === undefined ) {\n\t\t\t// Selector options in first parameter\n\t\t\topts = rowSelector;\n\t\t\trowSelector = null;\n\t\t}\n\t\telse {\n\t\t\t// Cell index objects in first parameter\n\t\t\topts = columnSelector;\n\t\t\tcolumnSelector = null;\n\t\t}\n\t}\n\tif ( $.isPlainObject( columnSelector ) ) {\n\t\topts = columnSelector;\n\t\tcolumnSelector = null;\n\t}\n\n\t// Cell selector\n\tif ( columnSelector === null || columnSelector === undefined ) {\n\t\treturn this.iterator( 'table', function ( settings ) {\n\t\t\treturn __cell_selector( settings, rowSelector, _selector_opts( opts ) );\n\t\t} );\n\t}\n\n\t// The default built in options need to apply to row and columns\n\tvar internalOpts = opts ? {\n\t\tpage: opts.page,\n\t\torder: opts.order,\n\t\tsearch: opts.search\n\t} : {};\n\n\t// Row + column selector\n\tvar columns = this.columns( columnSelector, internalOpts );\n\tvar rows = this.rows( rowSelector, internalOpts );\n\tvar i, ien, j, jen;\n\n\tvar cellsNoOpts = this.iterator( 'table', function ( settings, idx ) {\n\t\tvar a = [];\n\n\t\tfor ( i=0, ien=rows[idx].length ; i<ien ; i++ ) {\n\t\t\tfor ( j=0, jen=columns[idx].length ; j<jen ; j++ ) {\n\t\t\t\ta.push( {\n\t\t\t\t\trow:    rows[idx][i],\n\t\t\t\t\tcolumn: columns[idx][j]\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\treturn a;\n\t}, 1 );\n\n\t// There is currently only one extension which uses a cell selector extension\n\t// It is a _major_ performance drag to run this if it isn't needed, so this is\n\t// an extension specific check at the moment\n\tvar cells = opts && opts.selected ?\n\t\tthis.cells( cellsNoOpts, opts ) :\n\t\tcellsNoOpts;\n\n\t$.extend( cells.selector, {\n\t\tcols: columnSelector,\n\t\trows: rowSelector,\n\t\topts: opts\n\t} );\n\n\treturn cells;\n} );\n\n\n_api_registerPlural( 'cells().nodes()', 'cell().node()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\tvar data = settings.aoData[ row ];\n\n\t\treturn data && data.anCells ?\n\t\t\tdata.anCells[ column ] :\n\t\t\tundefined;\n\t}, 1 );\n} );\n\n\n_api_register( 'cells().data()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().cache()', 'cell().cache()', function ( type ) {\n\ttype = type === 'search' ? '_aFilterData' : '_aSortData';\n\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn settings.aoData[ row ][ type ][ column ];\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().render()', 'cell().render()', function ( type ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn _fnGetCellData( settings, row, column, type );\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().indexes()', 'cell().index()', function () {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\treturn {\n\t\t\trow: row,\n\t\t\tcolumn: column,\n\t\t\tcolumnVisible: _fnColumnIndexToVisible( settings, column )\n\t\t};\n\t}, 1 );\n} );\n\n\n_api_registerPlural( 'cells().invalidate()', 'cell().invalidate()', function ( src ) {\n\treturn this.iterator( 'cell', function ( settings, row, column ) {\n\t\t_fnInvalidate( settings, row, src, column );\n\t} );\n} );\n\n\n\n_api_register( 'cell()', function ( rowSelector, columnSelector, opts ) {\n\treturn _selector_first( this.cells( rowSelector, columnSelector, opts ) );\n} );\n\n\n_api_register( 'cell().data()', function ( data ) {\n\tvar ctx = this.context;\n\tvar cell = this[0];\n\n\tif ( data === undefined ) {\n\t\t// Get\n\t\treturn ctx.length && cell.length ?\n\t\t\t_fnGetCellData( ctx[0], cell[0].row, cell[0].column ) :\n\t\t\tundefined;\n\t}\n\n\t// Set\n\t_fnSetCellData( ctx[0], cell[0].row, cell[0].column, data );\n\t_fnInvalidate( ctx[0], cell[0].row, 'data', cell[0].column );\n\n\treturn this;\n} );\n\n\n\n/**\n * Get current ordering (sorting) that has been applied to the table.\n *\n * @returns {array} 2D array containing the sorting information for the first\n *   table in the current context. Each element in the parent array represents\n *   a column being sorted upon (i.e. multi-sorting with two columns would have\n *   2 inner arrays). The inner arrays may have 2 or 3 elements. The first is\n *   the column index that the sorting condition applies to, the second is the\n *   direction of the sort (`desc` or `asc`) and, optionally, the third is the\n *   index of the sorting order from the `column.sorting` initialisation array.\n *//**\n * Set the ordering for the table.\n *\n * @param {integer} order Column index to sort upon.\n * @param {string} direction Direction of the sort to be applied (`asc` or `desc`)\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 1D array of sorting information to be applied.\n * @param {array} [...] Optional additional sorting conditions\n * @returns {DataTables.Api} this\n *//**\n * Set the ordering for the table.\n *\n * @param {array} order 2D array of sorting information to be applied.\n * @returns {DataTables.Api} this\n */\n_api_register( 'order()', function ( order, dir ) {\n\tvar ctx = this.context;\n\tvar args = Array.prototype.slice.call( arguments );\n\n\tif ( order === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].aaSorting :\n\t\t\tundefined;\n\t}\n\n\t// set\n\tif ( typeof order === 'number' ) {\n\t\t// Simple column / direction passed in\n\t\torder = [ [ order, dir ] ];\n\t}\n\telse if ( args.length > 1 ) {\n\t\t// Arguments passed in (list of 1D arrays)\n\t\torder = args;\n\t}\n\t// otherwise a 2D array was passed in\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSorting = Array.isArray(order) ? order.slice() : order;\n\t} );\n} );\n\n\n/**\n * Attach a sort listener to an element for a given column\n *\n * @param {node|jQuery|string} node Identifier for the element(s) to attach the\n *   listener to. This can take the form of a single DOM node, a jQuery\n *   collection of nodes or a jQuery selector which will identify the node(s).\n * @param {integer} column the column that a click on this node will sort on\n * @param {function} [callback] callback function when sort is run\n * @returns {DataTables.Api} this\n */\n_api_register( 'order.listener()', function ( node, column, callback ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSortAttachListener(settings, node, {}, column, callback);\n\t} );\n} );\n\n\n_api_register( 'order.fixed()', function ( set ) {\n\tif ( ! set ) {\n\t\tvar ctx = this.context;\n\t\tvar fixed = ctx.length ?\n\t\t\tctx[0].aaSortingFixed :\n\t\t\tundefined;\n\n\t\treturn Array.isArray( fixed ) ?\n\t\t\t{ pre: fixed } :\n\t\t\tfixed;\n\t}\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tsettings.aaSortingFixed = $.extend( true, {}, set );\n\t} );\n} );\n\n\n// Order by the selected column(s)\n_api_register( [\n\t'columns().order()',\n\t'column().order()'\n], function ( dir ) {\n\tvar that = this;\n\n\tif ( ! dir ) {\n\t\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\t\tvar sort = _fnSortFlatten( settings );\n\n\t\t\tfor ( var i=0, ien=sort.length ; i<ien ; i++ ) {\n\t\t\t\tif ( sort[i].col === idx ) {\n\t\t\t\t\treturn sort[i].dir;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}, 1 );\n\t}\n\telse {\n\t\treturn this.iterator( 'table', function ( settings, i ) {\n\t\t\tsettings.aaSorting = that[i].map( function (col) {\n\t\t\t\treturn [ col, dir ];\n\t\t\t} );\n\t\t} );\n\t}\n} );\n\n_api_registerPlural('columns().orderable()', 'column().orderable()', function ( directions ) {\n\treturn this.iterator( 'column', function ( settings, idx ) {\n\t\tvar col = settings.aoColumns[idx];\n\n\t\treturn directions ?\n\t\t\tcol.asSorting :\n\t\t\tcol.bSortable;\n\t}, 1 );\n} );\n\n\n_api_register( 'processing()', function ( show ) {\n\treturn this.iterator( 'table', function ( ctx ) {\n\t\t_fnProcessingDisplay( ctx, show );\n\t} );\n} );\n\n\n_api_register( 'search()', function ( input, regex, smart, caseInsen ) {\n\tvar ctx = this.context;\n\n\tif ( input === undefined ) {\n\t\t// get\n\t\treturn ctx.length !== 0 ?\n\t\t\tctx[0].oPreviousSearch.search :\n\t\t\tundefined;\n\t}\n\n\t// set\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\treturn;\n\t\t}\n\n\t\tif (typeof regex === 'object') {\n\t\t\t// New style options to pass to the search builder\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, regex, {\n\t\t\t\tsearch: input\n\t\t\t} ) );\n\t\t}\n\t\telse {\n\t\t\t// Compat for the old options\n\t\t\t_fnFilterComplete( settings, $.extend( settings.oPreviousSearch, {\n\t\t\t\tsearch: input,\n\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t} ) );\n\t\t}\n\t} );\n} );\n\n_api_register( 'search.fixed()', function ( name, search ) {\n\tvar ret = this.iterator( true, 'table', function ( settings ) {\n\t\tvar fixed = settings.searchFixed;\n\n\t\tif (! name) {\n\t\t\treturn Object.keys(fixed)\n\t\t}\n\t\telse if (search === undefined) {\n\t\t\treturn fixed[name];\n\t\t}\n\t\telse if (search === null) {\n\t\t\tdelete fixed[name];\n\t\t}\n\t\telse {\n\t\t\tfixed[name] = search;\n\t\t}\n\n\t\treturn this;\n\t} );\n\n\treturn name !== undefined && search === undefined\n\t\t? ret[0]\n\t\t: ret;\n} );\n\n_api_registerPlural(\n\t'columns().search()',\n\t'column().search()',\n\tfunction ( input, regex, smart, caseInsen ) {\n\t\treturn this.iterator( 'column', function ( settings, column ) {\n\t\t\tvar preSearch = settings.aoPreSearchCols;\n\n\t\t\tif ( input === undefined ) {\n\t\t\t\t// get\n\t\t\t\treturn preSearch[ column ].search;\n\t\t\t}\n\n\t\t\t// set\n\t\t\tif ( ! settings.oFeatures.bFilter ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (typeof regex === 'object') {\n\t\t\t\t// New style options to pass to the search builder\n\t\t\t\t$.extend( preSearch[ column ], regex, {\n\t\t\t\t\tsearch: input\n\t\t\t\t} );\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Old style (with not all options available)\n\t\t\t\t$.extend( preSearch[ column ], {\n\t\t\t\t\tsearch: input,\n\t\t\t\t\tregex:  regex === null ? false : regex,\n\t\t\t\t\tsmart:  smart === null ? true  : smart,\n\t\t\t\t\tcaseInsensitive: caseInsen === null ? true : caseInsen\n\t\t\t\t} );\n\t\t\t}\n\n\t\t\t_fnFilterComplete( settings, settings.oPreviousSearch );\n\t\t} );\n\t}\n);\n\n_api_register([\n\t\t'columns().search.fixed()',\n\t\t'column().search.fixed()'\n\t],\n\tfunction ( name, search ) {\n\t\tvar ret = this.iterator( true, 'column', function ( settings, colIdx ) {\n\t\t\tvar fixed = settings.aoColumns[colIdx].searchFixed;\n\n\t\t\tif (! name) {\n\t\t\t\treturn Object.keys(fixed)\n\t\t\t}\n\t\t\telse if (search === undefined) {\n\t\t\t\treturn fixed[name];\n\t\t\t}\n\t\t\telse if (search === null) {\n\t\t\t\tdelete fixed[name];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfixed[name] = search;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} );\n\n\t\treturn name !== undefined && search === undefined\n\t\t\t? ret[0]\n\t\t\t: ret;\n\t}\n);\n/*\n * State API methods\n */\n\n_api_register( 'state()', function ( set, ignoreTime ) {\n\t// getter\n\tif ( ! set ) {\n\t\treturn this.context.length ?\n\t\t\tthis.context[0].oSavedState :\n\t\t\tnull;\n\t}\n\n\tvar setMutate = $.extend( true, {}, set );\n\n\t// setter\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tif ( ignoreTime !== false ) {\n\t\t\tsetMutate.time = +new Date() + 100;\n\t\t}\n\n\t\t_fnImplementState( settings, setMutate, function(){} );\n\t} );\n} );\n\n\n_api_register( 'state.clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t// Save an empty object\n\t\tsettings.fnStateSaveCallback.call( settings.oInstance, settings, {} );\n\t} );\n} );\n\n\n_api_register( 'state.loaded()', function () {\n\treturn this.context.length ?\n\t\tthis.context[0].oLoadedState :\n\t\tnull;\n} );\n\n\n_api_register( 'state.save()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnSaveState( settings );\n\t} );\n} );\n\n/**\n * Set the libraries that DataTables uses, or the global objects.\n * Note that the arguments can be either way around (legacy support)\n * and the second is optional. See docs.\n */\nDataTable.use = function (arg1, arg2) {\n\t// Reverse arguments for legacy support\n\tvar module = typeof arg1 === 'string'\n\t\t? arg2\n\t\t: arg1;\n\tvar type = typeof arg2 === 'string'\n\t\t? arg2\n\t\t: arg1;\n\n\t// Getter\n\tif (module === undefined && typeof type === 'string') {\n\t\tswitch (type) {\n\t\t\tcase 'lib':\n\t\t\tcase 'jq':\n\t\t\t\treturn $;\n\n\t\t\tcase 'win':\n\t\t\t\treturn window;\n\n\t\t\tcase 'datetime':\n\t\t\t\treturn DataTable.DateTime;\n\n\t\t\tcase 'luxon':\n\t\t\t\treturn __luxon;\n\n\t\t\tcase 'moment':\n\t\t\t\treturn __moment;\n\n\t\t\tdefault:\n\t\t\t\treturn null;\n\t\t}\n\t}\n\n\t// Setter\n\tif (type === 'lib' || type === 'jq' || (module && module.fn && module.fn.jquery)) {\n\t\t$ = module;\n\t}\n\telse if (type == 'win' || (module && module.document)) {\n\t\twindow = module;\n\t\tdocument = module.document;\n\t}\n\telse if (type === 'datetime' || (module && module.type === 'DateTime')) {\n\t\tDataTable.DateTime = module;\n\t}\n\telse if (type === 'luxon' || (module && module.FixedOffsetZone)) {\n\t\t__luxon = module;\n\t}\n\telse if (type === 'moment' || (module && module.isMoment)) {\n\t\t__moment = module;\n\t}\n}\n\n/**\n * CommonJS factory function pass through. This will check if the arguments\n * given are a window object or a jQuery object. If so they are set\n * accordingly.\n * @param {*} root Window\n * @param {*} jq jQUery\n * @returns {boolean} Indicator\n */\nDataTable.factory = function (root, jq) {\n\tvar is = false;\n\n\t// Test if the first parameter is a window object\n\tif (root && root.document) {\n\t\twindow = root;\n\t\tdocument = root.document;\n\t}\n\n\t// Test if the second parameter is a jQuery object\n\tif (jq && jq.fn && jq.fn.jquery) {\n\t\t$ = jq;\n\t\tis = true;\n\t}\n\n\treturn is;\n}\n\n/**\n * Provide a common method for plug-ins to check the version of DataTables being\n * used, in order to ensure compatibility.\n *\n *  @param {string} version Version string to check for, in the format \"X.Y.Z\".\n *    Note that the formats \"X\" and \"X.Y\" are also acceptable.\n *  @param {string} [version2=current DataTables version] As above, but optional.\n *   If not given the current DataTables version will be used.\n *  @returns {boolean} true if this version of DataTables is greater or equal to\n *    the required version, or false if this version of DataTales is not\n *    suitable\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    alert( $.fn.dataTable.versionCheck( '1.9.0' ) );\n */\nDataTable.versionCheck = function( version, version2 )\n{\n\tvar aThis = version2 ?\n\t\tversion2.split('.') :\n\t\tDataTable.version.split('.');\n\tvar aThat = version.split('.');\n\tvar iThis, iThat;\n\n\tfor ( var i=0, iLen=aThat.length ; i<iLen ; i++ ) {\n\t\tiThis = parseInt( aThis[i], 10 ) || 0;\n\t\tiThat = parseInt( aThat[i], 10 ) || 0;\n\n\t\t// Parts are the same, keep comparing\n\t\tif (iThis === iThat) {\n\t\t\tcontinue;\n\t\t}\n\n\t\t// Parts are different, return immediately\n\t\treturn iThis > iThat;\n\t}\n\n\treturn true;\n};\n\n\n/**\n * Check if a `<table>` node is a DataTable table already or not.\n *\n *  @param {node|jquery|string} table Table node, jQuery object or jQuery\n *      selector for the table to test. Note that if more than more than one\n *      table is passed on, only the first will be checked\n *  @returns {boolean} true the table given is a DataTable, or false otherwise\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    if ( ! $.fn.DataTable.isDataTable( '#example' ) ) {\n *      $('#example').dataTable();\n *    }\n */\nDataTable.isDataTable = function ( table )\n{\n\tvar t = $(table).get(0);\n\tvar is = false;\n\n\tif ( table instanceof DataTable.Api ) {\n\t\treturn true;\n\t}\n\n\t$.each( DataTable.settings, function (i, o) {\n\t\tvar head = o.nScrollHead ? $('table', o.nScrollHead)[0] : null;\n\t\tvar foot = o.nScrollFoot ? $('table', o.nScrollFoot)[0] : null;\n\n\t\tif ( o.nTable === t || head === t || foot === t ) {\n\t\t\tis = true;\n\t\t}\n\t} );\n\n\treturn is;\n};\n\n\n/**\n * Get all DataTable tables that have been initialised - optionally you can\n * select to get only currently visible tables.\n *\n *  @param {boolean} [visible=false] Flag to indicate if you want all (default)\n *    or visible tables only.\n *  @returns {array} Array of `table` nodes (not DataTable instances) which are\n *    DataTables\n *  @static\n *  @dtopt API-Static\n *\n *  @example\n *    $.each( $.fn.dataTable.tables(true), function () {\n *      $(table).DataTable().columns.adjust();\n *    } );\n */\nDataTable.tables = function ( visible )\n{\n\tvar api = false;\n\n\tif ( $.isPlainObject( visible ) ) {\n\t\tapi = visible.api;\n\t\tvisible = visible.visible;\n\t}\n\n\tvar a = DataTable.settings\n\t\t.filter( function (o) {\n\t\t\treturn !visible || (visible && $(o.nTable).is(':visible')) \n\t\t\t\t? true\n\t\t\t\t: false;\n\t\t} )\n\t\t.map( function (o) {\n\t\t\treturn o.nTable;\n\t\t});\n\n\treturn api ?\n\t\tnew _Api( a ) :\n\t\ta;\n};\n\n\n/**\n * Convert from camel case parameters to Hungarian notation. This is made public\n * for the extensions to provide the same ability as DataTables core to accept\n * either the 1.9 style Hungarian notation, or the 1.10+ style camelCase\n * parameters.\n *\n *  @param {object} src The model object which holds all parameters that can be\n *    mapped.\n *  @param {object} user The object to convert from camel case to Hungarian.\n *  @param {boolean} force When set to `true`, properties which already have a\n *    Hungarian value in the `user` object will be overwritten. Otherwise they\n *    won't be.\n */\nDataTable.camelToHungarian = _fnCamelToHungarian;\n\n\n\n/**\n *\n */\n_api_register( '$()', function ( selector, opts ) {\n\tvar\n\t\trows   = this.rows( opts ).nodes(), // Get all rows\n\t\tjqRows = $(rows);\n\n\treturn $( [].concat(\n\t\tjqRows.filter( selector ).toArray(),\n\t\tjqRows.find( selector ).toArray()\n\t) );\n} );\n\n\n// jQuery functions to operate on the tables\n$.each( [ 'on', 'one', 'off' ], function (i, key) {\n\t_api_register( key+'()', function ( /* event, handler */ ) {\n\t\tvar args = Array.prototype.slice.call(arguments);\n\n\t\t// Add the `dt` namespace automatically if it isn't already present\n\t\targs[0] = args[0].split( /\\s/ ).map( function ( e ) {\n\t\t\treturn ! e.match(/\\.dt\\b/) ?\n\t\t\t\te+'.dt' :\n\t\t\t\te;\n\t\t\t} ).join( ' ' );\n\n\t\tvar inst = $( this.tables().nodes() );\n\t\tinst[key].apply( inst, args );\n\t\treturn this;\n\t} );\n} );\n\n\n_api_register( 'clear()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnClearTable( settings );\n\t} );\n} );\n\n\n_api_register( 'error()', function (msg) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\t_fnLog( settings, 0, msg );\n\t} );\n} );\n\n\n_api_register( 'settings()', function () {\n\treturn new _Api( this.context, this.context );\n} );\n\n\n_api_register( 'init()', function () {\n\tvar ctx = this.context;\n\treturn ctx.length ? ctx[0].oInit : null;\n} );\n\n\n_api_register( 'data()', function () {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _pluck( settings.aoData, '_aData' );\n\t} ).flatten();\n} );\n\n\n_api_register( 'trigger()', function ( name, args, bubbles ) {\n\treturn this.iterator( 'table', function ( settings ) {\n\t\treturn _fnCallbackFire( settings, null, name, args, bubbles );\n\t} ).flatten();\n} );\n\n\n_api_register( 'ready()', function ( fn ) {\n\tvar ctx = this.context;\n\n\t// Get status of first table\n\tif (! fn) {\n\t\treturn ctx.length\n\t\t\t? (ctx[0]._bInitComplete || false)\n\t\t\t: null;\n\t}\n\n\t// Function to run either once the table becomes ready or\n\t// immediately if it is already ready.\n\treturn this.tables().every(function () {\n\t\tif (this.context[0]._bInitComplete) {\n\t\t\tfn.call(this);\n\t\t}\n\t\telse {\n\t\t\tthis.on('init.dt.DT', function () {\n\t\t\t\tfn.call(this);\n\t\t\t});\n\t\t}\n\t} );\n} );\n\n\n_api_register( 'destroy()', function ( remove ) {\n\tremove = remove || false;\n\n\treturn this.iterator( 'table', function ( settings ) {\n\t\tvar classes   = settings.oClasses;\n\t\tvar table     = settings.nTable;\n\t\tvar tbody     = settings.nTBody;\n\t\tvar thead     = settings.nTHead;\n\t\tvar tfoot     = settings.nTFoot;\n\t\tvar jqTable   = $(table);\n\t\tvar jqTbody   = $(tbody);\n\t\tvar jqWrapper = $(settings.nTableWrapper);\n\t\tvar rows      = settings.aoData.map( function (r) { return r ? r.nTr : null; } );\n\t\tvar orderClasses = classes.order;\n\n\t\t// Flag to note that the table is currently being destroyed - no action\n\t\t// should be taken\n\t\tsettings.bDestroying = true;\n\n\t\t// Fire off the destroy callbacks for plug-ins etc\n\t\t_fnCallbackFire( settings, \"aoDestroyCallback\", \"destroy\", [settings], true );\n\n\t\t// If not being removed from the document, make all columns visible\n\t\tif ( ! remove ) {\n\t\t\tnew _Api( settings ).columns().visible( true );\n\t\t}\n\n\t\t// Blitz all `DT` namespaced events (these are internal events, the\n\t\t// lowercase, `dt` events are user subscribed and they are responsible\n\t\t// for removing them\n\t\tjqWrapper.off('.DT').find(':not(tbody *)').off('.DT');\n\t\t$(window).off('.DT-'+settings.sInstance);\n\n\t\t// When scrolling we had to break the table up - restore it\n\t\tif ( table != thead.parentNode ) {\n\t\t\tjqTable.children('thead').detach();\n\t\t\tjqTable.append( thead );\n\t\t}\n\n\t\tif ( tfoot && table != tfoot.parentNode ) {\n\t\t\tjqTable.children('tfoot').detach();\n\t\t\tjqTable.append( tfoot );\n\t\t}\n\n\t\tsettings.colgroup.remove();\n\n\t\tsettings.aaSorting = [];\n\t\tsettings.aaSortingFixed = [];\n\t\t_fnSortingClasses( settings );\n\n\t\t$('th, td', thead)\n\t\t\t.removeClass(\n\t\t\t\torderClasses.canAsc + ' ' +\n\t\t\t\torderClasses.canDesc + ' ' +\n\t\t\t\torderClasses.isAsc + ' ' +\n\t\t\t\torderClasses.isDesc\n\t\t\t)\n\t\t\t.css('width', '');\n\n\t\t// Add the TR elements back into the table in their original order\n\t\tjqTbody.children().detach();\n\t\tjqTbody.append( rows );\n\n\t\tvar orig = settings.nTableWrapper.parentNode;\n\t\tvar insertBefore = settings.nTableWrapper.nextSibling;\n\n\t\t// Remove the DataTables generated nodes, events and classes\n\t\tvar removedMethod = remove ? 'remove' : 'detach';\n\t\tjqTable[ removedMethod ]();\n\t\tjqWrapper[ removedMethod ]();\n\n\t\t// If we need to reattach the table to the document\n\t\tif ( ! remove && orig ) {\n\t\t\t// insertBefore acts like appendChild if !arg[1]\n\t\t\torig.insertBefore( table, insertBefore );\n\n\t\t\t// Restore the width of the original table - was read from the style property,\n\t\t\t// so we can restore directly to that\n\t\t\tjqTable\n\t\t\t\t.css( 'width', settings.sDestroyWidth )\n\t\t\t\t.removeClass( classes.table );\n\t\t}\n\n\t\t/* Remove the settings object from the settings array */\n\t\tvar idx = DataTable.settings.indexOf(settings);\n\t\tif ( idx !== -1 ) {\n\t\t\tDataTable.settings.splice( idx, 1 );\n\t\t}\n\t} );\n} );\n\n\n// Add the `every()` method for rows, columns and cells in a compact form\n$.each( [ 'column', 'row', 'cell' ], function ( i, type ) {\n\t_api_register( type+'s().every()', function ( fn ) {\n\t\tvar opts = this.selector.opts;\n\t\tvar api = this;\n\t\tvar inst;\n\t\tvar counter = 0;\n\n\t\treturn this.iterator( 'every', function ( settings, selectedIdx, tableIdx ) {\n\t\t\tinst = api[ type ](selectedIdx, opts);\n\n\t\t\tif (type === 'cell') {\n\t\t\t\tfn.call(inst, inst[0][0].row, inst[0][0].column, tableIdx, counter);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tfn.call(inst, selectedIdx, tableIdx, counter);\n\t\t\t}\n\n\t\t\tcounter++;\n\t\t} );\n\t} );\n} );\n\n\n// i18n method for extensions to be able to use the language object from the\n// DataTable\n_api_register( 'i18n()', function ( token, def, plural ) {\n\tvar ctx = this.context[0];\n\tvar resolved = _fnGetObjectDataFn( token )( ctx.oLanguage );\n\n\tif ( resolved === undefined ) {\n\t\tresolved = def;\n\t}\n\n\tif ( $.isPlainObject( resolved ) ) {\n\t\tresolved = plural !== undefined && resolved[ plural ] !== undefined ?\n\t\t\tresolved[ plural ] :\n\t\t\tresolved._;\n\t}\n\n\treturn typeof resolved === 'string'\n\t\t? resolved.replace( '%d', plural ) // nb: plural might be undefined,\n\t\t: resolved;\n} );\n\n/**\n * Version string for plug-ins to check compatibility. Allowed format is\n * `a.b.c-d` where: a:int, b:int, c:int, d:string(dev|beta|alpha). `d` is used\n * only for non-release builds. See https://semver.org/ for more information.\n *  @member\n *  @type string\n *  @default Version number\n */\nDataTable.version = \"2.1.8\";\n\n/**\n * Private data store, containing all of the settings objects that are\n * created for the tables on a given page.\n *\n * Note that the `DataTable.settings` object is aliased to\n * `jQuery.fn.dataTableExt` through which it may be accessed and\n * manipulated, or `jQuery.fn.dataTable.settings`.\n *  @member\n *  @type array\n *  @default []\n *  @private\n */\nDataTable.settings = [];\n\n/**\n * Object models container, for the various models that DataTables has\n * available to it. These models define the objects that are used to hold\n * the active state and configuration of the table.\n *  @namespace\n */\nDataTable.models = {};\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * search information for the global filter and individual column filters.\n *  @namespace\n */\nDataTable.models.oSearch = {\n\t/**\n\t * Flag to indicate if the filtering should be case insensitive or not\n\t */\n\t\"caseInsensitive\": true,\n\n\t/**\n\t * Applied search term\n\t */\n\t\"search\": \"\",\n\n\t/**\n\t * Flag to indicate if the search term should be interpreted as a\n\t * regular expression (true) or not (false) and therefore and special\n\t * regex characters escaped.\n\t */\n\t\"regex\": false,\n\n\t/**\n\t * Flag to indicate if DataTables is to use its smart filtering or not.\n\t */\n\t\"smart\": true,\n\n\t/**\n\t * Flag to indicate if DataTables should only trigger a search when\n\t * the return key is pressed.\n\t */\n\t\"return\": false\n};\n\n\n\n\n/**\n * Template object for the way in which DataTables holds information about\n * each individual row. This is the object format used for the settings\n * aoData array.\n *  @namespace\n */\nDataTable.models.oRow = {\n\t/**\n\t * TR element for the row\n\t */\n\t\"nTr\": null,\n\n\t/**\n\t * Array of TD elements for each row. This is null until the row has been\n\t * created.\n\t */\n\t\"anCells\": null,\n\n\t/**\n\t * Data object from the original data source for the row. This is either\n\t * an array if using the traditional form of DataTables, or an object if\n\t * using mData options. The exact type will depend on the passed in\n\t * data from the data source, or will be an array if using DOM a data\n\t * source.\n\t */\n\t\"_aData\": [],\n\n\t/**\n\t * Sorting data cache - this array is ostensibly the same length as the\n\t * number of columns (although each index is generated only as it is\n\t * needed), and holds the data that is used for sorting each column in the\n\t * row. We do this cache generation at the start of the sort in order that\n\t * the formatting of the sort data need be done only once for each cell\n\t * per sort. This array should not be read from or written to by anything\n\t * other than the master sorting methods.\n\t */\n\t\"_aSortData\": null,\n\n\t/**\n\t * Per cell filtering data cache. As per the sort data cache, used to\n\t * increase the performance of the filtering in DataTables\n\t */\n\t\"_aFilterData\": null,\n\n\t/**\n\t * Filtering data cache. This is the same as the cell filtering cache, but\n\t * in this case a string rather than an array. This is easily computed with\n\t * a join on `_aFilterData`, but is provided as a cache so the join isn't\n\t * needed on every search (memory traded for performance)\n\t */\n\t\"_sFilterRow\": null,\n\n\t/**\n\t * Denote if the original data source was from the DOM, or the data source\n\t * object. This is used for invalidating data, so DataTables can\n\t * automatically read data from the original source, unless uninstructed\n\t * otherwise.\n\t */\n\t\"src\": null,\n\n\t/**\n\t * Index in the aoData array. This saves an indexOf lookup when we have the\n\t * object, but want to know the index\n\t */\n\t\"idx\": -1,\n\n\t/**\n\t * Cached display value\n\t */\n\tdisplayData: null\n};\n\n\n/**\n * Template object for the column information object in DataTables. This object\n * is held in the settings aoColumns array and contains all the information that\n * DataTables needs about each individual column.\n *\n * Note that this object is related to {@link DataTable.defaults.column}\n * but this one is the internal data store for DataTables's cache of columns.\n * It should NOT be manipulated outside of DataTables. Any configuration should\n * be done through the initialisation options.\n *  @namespace\n */\nDataTable.models.oColumn = {\n\t/**\n\t * Column index.\n\t */\n\t\"idx\": null,\n\n\t/**\n\t * A list of the columns that sorting should occur on when this column\n\t * is sorted. That this property is an array allows multi-column sorting\n\t * to be defined for a column (for example first name / last name columns\n\t * would benefit from this). The values are integers pointing to the\n\t * columns to be sorted on (typically it will be a single integer pointing\n\t * at itself, but that doesn't need to be the case).\n\t */\n\t\"aDataSort\": null,\n\n\t/**\n\t * Define the sorting directions that are applied to the column, in sequence\n\t * as the column is repeatedly sorted upon - i.e. the first value is used\n\t * as the sorting direction when the column if first sorted (clicked on).\n\t * Sort it again (click again) and it will move on to the next index.\n\t * Repeat until loop.\n\t */\n\t\"asSorting\": null,\n\n\t/**\n\t * Flag to indicate if the column is searchable, and thus should be included\n\t * in the filtering or not.\n\t */\n\t\"bSearchable\": null,\n\n\t/**\n\t * Flag to indicate if the column is sortable or not.\n\t */\n\t\"bSortable\": null,\n\n\t/**\n\t * Flag to indicate if the column is currently visible in the table or not\n\t */\n\t\"bVisible\": null,\n\n\t/**\n\t * Store for manual type assignment using the `column.type` option. This\n\t * is held in store so we can manipulate the column's `sType` property.\n\t */\n\t\"_sManualType\": null,\n\n\t/**\n\t * Flag to indicate if HTML5 data attributes should be used as the data\n\t * source for filtering or sorting. True is either are.\n\t */\n\t\"_bAttrSrc\": false,\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\t/**\n\t * Function to get data from a cell in a column. You should <b>never</b>\n\t * access data directly through _aData internally in DataTables - always use\n\t * the method attached to this property. It allows mData to function as\n\t * required. This function is automatically assigned by the column\n\t * initialisation method\n\t */\n\t\"fnGetData\": null,\n\n\t/**\n\t * Function to set data for a cell in the column. You should <b>never</b>\n\t * set the data directly to _aData internally in DataTables - always use\n\t * this method. It allows mData to function as required. This function\n\t * is automatically assigned by the column initialisation method\n\t */\n\t\"fnSetData\": null,\n\n\t/**\n\t * Property to read the value for the cells in the column from the data\n\t * source array / object. If null, then the default content is used, if a\n\t * function is given then the return from the function is used.\n\t */\n\t\"mData\": null,\n\n\t/**\n\t * Partner property to mData which is used (only when defined) to get\n\t * the data - i.e. it is basically the same as mData, but without the\n\t * 'set' option, and also the data fed to it is the result from mData.\n\t * This is the rendering method to match the data method of mData.\n\t */\n\t\"mRender\": null,\n\n\t/**\n\t * The class to apply to all TD elements in the table's TBODY for the column\n\t */\n\t\"sClass\": null,\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t */\n\t\"sContentPadding\": null,\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because mData\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\t/**\n\t * Name for the column, allowing reference to the column by name as well as\n\t * by index (needs a lookup to work by name).\n\t */\n\t\"sName\": null,\n\n\t/**\n\t * Custom sorting data type - defines which of the available plug-ins in\n\t * afnSortData the custom sorting will use - if any is defined.\n\t */\n\t\"sSortDataType\": 'std',\n\n\t/**\n\t * Class to be applied to the header element when sorting on this column\n\t */\n\t\"sSortingClass\": null,\n\n\t/**\n\t * Title of the column - what is seen in the TH element (nTh).\n\t */\n\t\"sTitle\": null,\n\n\t/**\n\t * Column sorting and filtering type\n\t */\n\t\"sType\": null,\n\n\t/**\n\t * Width of the column\n\t */\n\t\"sWidth\": null,\n\n\t/**\n\t * Width of the column when it was first \"encountered\"\n\t */\n\t\"sWidthOrig\": null,\n\n\t/** Cached string which is the longest in the column */\n\tmaxLenString: null,\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: null\n};\n\n\n/*\n * Developer note: The properties of the object below are given in Hungarian\n * notation, that was used as the interface for DataTables prior to v1.10, however\n * from v1.10 onwards the primary interface is camel case. In order to avoid\n * breaking backwards compatibility utterly with this change, the Hungarian\n * version is still, internally the primary interface, but is is not documented\n * - hence the @name tags in each doc comment. This allows a Javascript function\n * to create a map from Hungarian notation to camel case (going the other direction\n * would require each property to be listed, which would add around 3K to the size\n * of DataTables, while this method is about a 0.5K hit).\n *\n * Ultimately this does pave the way for Hungarian notation to be dropped\n * completely, but that is a massive amount of work and will break current\n * installs (therefore is on-hold until v2).\n */\n\n/**\n * Initialisation options that can be given to DataTables at initialisation\n * time.\n *  @namespace\n */\nDataTable.defaults = {\n\t/**\n\t * An array of data to use for the table, passed in at initialisation which\n\t * will be used in preference to any data which is already in the DOM. This is\n\t * particularly useful for constructing tables purely in Javascript, for\n\t * example with a custom Ajax call.\n\t */\n\t\"aaData\": null,\n\n\n\t/**\n\t * If ordering is enabled, then DataTables will perform a first pass sort on\n\t * initialisation. You can define which column(s) the sort is performed\n\t * upon, and the sorting direction, with this variable. The `sorting` array\n\t * should contain an array for each column to be sorted initially containing\n\t * the column's index and a direction string ('asc' or 'desc').\n\t */\n\t\"aaSorting\": [[0,'asc']],\n\n\n\t/**\n\t * This parameter is basically identical to the `sorting` parameter, but\n\t * cannot be overridden by user interaction with the table. What this means\n\t * is that you could have a column (visible or hidden) which the sorting\n\t * will always be forced on first - any sorting after that (from the user)\n\t * will then be performed as required. This can be useful for grouping rows\n\t * together.\n\t */\n\t\"aaSortingFixed\": [],\n\n\n\t/**\n\t * DataTables can be instructed to load data to display in the table from a\n\t * Ajax source. This option defines how that Ajax call is made and where to.\n\t *\n\t * The `ajax` property has three different modes of operation, depending on\n\t * how it is defined. These are:\n\t *\n\t * * `string` - Set the URL from where the data should be loaded from.\n\t * * `object` - Define properties for `jQuery.ajax`.\n\t * * `function` - Custom data get function\n\t *\n\t * `string`\n\t * --------\n\t *\n\t * As a string, the `ajax` property simply defines the URL from which\n\t * DataTables will load data.\n\t *\n\t * `object`\n\t * --------\n\t *\n\t * As an object, the parameters in the object are passed to\n\t * [jQuery.ajax](https://api.jquery.com/jQuery.ajax/) allowing fine control\n\t * of the Ajax request. DataTables has a number of default parameters which\n\t * you can override using this option. Please refer to the jQuery\n\t * documentation for a full description of the options available, although\n\t * the following parameters provide additional options in DataTables or\n\t * require special consideration:\n\t *\n\t * * `data` - As with jQuery, `data` can be provided as an object, but it\n\t *   can also be used as a function to manipulate the data DataTables sends\n\t *   to the server. The function takes a single parameter, an object of\n\t *   parameters with the values that DataTables has readied for sending. An\n\t *   object may be returned which will be merged into the DataTables\n\t *   defaults, or you can add the items to the object that was passed in and\n\t *   not return anything from the function. This supersedes `fnServerParams`\n\t *   from DataTables 1.9-.\n\t *\n\t * * `dataSrc` - By default DataTables will look for the property `data` (or\n\t *   `aaData` for compatibility with DataTables 1.9-) when obtaining data\n\t *   from an Ajax source or for server-side processing - this parameter\n\t *   allows that property to be changed. You can use Javascript dotted\n\t *   object notation to get a data source for multiple levels of nesting, or\n\t *   it my be used as a function. As a function it takes a single parameter,\n\t *   the JSON returned from the server, which can be manipulated as\n\t *   required, with the returned value being that used by DataTables as the\n\t *   data source for the table.\n\t *\n\t * * `success` - Should not be overridden it is used internally in\n\t *   DataTables. To manipulate / transform the data returned by the server\n\t *   use `ajax.dataSrc`, or use `ajax` as a function (see below).\n\t *\n\t * `function`\n\t * ----------\n\t *\n\t * As a function, making the Ajax call is left up to yourself allowing\n\t * complete control of the Ajax request. Indeed, if desired, a method other\n\t * than Ajax could be used to obtain the required data, such as Web storage\n\t * or an AIR database.\n\t *\n\t * The function is given four parameters and no return is required. The\n\t * parameters are:\n\t *\n\t * 1. _object_ - Data to send to the server\n\t * 2. _function_ - Callback function that must be executed when the required\n\t *    data has been obtained. That data should be passed into the callback\n\t *    as the only parameter\n\t * 3. _object_ - DataTables settings object for the table\n\t */\n\t\"ajax\": null,\n\n\n\t/**\n\t * This parameter allows you to readily specify the entries in the length drop\n\t * down menu that DataTables shows when pagination is enabled. It can be\n\t * either a 1D array of options which will be used for both the displayed\n\t * option and the value, or a 2D array which will use the array in the first\n\t * position as the value, and the array in the second position as the\n\t * displayed options (useful for language strings such as 'All').\n\t *\n\t * Note that the `pageLength` property will be automatically set to the\n\t * first value given in this array, unless `pageLength` is also provided.\n\t */\n\t\"aLengthMenu\": [ 10, 25, 50, 100 ],\n\n\n\t/**\n\t * The `columns` option in the initialisation parameter allows you to define\n\t * details about the way individual columns behave. For a full list of\n\t * column options that can be set, please see\n\t * {@link DataTable.defaults.column}. Note that if you use `columns` to\n\t * define your columns, you must have an entry in the array for every single\n\t * column that you have in your table (these can be null if you don't which\n\t * to specify any options).\n\t */\n\t\"aoColumns\": null,\n\n\t/**\n\t * Very similar to `columns`, `columnDefs` allows you to target a specific\n\t * column, multiple columns, or all columns, using the `targets` property of\n\t * each object in the array. This allows great flexibility when creating\n\t * tables, as the `columnDefs` arrays can be of any length, targeting the\n\t * columns you specifically want. `columnDefs` may use any of the column\n\t * options available: {@link DataTable.defaults.column}, but it _must_\n\t * have `targets` defined in each object in the array. Values in the `targets`\n\t * array may be:\n\t *   <ul>\n\t *     <li>a string - class name will be matched on the TH for the column</li>\n\t *     <li>0 or a positive integer - column index counting from the left</li>\n\t *     <li>a negative integer - column index counting from the right</li>\n\t *     <li>the string \"_all\" - all columns (i.e. assign a default)</li>\n\t *   </ul>\n\t */\n\t\"aoColumnDefs\": null,\n\n\n\t/**\n\t * Basically the same as `search`, this parameter defines the individual column\n\t * filtering state at initialisation time. The array must be of the same size\n\t * as the number of columns, and each element be an object with the parameters\n\t * `search` and `escapeRegex` (the latter is optional). 'null' is also\n\t * accepted and the default will be used.\n\t */\n\t\"aoSearchCols\": [],\n\n\n\t/**\n\t * Enable or disable automatic column width calculation. This can be disabled\n\t * as an optimisation (it takes some time to calculate the widths) if the\n\t * tables widths are passed in using `columns`.\n\t */\n\t\"bAutoWidth\": true,\n\n\n\t/**\n\t * Deferred rendering can provide DataTables with a huge speed boost when you\n\t * are using an Ajax or JS data source for the table. This option, when set to\n\t * true, will cause DataTables to defer the creation of the table elements for\n\t * each row until they are needed for a draw - saving a significant amount of\n\t * time.\n\t */\n\t\"bDeferRender\": true,\n\n\n\t/**\n\t * Replace a DataTable which matches the given selector and replace it with\n\t * one which has the properties of the new initialisation object passed. If no\n\t * table matches the selector, then the new DataTable will be constructed as\n\t * per normal.\n\t */\n\t\"bDestroy\": false,\n\n\n\t/**\n\t * Enable or disable filtering of data. Filtering in DataTables is \"smart\" in\n\t * that it allows the end user to input multiple words (space separated) and\n\t * will match a row containing those words, even if not in the order that was\n\t * specified (this allow matching across multiple columns). Note that if you\n\t * wish to use filtering in DataTables this must remain 'true' - to remove the\n\t * default filtering input box and retain filtering abilities, please use\n\t * {@link DataTable.defaults.dom}.\n\t */\n\t\"bFilter\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bInfo\": true,\n\n\t/**\n\t * Used only for compatiblity with DT1\n\t * @deprecated\n\t */\n\t\"bLengthChange\": true,\n\n\t/**\n\t * Enable or disable pagination.\n\t */\n\t\"bPaginate\": true,\n\n\n\t/**\n\t * Enable or disable the display of a 'processing' indicator when the table is\n\t * being processed (e.g. a sort). This is particularly useful for tables with\n\t * large amounts of data where it can take a noticeable amount of time to sort\n\t * the entries.\n\t */\n\t\"bProcessing\": false,\n\n\n\t/**\n\t * Retrieve the DataTables object for the given selector. Note that if the\n\t * table has already been initialised, this parameter will cause DataTables\n\t * to simply return the object that has already been set up - it will not take\n\t * account of any changes you might have made to the initialisation object\n\t * passed to DataTables (setting this parameter to true is an acknowledgement\n\t * that you understand this). `destroy` can be used to reinitialise a table if\n\t * you need.\n\t */\n\t\"bRetrieve\": false,\n\n\n\t/**\n\t * When vertical (y) scrolling is enabled, DataTables will force the height of\n\t * the table's viewport to the given height at all times (useful for layout).\n\t * However, this can look odd when filtering data down to a small data set,\n\t * and the footer is left \"floating\" further down. This parameter (when\n\t * enabled) will cause DataTables to collapse the table's viewport down when\n\t * the result set will fit within the given Y height.\n\t */\n\t\"bScrollCollapse\": false,\n\n\n\t/**\n\t * Configure DataTables to use server-side processing. Note that the\n\t * `ajax` parameter must also be given in order to give DataTables a\n\t * source to obtain the required data for each draw.\n\t */\n\t\"bServerSide\": false,\n\n\n\t/**\n\t * Enable or disable sorting of columns. Sorting of individual columns can be\n\t * disabled by the `sortable` option for each column.\n\t */\n\t\"bSort\": true,\n\n\n\t/**\n\t * Enable or display DataTables' ability to sort multiple columns at the\n\t * same time (activated by shift-click by the user).\n\t */\n\t\"bSortMulti\": true,\n\n\n\t/**\n\t * Allows control over whether DataTables should use the top (true) unique\n\t * cell that is found for a single column, or the bottom (false - default).\n\t * This is useful when using complex headers.\n\t */\n\t\"bSortCellsTop\": null,\n\n\n\t/**\n\t * Enable or disable the addition of the classes `sorting\\_1`, `sorting\\_2` and\n\t * `sorting\\_3` to the columns which are currently being sorted on. This is\n\t * presented as a feature switch as it can increase processing time (while\n\t * classes are removed and added) so for large data sets you might want to\n\t * turn this off.\n\t */\n\t\"bSortClasses\": true,\n\n\n\t/**\n\t * Enable or disable state saving. When enabled HTML5 `localStorage` will be\n\t * used to save table display information such as pagination information,\n\t * display length, filtering and sorting. As such when the end user reloads\n\t * the page the display display will match what thy had previously set up.\n\t */\n\t\"bStateSave\": false,\n\n\n\t/**\n\t * This function is called when a TR element is created (and all TD child\n\t * elements have been inserted), or registered if using a DOM source, allowing\n\t * manipulation of the TR element (adding classes etc).\n\t */\n\t\"fnCreatedRow\": null,\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify any aspect you want about the created DOM.\n\t */\n\t\"fnDrawCallback\": null,\n\n\n\t/**\n\t * Identical to fnHeaderCallback() but for the table footer this function\n\t * allows you to modify the table footer on every 'draw' event.\n\t */\n\t\"fnFooterCallback\": null,\n\n\n\t/**\n\t * When rendering large numbers in the information element for the table\n\t * (i.e. \"Showing 1 to 10 of 57 entries\") DataTables will render large numbers\n\t * to have a comma separator for the 'thousands' units (e.g. 1 million is\n\t * rendered as \"1,000,000\") to help readability for the end user. This\n\t * function will override the default method DataTables uses.\n\t */\n\t\"fnFormatNumber\": function ( toFormat ) {\n\t\treturn toFormat.toString().replace(\n\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g,\n\t\t\tthis.oLanguage.sThousands\n\t\t);\n\t},\n\n\n\t/**\n\t * This function is called on every 'draw' event, and allows you to\n\t * dynamically modify the header row. This can be used to calculate and\n\t * display useful information about the table.\n\t */\n\t\"fnHeaderCallback\": null,\n\n\n\t/**\n\t * The information element can be used to convey information about the current\n\t * state of the table. Although the internationalisation options presented by\n\t * DataTables are quite capable of dealing with most customisations, there may\n\t * be times where you wish to customise the string further. This callback\n\t * allows you to do exactly that.\n\t */\n\t\"fnInfoCallback\": null,\n\n\n\t/**\n\t * Called when the table has been initialised. Normally DataTables will\n\t * initialise sequentially and there will be no need for this function,\n\t * however, this does not hold true when using external language information\n\t * since that is obtained using an async XHR call.\n\t */\n\t\"fnInitComplete\": null,\n\n\n\t/**\n\t * Called at the very start of each table draw and can be used to cancel the\n\t * draw by returning false, any other return (including undefined) results in\n\t * the full draw occurring).\n\t */\n\t\"fnPreDrawCallback\": null,\n\n\n\t/**\n\t * This function allows you to 'post process' each row after it have been\n\t * generated for each table draw, but before it is rendered on screen. This\n\t * function might be used for setting the row class name etc.\n\t */\n\t\"fnRowCallback\": null,\n\n\n\t/**\n\t * Load the table state. With this function you can define from where, and how, the\n\t * state of a table is loaded. By default DataTables will load from `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateLoadCallback\": function ( settings ) {\n\t\ttry {\n\t\t\treturn JSON.parse(\n\t\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).getItem(\n\t\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname\n\t\t\t\t)\n\t\t\t);\n\t\t} catch (e) {\n\t\t\treturn {};\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the saved state prior to loading that state.\n\t * This callback is called when the table is loading state from the stored data, but\n\t * prior to the settings object being modified by the saved state. Note that for\n\t * plug-in authors, you should use the `stateLoadParams` event to load parameters for\n\t * a plug-in.\n\t */\n\t\"fnStateLoadParams\": null,\n\n\n\t/**\n\t * Callback that is called when the state has been loaded from the state saving method\n\t * and the DataTables settings object has been modified as a result of the loaded state.\n\t */\n\t\"fnStateLoaded\": null,\n\n\n\t/**\n\t * Save the table state. This function allows you to define where and how the state\n\t * information for the table is stored By default DataTables will use `localStorage`\n\t * but you might wish to use a server-side database or cookies.\n\t */\n\t\"fnStateSaveCallback\": function ( settings, data ) {\n\t\ttry {\n\t\t\t(settings.iStateDuration === -1 ? sessionStorage : localStorage).setItem(\n\t\t\t\t'DataTables_'+settings.sInstance+'_'+location.pathname,\n\t\t\t\tJSON.stringify( data )\n\t\t\t);\n\t\t} catch (e) {\n\t\t\t// noop\n\t\t}\n\t},\n\n\n\t/**\n\t * Callback which allows modification of the state to be saved. Called when the table\n\t * has changed state a new state save is required. This method allows modification of\n\t * the state saving object prior to actually doing the save, including addition or\n\t * other state properties or modification. Note that for plug-in authors, you should\n\t * use the `stateSaveParams` event to save parameters for a plug-in.\n\t */\n\t\"fnStateSaveParams\": null,\n\n\n\t/**\n\t * Duration for which the saved state information is considered valid. After this period\n\t * has elapsed the state will be returned to the default.\n\t * Value is given in seconds.\n\t */\n\t\"iStateDuration\": 7200,\n\n\n\t/**\n\t * Number of rows to display on a single page when using pagination. If\n\t * feature enabled (`lengthChange`) then the end user will be able to override\n\t * this to a custom setting using a pop-up menu.\n\t */\n\t\"iDisplayLength\": 10,\n\n\n\t/**\n\t * Define the starting point for data display when using DataTables with\n\t * pagination. Note that this parameter is the number of records, rather than\n\t * the page number, so if you have 10 records per page and want to start on\n\t * the third page, it should be \"20\".\n\t */\n\t\"iDisplayStart\": 0,\n\n\n\t/**\n\t * By default DataTables allows keyboard navigation of the table (sorting, paging,\n\t * and filtering) by adding a `tabindex` attribute to the required elements. This\n\t * allows you to tab through the controls and press the enter key to activate them.\n\t * The tabindex is default 0, meaning that the tab follows the flow of the document.\n\t * You can overrule this using this parameter if you wish. Use a value of -1 to\n\t * disable built-in keyboard navigation.\n\t */\n\t\"iTabIndex\": 0,\n\n\n\t/**\n\t * Classes that DataTables assigns to the various components and features\n\t * that it adds to the HTML table. This allows classes to be configured\n\t * during initialisation in addition to through the static\n\t * {@link DataTable.ext.oStdClasses} object).\n\t */\n\t\"oClasses\": {},\n\n\n\t/**\n\t * All strings that DataTables uses in the user interface that it creates\n\t * are defined in this object, allowing you to modified them individually or\n\t * completely replace them all as required.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Strings that are used for WAI-ARIA labels and controls only (these are not\n\t\t * actually visible on the page, but will be read by screenreaders, and thus\n\t\t * must be internationalised as well).\n\t\t */\n\t\t\"oAria\": {\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column may be sorted\n\t\t\t */\n\t\t\t\"orderable\": \": Activate to sort\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being sorted\n\t\t\t */\n\t\t\t\"orderableReverse\": \": Activate to invert sorting\",\n\n\t\t\t/**\n\t\t\t * ARIA label that is added to the table headers when the column is currently being \n\t\t\t * sorted and next step is to remove sorting\n\t\t\t */\n\t\t\t\"orderableRemove\": \": Activate to remove sorting\",\n\n\t\t\tpaginate: {\n\t\t\t\tfirst: 'First',\n\t\t\t\tlast: 'Last',\n\t\t\t\tnext: 'Next',\n\t\t\t\tprevious: 'Previous',\n\t\t\t\tnumber: ''\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Pagination string used by DataTables for the built-in pagination\n\t\t * control types.\n\t\t */\n\t\t\"oPaginate\": {\n\t\t\t/**\n\t\t\t * Label and character for first page button (Â«)\n\t\t\t */\n\t\t\t\"sFirst\": \"\\u00AB\",\n\n\t\t\t/**\n\t\t\t * Last page button (Â»)\n\t\t\t */\n\t\t\t\"sLast\": \"\\u00BB\",\n\n\t\t\t/**\n\t\t\t * Next page button (âº)\n\t\t\t */\n\t\t\t\"sNext\": \"\\u203A\",\n\n\t\t\t/**\n\t\t\t * Previous page button (â¹)\n\t\t\t */\n\t\t\t\"sPrevious\": \"\\u2039\",\n\t\t},\n\n\t\t/**\n\t\t * Plural object for the data type the table is showing\n\t\t */\n\t\tentries: {\n\t\t\t_: \"entries\",\n\t\t\t1: \"entry\"\n\t\t},\n\n\t\t/**\n\t\t * This string is shown in preference to `zeroRecords` when the table is\n\t\t * empty of data (regardless of filtering). Note that this is an optional\n\t\t * parameter - if it is not given, the value of `zeroRecords` will be used\n\t\t * instead (either the default or given value).\n\t\t */\n\t\t\"sEmptyTable\": \"No data available in table\",\n\n\n\t\t/**\n\t\t * This string gives information to the end user about the information\n\t\t * that is current on display on the page. The following tokens can be\n\t\t * used in the string and will be dynamically replaced as the table\n\t\t * display updates. This tokens can be placed anywhere in the string, or\n\t\t * removed as needed by the language requires:\n\t\t *\n\t\t * * `\\_START\\_` - Display index of the first record on the current page\n\t\t * * `\\_END\\_` - Display index of the last record on the current page\n\t\t * * `\\_TOTAL\\_` - Number of records in the table after filtering\n\t\t * * `\\_MAX\\_` - Number of records in the table without filtering\n\t\t * * `\\_PAGE\\_` - Current page number\n\t\t * * `\\_PAGES\\_` - Total number of pages of data in the table\n\t\t */\n\t\t\"sInfo\": \"Showing _START_ to _END_ of _TOTAL_ _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * Display information string for when the table is empty. Typically the\n\t\t * format of this string should match `info`.\n\t\t */\n\t\t\"sInfoEmpty\": \"Showing 0 to 0 of 0 _ENTRIES-TOTAL_\",\n\n\n\t\t/**\n\t\t * When a user filters the information in a table, this string is appended\n\t\t * to the information (`info`) to give an idea of how strong the filtering\n\t\t * is. The variable _MAX_ is dynamically updated.\n\t\t */\n\t\t\"sInfoFiltered\": \"(filtered from _MAX_ total _ENTRIES-MAX_)\",\n\n\n\t\t/**\n\t\t * If can be useful to append extra information to the info string at times,\n\t\t * and this variable does exactly that. This information will be appended to\n\t\t * the `info` (`infoEmpty` and `infoFiltered` in whatever combination they are\n\t\t * being used) at all times.\n\t\t */\n\t\t\"sInfoPostFix\": \"\",\n\n\n\t\t/**\n\t\t * This decimal place operator is a little different from the other\n\t\t * language options since DataTables doesn't output floating point\n\t\t * numbers, so it won't ever use this for display of a number. Rather,\n\t\t * what this parameter does is modify the sort methods of the table so\n\t\t * that numbers which are in a format which has a character other than\n\t\t * a period (`.`) as a decimal place will be sorted numerically.\n\t\t *\n\t\t * Note that numbers with different decimal places cannot be shown in\n\t\t * the same table and still be sortable, the table must be consistent.\n\t\t * However, multiple different tables on the page can use different\n\t\t * decimal place characters.\n\t\t */\n\t\t\"sDecimal\": \"\",\n\n\n\t\t/**\n\t\t * DataTables has a build in number formatter (`formatNumber`) which is\n\t\t * used to format large numbers that are used in the table information.\n\t\t * By default a comma is used, but this can be trivially changed to any\n\t\t * character you wish with this parameter.\n\t\t */\n\t\t\"sThousands\": \",\",\n\n\n\t\t/**\n\t\t * Detail the action that will be taken when the drop down menu for the\n\t\t * pagination length option is changed. The '_MENU_' variable is replaced\n\t\t * with a default select list of 10, 25, 50 and 100, and can be replaced\n\t\t * with a custom select box if required.\n\t\t */\n\t\t\"sLengthMenu\": \"_MENU_ _ENTRIES_ per page\",\n\n\n\t\t/**\n\t\t * When using Ajax sourced data and during the first draw when DataTables is\n\t\t * gathering the data, this message is shown in an empty row in the table to\n\t\t * indicate to the end user the the data is being loaded. Note that this\n\t\t * parameter is not used when loading data by server-side processing, just\n\t\t * Ajax sourced data with client-side processing.\n\t\t */\n\t\t\"sLoadingRecords\": \"Loading...\",\n\n\n\t\t/**\n\t\t * Text which is displayed when the table is processing a user action\n\t\t * (usually a sort command or similar).\n\t\t */\n\t\t\"sProcessing\": \"\",\n\n\n\t\t/**\n\t\t * Details the actions that will be taken when the user types into the\n\t\t * filtering input text box. The variable \"_INPUT_\", if used in the string,\n\t\t * is replaced with the HTML text box for the filtering input allowing\n\t\t * control over where it appears in the string. If \"_INPUT_\" is not given\n\t\t * then the input box is appended to the string automatically.\n\t\t */\n\t\t\"sSearch\": \"Search:\",\n\n\n\t\t/**\n\t\t * Assign a `placeholder` attribute to the search `input` element\n\t\t *  @type string\n\t\t *  @default \n\t\t *\n\t\t *  @dtopt Language\n\t\t *  @name DataTable.defaults.language.searchPlaceholder\n\t\t */\n\t\t\"sSearchPlaceholder\": \"\",\n\n\n\t\t/**\n\t\t * All of the language information can be stored in a file on the\n\t\t * server-side, which DataTables will look up if this parameter is passed.\n\t\t * It must store the URL of the language file, which is in a JSON format,\n\t\t * and the object has the same properties as the oLanguage object in the\n\t\t * initialiser object (i.e. the above parameters). Please refer to one of\n\t\t * the example language files to see how this works in action.\n\t\t */\n\t\t\"sUrl\": \"\",\n\n\n\t\t/**\n\t\t * Text shown inside the table records when the is no information to be\n\t\t * displayed after filtering. `emptyTable` is shown when there is simply no\n\t\t * information in the table at all (regardless of filtering).\n\t\t */\n\t\t\"sZeroRecords\": \"No matching records found\"\n\t},\n\n\n\t/** The initial data order is reversed when `desc` ordering */\n\torderDescReverse: true,\n\n\n\t/**\n\t * This parameter allows you to have define the global filtering state at\n\t * initialisation time. As an object the `search` parameter must be\n\t * defined, but all other parameters are optional. When `regex` is true,\n\t * the search string will be treated as a regular expression, when false\n\t * (default) it will be treated as a straight string. When `smart`\n\t * DataTables will use it's smart filtering methods (to word match at\n\t * any point in the data), when false this will not be done.\n\t */\n\t\"oSearch\": $.extend( {}, DataTable.models.oSearch ),\n\n\n\t/**\n\t * Table and control layout. This replaces the legacy `dom` option.\n\t */\n\tlayout: {\n\t\ttopStart: 'pageLength',\n\t\ttopEnd: 'search',\n\t\tbottomStart: 'info',\n\t\tbottomEnd: 'paging'\n\t},\n\n\n\t/**\n\t * Legacy DOM layout option\n\t */\n\t\"sDom\": null,\n\n\n\t/**\n\t * Search delay option. This will throttle full table searches that use the\n\t * DataTables provided search input element (it does not effect calls to\n\t * `dt-api search()`, providing a delay before the search is made.\n\t */\n\t\"searchDelay\": null,\n\n\n\t/**\n\t * DataTables features six different built-in options for the buttons to\n\t * display for pagination control:\n\t *\n\t * * `numbers` - Page number buttons only\n\t * * `simple` - 'Previous' and 'Next' buttons only\n\t * * 'simple_numbers` - 'Previous' and 'Next' buttons, plus page numbers\n\t * * `full` - 'First', 'Previous', 'Next' and 'Last' buttons\n\t * * `full_numbers` - 'First', 'Previous', 'Next' and 'Last' buttons, plus page numbers\n\t * * `first_last_numbers` - 'First' and 'Last' buttons, plus page numbers\n\t */\n\t\"sPaginationType\": \"\",\n\n\n\t/**\n\t * Enable horizontal scrolling. When a table is too wide to fit into a\n\t * certain layout, or you have a large number of columns in the table, you\n\t * can enable x-scrolling to show the table in a viewport, which can be\n\t * scrolled. This property can be `true` which will allow the table to\n\t * scroll horizontally when needed, or any CSS unit, or a number (in which\n\t * case it will be treated as a pixel measurement). Setting as simply `true`\n\t * is recommended.\n\t */\n\t\"sScrollX\": \"\",\n\n\n\t/**\n\t * This property can be used to force a DataTable to use more width than it\n\t * might otherwise do when x-scrolling is enabled. For example if you have a\n\t * table which requires to be well spaced, this parameter is useful for\n\t * \"over-sizing\" the table, and thus forcing scrolling. This property can by\n\t * any CSS unit, or a number (in which case it will be treated as a pixel\n\t * measurement).\n\t */\n\t\"sScrollXInner\": \"\",\n\n\n\t/**\n\t * Enable vertical scrolling. Vertical scrolling will constrain the DataTable\n\t * to the given height, and enable scrolling for any data which overflows the\n\t * current viewport. This can be used as an alternative to paging to display\n\t * a lot of data in a small area (although paging and scrolling can both be\n\t * enabled at the same time). This property can be any CSS unit, or a number\n\t * (in which case it will be treated as a pixel measurement).\n\t */\n\t\"sScrollY\": \"\",\n\n\n\t/**\n\t * __Deprecated__ The functionality provided by this parameter has now been\n\t * superseded by that provided through `ajax`, which should be used instead.\n\t *\n\t * Set the HTTP method that is used to make the Ajax call for server-side\n\t * processing or Ajax sourced data.\n\t */\n\t\"sServerMethod\": \"GET\",\n\n\n\t/**\n\t * DataTables makes use of renderers when displaying HTML elements for\n\t * a table. These renderers can be added or modified by plug-ins to\n\t * generate suitable mark-up for a site. For example the Bootstrap\n\t * integration plug-in for DataTables uses a paging button renderer to\n\t * display pagination buttons in the mark-up required by Bootstrap.\n\t *\n\t * For further information about the renderers available see\n\t * DataTable.ext.renderer\n\t */\n\t\"renderer\": null,\n\n\n\t/**\n\t * Set the data property name that DataTables should use to get a row's id\n\t * to set as the `id` property in the node.\n\t */\n\t\"rowId\": \"DT_RowId\",\n\n\n\t/**\n\t * Caption value\n\t */\n\t\"caption\": null,\n\n\n\t/**\n\t * For server-side processing - use the data from the DOM for the first draw\n\t */\n\tiDeferLoading: null\n};\n\n_fnHungarianMap( DataTable.defaults );\n\n\n\n/*\n * Developer note - See note in model.defaults.js about the use of Hungarian\n * notation and camel case.\n */\n\n/**\n * Column options that can be given to DataTables at initialisation time.\n *  @namespace\n */\nDataTable.defaults.column = {\n\t/**\n\t * Define which column(s) an order will occur on for this column. This\n\t * allows a column's ordering to take multiple columns into account when\n\t * doing a sort or use the data from a different column. For example first\n\t * name / last name columns make sense to do a multi-column sort over the\n\t * two columns.\n\t */\n\t\"aDataSort\": null,\n\t\"iDataSort\": -1,\n\n\tariaTitle: '',\n\n\n\t/**\n\t * You can control the default ordering direction, and even alter the\n\t * behaviour of the sort handler (i.e. only allow ascending ordering etc)\n\t * using this parameter.\n\t */\n\t\"asSorting\": [ 'asc', 'desc', '' ],\n\n\n\t/**\n\t * Enable or disable filtering on the data in this column.\n\t */\n\t\"bSearchable\": true,\n\n\n\t/**\n\t * Enable or disable ordering on this column.\n\t */\n\t\"bSortable\": true,\n\n\n\t/**\n\t * Enable or disable the display of this column.\n\t */\n\t\"bVisible\": true,\n\n\n\t/**\n\t * Developer definable function that is called whenever a cell is created (Ajax source,\n\t * etc) or processed for input (DOM source). This can be used as a compliment to mRender\n\t * allowing you to modify the DOM element (add background colour for example) when the\n\t * element is available.\n\t */\n\t\"fnCreatedCell\": null,\n\n\n\t/**\n\t * This property can be used to read data from any data source property,\n\t * including deeply nested objects / properties. `data` can be given in a\n\t * number of different ways which effect its behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object. Note that\n\t *      function notation is recommended for use in `render` rather than\n\t *      `data` as it is much simpler to use as a renderer.\n\t * * `null` - use the original data source for the row rather than plucking\n\t *   data directly from it. This action has effects on two other\n\t *   initialisation options:\n\t *    * `defaultContent` - When null is given as the `data` option and\n\t *      `defaultContent` is specified for the column, the value defined by\n\t *      `defaultContent` will be used for the cell.\n\t *    * `render` - When null is used for the `data` option and the `render`\n\t *      option is specified for the column, the whole data source for the\n\t *      row is used for the renderer.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * `{array|object}` The data source for the row\n\t *      * `{string}` The type call data requested - this will be 'set' when\n\t *        setting data or 'filter', 'display', 'type', 'sort' or undefined\n\t *        when gathering data. Note that when `undefined` is given for the\n\t *        type DataTables expects to get the raw data for the object back<\n\t *      * `{*}` Data to set when the second parameter is 'set'.\n\t *    * Return:\n\t *      * The return value from the function is not required when 'set' is\n\t *        the type of call, but otherwise the return is what will be used\n\t *        for the data requested.\n\t *\n\t * Note that `data` is a getter and setter option. If you just require\n\t * formatting of data for output, you will likely want to use `render` which\n\t * is simply a getter and thus simpler to use.\n\t *\n\t * Note that prior to DataTables 1.9.2 `data` was called `mDataProp`. The\n\t * name change reflects the flexibility of this property and is consistent\n\t * with the naming of mRender. If 'mDataProp' is given, then it will still\n\t * be used by DataTables, as it automatically maps the old name to the new\n\t * if required.\n\t */\n\t\"mData\": null,\n\n\n\t/**\n\t * This property is the rendering partner to `data` and it is suggested that\n\t * when you want to manipulate data for display (including filtering,\n\t * sorting etc) without altering the underlying data for the table, use this\n\t * property. `render` can be considered to be the the read only companion to\n\t * `data` which is read / write (then as such more complex). Like `data`\n\t * this option can be given in a number of different ways to effect its\n\t * behaviour:\n\t *\n\t * * `integer` - treated as an array index for the data source. This is the\n\t *   default that DataTables uses (incrementally increased for each column).\n\t * * `string` - read an object property from the data source. There are\n\t *   three 'special' options that can be used in the string to alter how\n\t *   DataTables reads the data from the source object:\n\t *    * `.` - Dotted Javascript notation. Just as you use a `.` in\n\t *      Javascript to read from nested objects, so to can the options\n\t *      specified in `data`. For example: `browser.version` or\n\t *      `browser.name`. If your object parameter name contains a period, use\n\t *      `\\\\` to escape it - i.e. `first\\\\.name`.\n\t *    * `[]` - Array notation. DataTables can automatically combine data\n\t *      from and array source, joining the data with the characters provided\n\t *      between the two brackets. For example: `name[, ]` would provide a\n\t *      comma-space separated list from the source array. If no characters\n\t *      are provided between the brackets, the original array source is\n\t *      returned.\n\t *    * `()` - Function notation. Adding `()` to the end of a parameter will\n\t *      execute a function of the name given. For example: `browser()` for a\n\t *      simple function on the data source, `browser.version()` for a\n\t *      function in a nested property or even `browser().version` to get an\n\t *      object property if the function called returns an object.\n\t * * `object` - use different data for the different data types requested by\n\t *   DataTables ('filter', 'display', 'type' or 'sort'). The property names\n\t *   of the object is the data type the property refers to and the value can\n\t *   defined using an integer, string or function using the same rules as\n\t *   `render` normally does. Note that an `_` option _must_ be specified.\n\t *   This is the default value to use if you haven't specified a value for\n\t *   the data type requested by DataTables.\n\t * * `function` - the function given will be executed whenever DataTables\n\t *   needs to set or get the data for a cell in the column. The function\n\t *   takes three parameters:\n\t *    * Parameters:\n\t *      * {array|object} The data source for the row (based on `data`)\n\t *      * {string} The type call data requested - this will be 'filter',\n\t *        'display', 'type' or 'sort'.\n\t *      * {array|object} The full data source for the row (not based on\n\t *        `data`)\n\t *    * Return:\n\t *      * The return value from the function is what will be used for the\n\t *        data requested.\n\t */\n\t\"mRender\": null,\n\n\n\t/**\n\t * Change the cell type created for the column - either TD cells or TH cells. This\n\t * can be useful as TH cells have semantic meaning in the table body, allowing them\n\t * to act as a header for a row (you may wish to add scope='row' to the TH elements).\n\t */\n\t\"sCellType\": \"td\",\n\n\n\t/**\n\t * Class to give to each cell in this column.\n\t */\n\t\"sClass\": \"\",\n\n\t/**\n\t * When DataTables calculates the column widths to assign to each column,\n\t * it finds the longest string in each column and then constructs a\n\t * temporary table and reads the widths from that. The problem with this\n\t * is that \"mmm\" is much wider then \"iiii\", but the latter is a longer\n\t * string - thus the calculation can go wrong (doing it properly and putting\n\t * it into an DOM object and measuring that is horribly(!) slow). Thus as\n\t * a \"work around\" we provide this option. It will append its value to the\n\t * text that is found to be the longest string for the column - i.e. padding.\n\t * Generally you shouldn't need this!\n\t */\n\t\"sContentPadding\": \"\",\n\n\n\t/**\n\t * Allows a default value to be given for a column's data, and will be used\n\t * whenever a null data source is encountered (this can be because `data`\n\t * is set to null, or because the data source itself is null).\n\t */\n\t\"sDefaultContent\": null,\n\n\n\t/**\n\t * This parameter is only used in DataTables' server-side processing. It can\n\t * be exceptionally useful to know what columns are being displayed on the\n\t * client side, and to map these to database fields. When defined, the names\n\t * also allow DataTables to reorder information from the server if it comes\n\t * back in an unexpected order (i.e. if you switch your columns around on the\n\t * client-side, your server-side code does not also need updating).\n\t */\n\t\"sName\": \"\",\n\n\n\t/**\n\t * Defines a data source type for the ordering which can be used to read\n\t * real-time information from the table (updating the internally cached\n\t * version) prior to ordering. This allows ordering to occur on user\n\t * editable elements such as form inputs.\n\t */\n\t\"sSortDataType\": \"std\",\n\n\n\t/**\n\t * The title of this column.\n\t */\n\t\"sTitle\": null,\n\n\n\t/**\n\t * The type allows you to specify how the data for this column will be\n\t * ordered. Four types (string, numeric, date and html (which will strip\n\t * HTML tags before ordering)) are currently available. Note that only date\n\t * formats understood by Javascript's Date() object will be accepted as type\n\t * date. For example: \"Mar 26, 2008 5:03 PM\". May take the values: 'string',\n\t * 'numeric', 'date' or 'html' (by default). Further types can be adding\n\t * through plug-ins.\n\t */\n\t\"sType\": null,\n\n\n\t/**\n\t * Defining the width of the column, this parameter may take any CSS value\n\t * (3em, 20px etc). DataTables applies 'smart' widths to columns which have not\n\t * been given a specific width through this interface ensuring that the table\n\t * remains readable.\n\t */\n\t\"sWidth\": null\n};\n\n_fnHungarianMap( DataTable.defaults.column );\n\n\n\n/**\n * DataTables settings object - this holds all the information needed for a\n * given table, including configuration, data and current application of the\n * table options. DataTables does not have a single instance for each DataTable\n * with the settings attached to that instance, but rather instances of the\n * DataTable \"class\" are created on-the-fly as needed (typically by a\n * $().dataTable() call) and the settings object is then applied to that\n * instance.\n *\n * Note that this object is related to {@link DataTable.defaults} but this\n * one is the internal data store for DataTables's cache of columns. It should\n * NOT be manipulated outside of DataTables. Any configuration should be done\n * through the initialisation options.\n */\nDataTable.models.oSettings = {\n\t/**\n\t * Primary features of DataTables and their enablement state.\n\t */\n\t\"oFeatures\": {\n\n\t\t/**\n\t\t * Flag to say if DataTables should automatically try to calculate the\n\t\t * optimum table and columns widths (true) or not (false).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bAutoWidth\": null,\n\n\t\t/**\n\t\t * Delay the creation of TR and TD elements until they are actually\n\t\t * needed by a driven page draw. This can give a significant speed\n\t\t * increase for Ajax source and Javascript source data, but makes no\n\t\t * difference at all for DOM and server-side processing tables.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bDeferRender\": null,\n\n\t\t/**\n\t\t * Enable filtering on the table or not. Note that if this is disabled\n\t\t * then there is no filtering at all on the table, including fnFilter.\n\t\t * To just remove the filtering input use sDom and remove the 'f' option.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bFilter\": null,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bInfo\": true,\n\n\t\t/**\n\t\t * Used only for compatiblity with DT1\n\t\t * @deprecated\n\t\t */\n\t\t\"bLengthChange\": true,\n\n\t\t/**\n\t\t * Pagination enabled or not. Note that if this is disabled then length\n\t\t * changing must also be disabled.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bPaginate\": null,\n\n\t\t/**\n\t\t * Processing indicator enable flag whenever DataTables is enacting a\n\t\t * user request - typically an Ajax request for server-side processing.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bProcessing\": null,\n\n\t\t/**\n\t\t * Server-side processing enabled flag - when enabled DataTables will\n\t\t * get all data from the server for every draw - there is no filtering,\n\t\t * sorting or paging done on the client-side.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bServerSide\": null,\n\n\t\t/**\n\t\t * Sorting enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSort\": null,\n\n\t\t/**\n\t\t * Multi-column sorting\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortMulti\": null,\n\n\t\t/**\n\t\t * Apply a class to the columns which are being sorted to provide a\n\t\t * visual highlight or not. This can slow things down when enabled since\n\t\t * there is a lot of DOM interaction.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bSortClasses\": null,\n\n\t\t/**\n\t\t * State saving enablement flag.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bStateSave\": null\n\t},\n\n\n\t/**\n\t * Scrolling settings for a table.\n\t */\n\t\"oScroll\": {\n\t\t/**\n\t\t * When the table is shorter in height than sScrollY, collapse the\n\t\t * table container down to the height of the table (when true).\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"bCollapse\": null,\n\n\t\t/**\n\t\t * Width of the scrollbar for the web-browser's platform. Calculated\n\t\t * during table initialisation.\n\t\t */\n\t\t\"iBarWidth\": 0,\n\n\t\t/**\n\t\t * Viewport width for horizontal scrolling. Horizontal scrolling is\n\t\t * disabled if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sX\": null,\n\n\t\t/**\n\t\t * Width to expand the table to when using x-scrolling. Typically you\n\t\t * should not need to use this.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t *  @deprecated\n\t\t */\n\t\t\"sXInner\": null,\n\n\t\t/**\n\t\t * Viewport height for vertical scrolling. Vertical scrolling is disabled\n\t\t * if an empty string.\n\t\t * Note that this parameter will be set by the initialisation routine. To\n\t\t * set a default use {@link DataTable.defaults}.\n\t\t */\n\t\t\"sY\": null\n\t},\n\n\t/**\n\t * Language information for the table.\n\t */\n\t\"oLanguage\": {\n\t\t/**\n\t\t * Information callback function. See\n\t\t * {@link DataTable.defaults.fnInfoCallback}\n\t\t */\n\t\t\"fnInfoCallback\": null\n\t},\n\n\t/**\n\t * Browser support parameters\n\t */\n\t\"oBrowser\": {\n\t\t/**\n\t\t * Determine if the vertical scrollbar is on the right or left of the\n\t\t * scrolling container - needed for rtl language layout, although not\n\t\t * all browsers move the scrollbar (Safari).\n\t\t */\n\t\t\"bScrollbarLeft\": false,\n\n\t\t/**\n\t\t * Browser scrollbar width\n\t\t */\n\t\t\"barWidth\": 0\n\t},\n\n\n\t\"ajax\": null,\n\n\n\t/**\n\t * Array referencing the nodes which are used for the features. The\n\t * parameters of this object match what is allowed by sDom - i.e.\n\t *   <ul>\n\t *     <li>'l' - Length changing</li>\n\t *     <li>'f' - Filtering input</li>\n\t *     <li>'t' - The table!</li>\n\t *     <li>'i' - Information</li>\n\t *     <li>'p' - Pagination</li>\n\t *     <li>'r' - pRocessing</li>\n\t *   </ul>\n\t */\n\t\"aanFeatures\": [],\n\n\t/**\n\t * Store data information - see {@link DataTable.models.oRow} for detailed\n\t * information.\n\t */\n\t\"aoData\": [],\n\n\t/**\n\t * Array of indexes which are in the current display (after filtering etc)\n\t */\n\t\"aiDisplay\": [],\n\n\t/**\n\t * Array of indexes for display - no filtering\n\t */\n\t\"aiDisplayMaster\": [],\n\n\t/**\n\t * Map of row ids to data indexes\n\t */\n\t\"aIds\": {},\n\n\t/**\n\t * Store information about each column that is in use\n\t */\n\t\"aoColumns\": [],\n\n\t/**\n\t * Store information about the table's header\n\t */\n\t\"aoHeader\": [],\n\n\t/**\n\t * Store information about the table's footer\n\t */\n\t\"aoFooter\": [],\n\n\t/**\n\t * Store the applied global search information in case we want to force a\n\t * research or compare the old search to a new one.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"oPreviousSearch\": {},\n\n\t/**\n\t * Store for named searches\n\t */\n\tsearchFixed: {},\n\n\t/**\n\t * Store the applied search for each column - see\n\t * {@link DataTable.models.oSearch} for the format that is used for the\n\t * filtering information for each column.\n\t */\n\t\"aoPreSearchCols\": [],\n\n\t/**\n\t * Sorting that is applied to the table. Note that the inner arrays are\n\t * used in the following manner:\n\t * <ul>\n\t *   <li>Index 0 - column number</li>\n\t *   <li>Index 1 - current sorting direction</li>\n\t * </ul>\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSorting\": null,\n\n\t/**\n\t * Sorting that is always applied to the table (i.e. prefixed in front of\n\t * aaSorting).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aaSortingFixed\": [],\n\n\t/**\n\t * If restoring a table - we should restore its width\n\t */\n\t\"sDestroyWidth\": 0,\n\n\t/**\n\t * Callback functions array for every time a row is inserted (i.e. on a draw).\n\t */\n\t\"aoRowCallback\": [],\n\n\t/**\n\t * Callback functions for the header on each draw.\n\t */\n\t\"aoHeaderCallback\": [],\n\n\t/**\n\t * Callback function for the footer on each draw.\n\t */\n\t\"aoFooterCallback\": [],\n\n\t/**\n\t * Array of callback functions for draw callback functions\n\t */\n\t\"aoDrawCallback\": [],\n\n\t/**\n\t * Array of callback functions for row created function\n\t */\n\t\"aoRowCreatedCallback\": [],\n\n\t/**\n\t * Callback functions for just before the table is redrawn. A return of\n\t * false will be used to cancel the draw.\n\t */\n\t\"aoPreDrawCallback\": [],\n\n\t/**\n\t * Callback functions for when the table has been initialised.\n\t */\n\t\"aoInitComplete\": [],\n\n\n\t/**\n\t * Callbacks for modifying the settings to be stored for state saving, prior to\n\t * saving state.\n\t */\n\t\"aoStateSaveParams\": [],\n\n\t/**\n\t * Callbacks for modifying the settings that have been stored for state saving\n\t * prior to using the stored values to restore the state.\n\t */\n\t\"aoStateLoadParams\": [],\n\n\t/**\n\t * Callbacks for operating on the settings object once the saved state has been\n\t * loaded\n\t */\n\t\"aoStateLoaded\": [],\n\n\t/**\n\t * Cache the table ID for quick access\n\t */\n\t\"sTableId\": \"\",\n\n\t/**\n\t * The TABLE node for the main table\n\t */\n\t\"nTable\": null,\n\n\t/**\n\t * Permanent ref to the thead element\n\t */\n\t\"nTHead\": null,\n\n\t/**\n\t * Permanent ref to the tfoot element - if it exists\n\t */\n\t\"nTFoot\": null,\n\n\t/**\n\t * Permanent ref to the tbody element\n\t */\n\t\"nTBody\": null,\n\n\t/**\n\t * Cache the wrapper node (contains all DataTables controlled elements)\n\t */\n\t\"nTableWrapper\": null,\n\n\t/**\n\t * Indicate if all required information has been read in\n\t */\n\t\"bInitialised\": false,\n\n\t/**\n\t * Information about open rows. Each object in the array has the parameters\n\t * 'nTr' and 'nParent'\n\t */\n\t\"aoOpenRows\": [],\n\n\t/**\n\t * Dictate the positioning of DataTables' control elements - see\n\t * {@link DataTable.model.oInit.sDom}.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sDom\": null,\n\n\t/**\n\t * Search delay (in mS)\n\t */\n\t\"searchDelay\": null,\n\n\t/**\n\t * Which type of pagination should be used.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sPaginationType\": \"two_button\",\n\n\t/**\n\t * Number of paging controls on the page. Only used for backwards compatibility\n\t */\n\tpagingControls: 0,\n\n\t/**\n\t * The state duration (for `stateSave`) in seconds.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"iStateDuration\": 0,\n\n\t/**\n\t * Array of callback functions for state saving. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the JSON string to save that has been thus far created. Returns\n\t *       a JSON string to be inserted into a json object\n\t *       (i.e. '\"param\": [ 0, 1, 2]')</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateSave\": [],\n\n\t/**\n\t * Array of callback functions for state loading. Each array element is an\n\t * object with the following parameters:\n\t *   <ul>\n\t *     <li>function:fn - function to call. Takes two parameters, oSettings\n\t *       and the object stored. May return false to cancel state loading</li>\n\t *     <li>string:sName - name of callback</li>\n\t *   </ul>\n\t */\n\t\"aoStateLoad\": [],\n\n\t/**\n\t * State that was saved. Useful for back reference\n\t */\n\t\"oSavedState\": null,\n\n\t/**\n\t * State that was loaded. Useful for back reference\n\t */\n\t\"oLoadedState\": null,\n\n\t/**\n\t * Note if draw should be blocked while getting data\n\t */\n\t\"bAjaxDataGet\": true,\n\n\t/**\n\t * The last jQuery XHR object that was used for server-side data gathering.\n\t * This can be used for working with the XHR information in one of the\n\t * callbacks\n\t */\n\t\"jqXHR\": null,\n\n\t/**\n\t * JSON returned from the server in the last Ajax request\n\t */\n\t\"json\": undefined,\n\n\t/**\n\t * Data submitted as part of the last Ajax request\n\t */\n\t\"oAjaxData\": undefined,\n\n\t/**\n\t * Send the XHR HTTP method - GET or POST (could be PUT or DELETE if\n\t * required).\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"sServerMethod\": null,\n\n\t/**\n\t * Format numbers for display.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"fnFormatNumber\": null,\n\n\t/**\n\t * List of options that can be used for the user selectable length menu.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"aLengthMenu\": null,\n\n\t/**\n\t * Counter for the draws that the table does. Also used as a tracker for\n\t * server-side processing\n\t */\n\t\"iDraw\": 0,\n\n\t/**\n\t * Indicate if a redraw is being done - useful for Ajax\n\t */\n\t\"bDrawing\": false,\n\n\t/**\n\t * Draw index (iDraw) of the last error when parsing the returned data\n\t */\n\t\"iDrawError\": -1,\n\n\t/**\n\t * Paging display length\n\t */\n\t\"_iDisplayLength\": 10,\n\n\t/**\n\t * Paging start point - aiDisplay index\n\t */\n\t\"_iDisplayStart\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the result set\n\t * (i.e. before filtering), Use fnRecordsTotal rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsTotal\": 0,\n\n\t/**\n\t * Server-side processing - number of records in the current display set\n\t * (i.e. after filtering). Use fnRecordsDisplay rather than\n\t * this property to get the value of the number of records, regardless of\n\t * the server-side processing setting.\n\t */\n\t\"_iRecordsDisplay\": 0,\n\n\t/**\n\t * The classes to use for the table\n\t */\n\t\"oClasses\": {},\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if filtering has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bFiltered\": false,\n\n\t/**\n\t * Flag attached to the settings object so you can check in the draw\n\t * callback if sorting has been done in the draw. Deprecated in favour of\n\t * events.\n\t *  @deprecated\n\t */\n\t\"bSorted\": false,\n\n\t/**\n\t * Indicate that if multiple rows are in the header and there is more than\n\t * one unique cell per column, if the top one (true) or bottom one (false)\n\t * should be used for sorting / title by DataTables.\n\t * Note that this parameter will be set by the initialisation routine. To\n\t * set a default use {@link DataTable.defaults}.\n\t */\n\t\"bSortCellsTop\": null,\n\n\t/**\n\t * Initialisation object that is used for the table\n\t */\n\t\"oInit\": null,\n\n\t/**\n\t * Destroy callback functions - for plug-ins to attach themselves to the\n\t * destroy so they can clean up markup and events.\n\t */\n\t\"aoDestroyCallback\": [],\n\n\n\t/**\n\t * Get the number of records in the current record set, before filtering\n\t */\n\t\"fnRecordsTotal\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsTotal * 1 :\n\t\t\tthis.aiDisplayMaster.length;\n\t},\n\n\t/**\n\t * Get the number of records in the current record set, after filtering\n\t */\n\t\"fnRecordsDisplay\": function ()\n\t{\n\t\treturn _fnDataSource( this ) == 'ssp' ?\n\t\t\tthis._iRecordsDisplay * 1 :\n\t\t\tthis.aiDisplay.length;\n\t},\n\n\t/**\n\t * Get the display end point - aiDisplay index\n\t */\n\t\"fnDisplayEnd\": function ()\n\t{\n\t\tvar\n\t\t\tlen      = this._iDisplayLength,\n\t\t\tstart    = this._iDisplayStart,\n\t\t\tcalc     = start + len,\n\t\t\trecords  = this.aiDisplay.length,\n\t\t\tfeatures = this.oFeatures,\n\t\t\tpaginate = features.bPaginate;\n\n\t\tif ( features.bServerSide ) {\n\t\t\treturn paginate === false || len === -1 ?\n\t\t\t\tstart + records :\n\t\t\t\tMath.min( start+len, this._iRecordsDisplay );\n\t\t}\n\t\telse {\n\t\t\treturn ! paginate || calc>records || len===-1 ?\n\t\t\t\trecords :\n\t\t\t\tcalc;\n\t\t}\n\t},\n\n\t/**\n\t * The DataTables object for this table\n\t */\n\t\"oInstance\": null,\n\n\t/**\n\t * Unique identifier for each instance of the DataTables object. If there\n\t * is an ID on the table node, then it takes that value, otherwise an\n\t * incrementing internal counter is used.\n\t */\n\t\"sInstance\": null,\n\n\t/**\n\t * tabindex attribute value that is added to DataTables control elements, allowing\n\t * keyboard navigation of the table and its controls.\n\t */\n\t\"iTabIndex\": 0,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollHead\": null,\n\n\t/**\n\t * DIV container for the footer scrolling table if scrolling\n\t */\n\t\"nScrollFoot\": null,\n\n\t/**\n\t * Last applied sort\n\t */\n\t\"aLastSort\": [],\n\n\t/**\n\t * Stored plug-in instances\n\t */\n\t\"oPlugins\": {},\n\n\t/**\n\t * Function used to get a row's id from the row's data\n\t */\n\t\"rowIdFn\": null,\n\n\t/**\n\t * Data location where to store a row's id\n\t */\n\t\"rowId\": null,\n\n\tcaption: '',\n\n\tcaptionNode: null,\n\n\tcolgroup: null,\n\n\t/** Delay loading of data */\n\tdeferLoading: null,\n\n\t/** Allow auto type detection */\n\ttypeDetect: true\n};\n\n/**\n * Extension object for DataTables that is used to provide all extension\n * options.\n *\n * Note that the `DataTable.ext` object is available through\n * `jQuery.fn.dataTable.ext` where it may be accessed and manipulated. It is\n * also aliased to `jQuery.fn.dataTableExt` for historic reasons.\n *  @namespace\n *  @extends DataTable.models.ext\n */\n\n\nvar extPagination = DataTable.ext.pager;\n\n// Paging buttons configuration\n$.extend( extPagination, {\n\tsimple: function () {\n\t\treturn [ 'previous', 'next' ];\n\t},\n\n\tfull: function () {\n\t\treturn [ 'first', 'previous', 'next', 'last' ];\n\t},\n\n\tnumbers: function () {\n\t\treturn [ 'numbers' ];\n\t},\n\n\tsimple_numbers: function () {\n\t\treturn [ 'previous', 'numbers', 'next' ];\n\t},\n\n\tfull_numbers: function () {\n\t\treturn [ 'first', 'previous', 'numbers', 'next', 'last' ];\n\t},\n\n\tfirst_last: function () {\n\t\treturn ['first', 'last'];\n\t},\n\n\tfirst_last_numbers: function () {\n\t\treturn ['first', 'numbers', 'last'];\n\t},\n\n\t// For testing and plug-ins to use\n\t_numbers: _pagingNumbers,\n\n\t// Number of number buttons - legacy, use `numbers` option for paging feature\n\tnumbers_length: 7\n} );\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tpagingButton: {\n\t\t_: function (settings, buttonType, content, active, disabled) {\n\t\t\tvar classes = settings.oClasses.paging;\n\t\t\tvar btnClasses = [classes.button];\n\t\t\tvar btn;\n\n\t\t\tif (active) {\n\t\t\t\tbtnClasses.push(classes.active);\n\t\t\t}\n\n\t\t\tif (disabled) {\n\t\t\t\tbtnClasses.push(classes.disabled)\n\t\t\t}\n\n\t\t\tif (buttonType === 'ellipsis') {\n\t\t\t\tbtn = $('<span class=\"ellipsis\"></span>').html(content)[0];\n\t\t\t}\n\t\t\telse {\n\t\t\t\tbtn = $('<button>', {\n\t\t\t\t\tclass: btnClasses.join(' '),\n\t\t\t\t\trole: 'link',\n\t\t\t\t\ttype: 'button'\n\t\t\t\t}).html(content);\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tdisplay: btn,\n\t\t\t\tclicker: btn\n\t\t\t}\n\t\t}\n\t},\n\n\tpagingContainer: {\n\t\t_: function (settings, buttons) {\n\t\t\t// No wrapping element - just append directly to the host\n\t\t\treturn buttons;\n\t\t}\n\t}\n} );\n\n// Common function to remove new lines, strip HTML and diacritic control\nvar _filterString = function (stripHtml, normalize) {\n\treturn function (str) {\n\t\tif (_empty(str) || typeof str !== 'string') {\n\t\t\treturn str;\n\t\t}\n\n\t\tstr = str.replace( _re_new_lines, \" \" );\n\n\t\tif (stripHtml) {\n\t\t\tstr = _stripHtml(str);\n\t\t}\n\n\t\tif (normalize) {\n\t\t\tstr = _normalize(str, false);\n\t\t}\n\n\t\treturn str;\n\t};\n}\n\n/*\n * Public helper functions. These aren't used internally by DataTables, or\n * called by any of the options passed into DataTables, but they can be used\n * externally by developers working with DataTables. They are helper functions\n * to make working with DataTables a little bit easier.\n */\n\n/**\n * Common logic for moment, luxon or a date action.\n *\n * Happens after __mldObj, so don't need to call `resolveWindowsLibs` again\n */\nfunction __mld( dtLib, momentFn, luxonFn, dateFn, arg1 ) {\n\tif (__moment) {\n\t\treturn dtLib[momentFn]( arg1 );\n\t}\n\telse if (__luxon) {\n\t\treturn dtLib[luxonFn]( arg1 );\n\t}\n\t\n\treturn dateFn ? dtLib[dateFn]( arg1 ) : dtLib;\n}\n\n\nvar __mlWarning = false;\nvar __luxon; // Can be assigned in DateTeble.use()\nvar __moment; // Can be assigned in DateTeble.use()\n\n/**\n * \n */\nfunction resolveWindowLibs() {\n\tif (window.luxon && ! __luxon) {\n\t\t__luxon = window.luxon;\n\t}\n\t\n\tif (window.moment && ! __moment) {\n\t\t__moment = window.moment;\n\t}\n}\n\nfunction __mldObj (d, format, locale) {\n\tvar dt;\n\n\tresolveWindowLibs();\n\n\tif (__moment) {\n\t\tdt = __moment.utc( d, format, locale, true );\n\n\t\tif (! dt.isValid()) {\n\t\t\treturn null;\n\t\t}\n\t}\n\telse if (__luxon) {\n\t\tdt = format && typeof d === 'string'\n\t\t\t? __luxon.DateTime.fromFormat( d, format )\n\t\t\t: __luxon.DateTime.fromISO( d );\n\n\t\tif (! dt.isValid) {\n\t\t\treturn null;\n\t\t}\n\n\t\tdt.setLocale(locale);\n\t}\n\telse if (! format) {\n\t\t// No format given, must be ISO\n\t\tdt = new Date(d);\n\t}\n\telse {\n\t\tif (! __mlWarning) {\n\t\t\talert('DataTables warning: Formatted date without Moment.js or Luxon - https://datatables.net/tn/17');\n\t\t}\n\n\t\t__mlWarning = true;\n\t}\n\n\treturn dt;\n}\n\n// Wrapper for date, datetime and time which all operate the same way with the exception of\n// the output string for auto locale support\nfunction __mlHelper (localeString) {\n\treturn function ( from, to, locale, def ) {\n\t\t// Luxon and Moment support\n\t\t// Argument shifting\n\t\tif ( arguments.length === 0 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = null; // means toLocaleString\n\t\t\tfrom = null; // means iso8601\n\t\t}\n\t\telse if ( arguments.length === 1 ) {\n\t\t\tlocale = 'en';\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\t\telse if ( arguments.length === 2 ) {\n\t\t\tlocale = to;\n\t\t\tto = from;\n\t\t\tfrom = null;\n\t\t}\n\n\t\tvar typeName = 'datetime' + (to ? '-' + to : '');\n\n\t\t// Add type detection and sorting specific to this date format - we need to be able to identify\n\t\t// date type columns as such, rather than as numbers in extensions. Hence the need for this.\n\t\tif (! DataTable.ext.type.order[typeName + '-pre']) {\n\t\t\tDataTable.type(typeName, {\n\t\t\t\tdetect: function (d) {\n\t\t\t\t\t// The renderer will give the value to type detect as the type!\n\t\t\t\t\treturn d === typeName ? typeName : false;\n\t\t\t\t},\n\t\t\t\torder: {\n\t\t\t\t\tpre: function (d) {\n\t\t\t\t\t\t// The renderer gives us Moment, Luxon or Date obects for the sorting, all of which have a\n\t\t\t\t\t\t// `valueOf` which gives milliseconds epoch\n\t\t\t\t\t\treturn d.valueOf();\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tclassName: 'dt-right'\n\t\t\t});\n\t\t}\n\t\n\t\treturn function ( d, type ) {\n\t\t\t// Allow for a default value\n\t\t\tif (d === null || d === undefined) {\n\t\t\t\tif (def === '--now') {\n\t\t\t\t\t// We treat everything as UTC further down, so no changes are\n\t\t\t\t\t// made, as such need to get the local date / time as if it were\n\t\t\t\t\t// UTC\n\t\t\t\t\tvar local = new Date();\n\t\t\t\t\td = new Date( Date.UTC(\n\t\t\t\t\t\tlocal.getFullYear(), local.getMonth(), local.getDate(),\n\t\t\t\t\t\tlocal.getHours(), local.getMinutes(), local.getSeconds()\n\t\t\t\t\t) );\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\td = '';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (type === 'type') {\n\t\t\t\t// Typing uses the type name for fast matching\n\t\t\t\treturn typeName;\n\t\t\t}\n\n\t\t\tif (d === '') {\n\t\t\t\treturn type !== 'sort'\n\t\t\t\t\t? ''\n\t\t\t\t\t: __mldObj('0000-01-01 00:00:00', null, locale);\n\t\t\t}\n\n\t\t\t// Shortcut. If `from` and `to` are the same, we are using the renderer to\n\t\t\t// format for ordering, not display - its already in the display format.\n\t\t\tif ( to !== null && from === to && type !== 'sort' && type !== 'type' && ! (d instanceof Date) ) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tvar dt = __mldObj(d, from, locale);\n\n\t\t\tif (dt === null) {\n\t\t\t\treturn d;\n\t\t\t}\n\n\t\t\tif (type === 'sort') {\n\t\t\t\treturn dt;\n\t\t\t}\n\t\t\t\n\t\t\tvar formatted = to === null\n\t\t\t\t? __mld(dt, 'toDate', 'toJSDate', '')[localeString]()\n\t\t\t\t: __mld(dt, 'format', 'toFormat', 'toISOString', to);\n\n\t\t\t// XSS protection\n\t\t\treturn type === 'display' ?\n\t\t\t\t_escapeHtml( formatted ) :\n\t\t\t\tformatted;\n\t\t};\n\t}\n}\n\n// Based on locale, determine standard number formatting\n// Fallback for legacy browsers is US English\nvar __thousands = ',';\nvar __decimal = '.';\n\nif (window.Intl !== undefined) {\n\ttry {\n\t\tvar num = new Intl.NumberFormat().formatToParts(100000.1);\n\t\n\t\tfor (var i=0 ; i<num.length ; i++) {\n\t\t\tif (num[i].type === 'group') {\n\t\t\t\t__thousands = num[i].value;\n\t\t\t}\n\t\t\telse if (num[i].type === 'decimal') {\n\t\t\t\t__decimal = num[i].value;\n\t\t\t}\n\t\t}\n\t}\n\tcatch (e) {\n\t\t// noop\n\t}\n}\n\n// Formatted date time detection - use by declaring the formats you are going to use\nDataTable.datetime = function ( format, locale ) {\n\tvar typeName = 'datetime-' + format;\n\n\tif (! locale) {\n\t\tlocale = 'en';\n\t}\n\n\tif (! DataTable.ext.type.order[typeName]) {\n\t\tDataTable.type(typeName, {\n\t\t\tdetect: function (d) {\n\t\t\t\tvar dt = __mldObj(d, format, locale);\n\t\t\t\treturn d === '' || dt ? typeName : false;\n\t\t\t},\n\t\t\torder: {\n\t\t\t\tpre: function (d) {\n\t\t\t\t\treturn __mldObj(d, format, locale) || 0;\n\t\t\t\t}\n\t\t\t},\n\t\t\tclassName: 'dt-right'\n\t\t});\n\t}\n}\n\n/**\n * Helpers for `columns.render`.\n *\n * The options defined here can be used with the `columns.render` initialisation\n * option to provide a display renderer. The following functions are defined:\n *\n * * `moment` - Uses the MomentJS library to convert from a given format into another.\n * This renderer has three overloads:\n *   * 1 parameter:\n *     * `string` - Format to convert to (assumes input is ISO8601 and locale is `en`)\n *   * 2 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to. Assumes `en` locale\n *   * 3 parameters:\n *     * `string` - Format to convert from\n *     * `string` - Format to convert to\n *     * `string` - Locale\n * * `number` - Will format numeric data (defined by `columns.data`) for\n *   display, retaining the original unformatted data for sorting and filtering.\n *   It takes 5 parameters:\n *   * `string` - Thousands grouping separator\n *   * `string` - Decimal point indicator\n *   * `integer` - Number of decimal points to show\n *   * `string` (optional) - Prefix.\n *   * `string` (optional) - Postfix (/suffix).\n * * `text` - Escape HTML to help prevent XSS attacks. It has no optional\n *   parameters.\n *\n * @example\n *   // Column definition using the number renderer\n *   {\n *     data: \"salary\",\n *     render: $.fn.dataTable.render.number( '\\'', '.', 0, '$' )\n *   }\n *\n * @namespace\n */\nDataTable.render = {\n\tdate: __mlHelper('toLocaleDateString'),\n\tdatetime: __mlHelper('toLocaleString'),\n\ttime: __mlHelper('toLocaleTimeString'),\n\tnumber: function ( thousands, decimal, precision, prefix, postfix ) {\n\t\t// Auto locale detection\n\t\tif (thousands === null || thousands === undefined) {\n\t\t\tthousands = __thousands;\n\t\t}\n\n\t\tif (decimal === null || decimal === undefined) {\n\t\t\tdecimal = __decimal;\n\t\t}\n\n\t\treturn {\n\t\t\tdisplay: function ( d ) {\n\t\t\t\tif ( typeof d !== 'number' && typeof d !== 'string' ) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tif (d === '' || d === null) {\n\t\t\t\t\treturn d;\n\t\t\t\t}\n\n\t\t\t\tvar negative = d < 0 ? '-' : '';\n\t\t\t\tvar flo = parseFloat( d );\n\t\t\t\tvar abs = Math.abs(flo);\n\n\t\t\t\t// Scientific notation for large and small numbers\n\t\t\t\tif (abs >= 100000000000 || (abs < 0.0001 && abs !== 0) ) {\n\t\t\t\t\tvar exp = flo.toExponential(precision).split(/e\\+?/);\n\t\t\t\t\treturn exp[0] + ' x 10<sup>' + exp[1] + '</sup>';\n\t\t\t\t}\n\n\t\t\t\t// If NaN then there isn't much formatting that we can do - just\n\t\t\t\t// return immediately, escaping any HTML (this was supposed to\n\t\t\t\t// be a number after all)\n\t\t\t\tif ( isNaN( flo ) ) {\n\t\t\t\t\treturn _escapeHtml( d );\n\t\t\t\t}\n\n\t\t\t\tflo = flo.toFixed( precision );\n\t\t\t\td = Math.abs( flo );\n\n\t\t\t\tvar intPart = parseInt( d, 10 );\n\t\t\t\tvar floatPart = precision ?\n\t\t\t\t\tdecimal+(d - intPart).toFixed( precision ).substring( 2 ):\n\t\t\t\t\t'';\n\n\t\t\t\t// If zero, then can't have a negative prefix\n\t\t\t\tif (intPart === 0 && parseFloat(floatPart) === 0) {\n\t\t\t\t\tnegative = '';\n\t\t\t\t}\n\n\t\t\t\treturn negative + (prefix||'') +\n\t\t\t\t\tintPart.toString().replace(\n\t\t\t\t\t\t/\\B(?=(\\d{3})+(?!\\d))/g, thousands\n\t\t\t\t\t) +\n\t\t\t\t\tfloatPart +\n\t\t\t\t\t(postfix||'');\n\t\t\t}\n\t\t};\n\t},\n\n\ttext: function () {\n\t\treturn {\n\t\t\tdisplay: _escapeHtml,\n\t\t\tfilter: _escapeHtml\n\t\t};\n\t}\n};\n\n\nvar _extTypes = DataTable.ext.type;\n\n// Get / set type\nDataTable.type = function (name, prop, val) {\n\tif (! prop) {\n\t\treturn {\n\t\t\tclassName: _extTypes.className[name],\n\t\t\tdetect: _extTypes.detect.find(function (fn) {\n\t\t\t\treturn fn._name === name;\n\t\t\t}),\n\t\t\torder: {\n\t\t\t\tpre: _extTypes.order[name + '-pre'],\n\t\t\t\tasc: _extTypes.order[name + '-asc'],\n\t\t\t\tdesc: _extTypes.order[name + '-desc']\n\t\t\t},\n\t\t\trender: _extTypes.render[name],\n\t\t\tsearch: _extTypes.search[name]\n\t\t};\n\t}\n\n\tvar setProp = function(prop, propVal) {\n\t\t_extTypes[prop][name] = propVal;\n\t};\n\tvar setDetect = function (detect) {\n\t\t// `detect` can be a function or an object - we set a name\n\t\t// property for either - that is used for the detection\n\t\tObject.defineProperty(detect, \"_name\", {value: name});\n\n\t\tvar idx = _extTypes.detect.findIndex(function (item) {\n\t\t\treturn item._name === name;\n\t\t});\n\n\t\tif (idx === -1) {\n\t\t\t_extTypes.detect.unshift(detect);\n\t\t}\n\t\telse {\n\t\t\t_extTypes.detect.splice(idx, 1, detect);\n\t\t}\n\t};\n\tvar setOrder = function (obj) {\n\t\t_extTypes.order[name + '-pre'] = obj.pre; // can be undefined\n\t\t_extTypes.order[name + '-asc'] = obj.asc; // can be undefined\n\t\t_extTypes.order[name + '-desc'] = obj.desc; // can be undefined\n\t};\n\n\t// prop is optional\n\tif (val === undefined) {\n\t\tval = prop;\n\t\tprop = null;\n\t}\n\n\tif (prop === 'className') {\n\t\tsetProp('className', val);\n\t}\n\telse if (prop === 'detect') {\n\t\tsetDetect(val);\n\t}\n\telse if (prop === 'order') {\n\t\tsetOrder(val);\n\t}\n\telse if (prop === 'render') {\n\t\tsetProp('render', val);\n\t}\n\telse if (prop === 'search') {\n\t\tsetProp('search', val);\n\t}\n\telse if (! prop) {\n\t\tif (val.className) {\n\t\t\tsetProp('className', val.className);\n\t\t}\n\n\t\tif (val.detect !== undefined) {\n\t\t\tsetDetect(val.detect);\n\t\t}\n\n\t\tif (val.order) {\n\t\t\tsetOrder(val.order);\n\t\t}\n\n\t\tif (val.render !== undefined) {\n\t\t\tsetProp('render', val.render);\n\t\t}\n\n\t\tif (val.search !== undefined) {\n\t\t\tsetProp('search', val.search);\n\t\t}\n\t}\n}\n\n// Get a list of types\nDataTable.types = function () {\n\treturn _extTypes.detect.map(function (fn) {\n\t\treturn fn._name;\n\t});\n};\n\nvar __diacriticSort = function (a, b) {\n\ta = a !== null && a !== undefined ? a.toString().toLowerCase() : '';\n\tb = b !== null && b !== undefined ? b.toString().toLowerCase() : '';\n\n\t// Checked for `navigator.languages` support in `oneOf` so this code can't execute in old\n\t// Safari and thus can disable this check\n\t// eslint-disable-next-line compat/compat\n\treturn a.localeCompare(b, navigator.languages[0] || navigator.language, {\n\t\tnumeric: true,\n\t\tignorePunctuation: true,\n\t});\n}\n\n//\n// Built in data types\n//\n\nDataTable.type('string', {\n\tdetect: function () {\n\t\treturn 'string';\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\t// This is a little complex, but faster than always calling toString,\n\t\t\t// http://jsperf.com/tostring-v-check\n\t\t\treturn _empty(a) && typeof a !== 'boolean' ?\n\t\t\t\t'' :\n\t\t\t\ttypeof a === 'string' ?\n\t\t\t\t\ta.toLowerCase() :\n\t\t\t\t\t! a.toString ?\n\t\t\t\t\t\t'' :\n\t\t\t\t\t\ta.toString();\n\t\t}\n\t},\n\tsearch: _filterString(false, true)\n});\n\nDataTable.type('string-utf8', {\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\treturn true;\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one data point must contain a non-ASCII character\n\t\t\t// This line will also check if navigator.languages is supported or not. If not (Safari 10.0-)\n\t\t\t// this data type won't be supported.\n\t\t\t// eslint-disable-next-line compat/compat\n\t\t\treturn ! _empty( d ) && navigator.languages && typeof d === 'string' && d.match(/[^\\x00-\\x7F]/);\n\t\t}\n\t},\n\torder: {\n\t\tasc: __diacriticSort,\n\t\tdesc: function (a, b) {\n\t\t\treturn __diacriticSort(a, b) * -1;\n\t\t}\n\t},\n\tsearch: _filterString(false, true)\n});\n\n\nDataTable.type('html', {\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\treturn _empty( d ) || (typeof d === 'string' && d.indexOf('<') !== -1);\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one data point must contain a `<`\n\t\t\treturn ! _empty( d ) && typeof d === 'string' && d.indexOf('<') !== -1;\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( a ) {\n\t\t\treturn _empty(a) ?\n\t\t\t\t'' :\n\t\t\t\ta.replace ?\n\t\t\t\t\t_stripHtml(a).trim().toLowerCase() :\n\t\t\t\t\ta+'';\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('date', {\n\tclassName: 'dt-type-date',\n\tdetect: {\n\t\tallOf: function ( d ) {\n\t\t\t// V8 tries _very_ hard to make a string passed into `Date.parse()`\n\t\t\t// valid, so we need to use a regex to restrict date formats. Use a\n\t\t\t// plug-in for anything other than ISO8601 style strings\n\t\t\tif ( d && !(d instanceof Date) && ! _re_date.test(d) ) {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t\tvar parsed = Date.parse(d);\n\t\t\treturn (parsed !== null && !isNaN(parsed)) || _empty(d);\n\t\t},\n\t\toneOf: function ( d ) {\n\t\t\t// At least one entry must be a date or a string with a date\n\t\t\treturn (d instanceof Date) || (typeof d === 'string' && _re_date.test(d));\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d ) {\n\t\t\tvar ts = Date.parse( d );\n\t\t\treturn isNaN(ts) ? -Infinity : ts;\n\t\t}\n\t}\n});\n\n\nDataTable.type('html-num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true, false );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, true, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html, _re_formatted_numeric );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('html-num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, false, true );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _htmlNumeric( d, decimal, false, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_html );\n\t\t}\n\t},\n\tsearch: _filterString(true, true)\n});\n\n\nDataTable.type('num-fmt', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true, true );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, true, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function ( d, s ) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp, _re_formatted_numeric );\n\t\t}\n\t}\n});\n\n\nDataTable.type('num', {\n\tclassName: 'dt-type-numeric',\n\tdetect: {\n\t\tallOf: function ( d, settings ) {\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, false, true );\n\t\t},\n\t\toneOf: function (d, settings) {\n\t\t\t// At least one data point must contain a numeric value\n\t\t\tvar decimal = settings.oLanguage.sDecimal;\n\t\t\treturn _isNumber( d, decimal, false, false );\n\t\t}\n\t},\n\torder: {\n\t\tpre: function (d, s) {\n\t\t\tvar dp = s.oLanguage.sDecimal;\n\t\t\treturn __numericReplace( d, dp );\n\t\t}\n\t}\n});\n\n\n\n\nvar __numericReplace = function ( d, decimalPlace, re1, re2 ) {\n\tif ( d !== 0 && (!d || d === '-') ) {\n\t\treturn -Infinity;\n\t}\n\t\n\tvar type = typeof d;\n\n\tif (type === 'number' || type === 'bigint') {\n\t\treturn d;\n\t}\n\n\t// If a decimal place other than `.` is used, it needs to be given to the\n\t// function so we can detect it and replace with a `.` which is the only\n\t// decimal place Javascript recognises - it is not locale aware.\n\tif ( decimalPlace ) {\n\t\td = _numToDecimal( d, decimalPlace );\n\t}\n\n\tif ( d.replace ) {\n\t\tif ( re1 ) {\n\t\t\td = d.replace( re1, '' );\n\t\t}\n\n\t\tif ( re2 ) {\n\t\t\td = d.replace( re2, '' );\n\t\t}\n\t}\n\n\treturn d * 1;\n};\n\n\n$.extend( true, DataTable.ext.renderer, {\n\tfooter: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.tfoot.cell);\n\t\t}\n\t},\n\n\theader: {\n\t\t_: function ( settings, cell, classes ) {\n\t\t\tcell.addClass(classes.thead.cell);\n\n\t\t\tif (! settings.oFeatures.bSort) {\n\t\t\t\tcell.addClass(classes.order.none);\n\t\t\t}\n\n\t\t\tvar legacyTop = settings.bSortCellsTop;\n\t\t\tvar headerRows = cell.closest('thead').find('tr');\n\t\t\tvar rowIdx = cell.parent().index();\n\n\t\t\t// Conditions to not apply the ordering icons\n\t\t\tif (\n\t\t\t\t// Cells and rows which have the attribute to disable the icons\n\t\t\t\tcell.attr('data-dt-order') === 'disable' ||\n\t\t\t\tcell.parent().attr('data-dt-order') === 'disable' ||\n\n\t\t\t\t// Legacy support for `orderCellsTop`. If it is set, then cells\n\t\t\t\t// which are not in the top or bottom row of the header (depending\n\t\t\t\t// on the value) do not get the sorting classes applied to them\n\t\t\t\t(legacyTop === true && rowIdx !== 0) ||\n\t\t\t\t(legacyTop === false && rowIdx !== headerRows.length - 1)\n\t\t\t) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// No additional mark-up required\n\t\t\t// Attach a sort listener to update on sort - note that using the\n\t\t\t// `DT` namespace will allow the event to be removed automatically\n\t\t\t// on destroy, while the `dt` namespaced event is the one we are\n\t\t\t// listening for\n\t\t\t$(settings.nTable).on( 'order.dt.DT column-visibility.dt.DT', function ( e, ctx ) {\n\t\t\t\tif ( settings !== ctx ) { // need to check this this is the host\n\t\t\t\t\treturn;               // table, not a nested one\n\t\t\t\t}\n\n\t\t\t\tvar sorting = ctx.sortDetails;\n\n\t\t\t\tif (! sorting) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar i;\n\t\t\t\tvar orderClasses = classes.order;\n\t\t\t\tvar columns = ctx.api.columns( cell );\n\t\t\t\tvar col = settings.aoColumns[columns.flatten()[0]];\n\t\t\t\tvar orderable = columns.orderable().includes(true);\n\t\t\t\tvar ariaType = '';\n\t\t\t\tvar indexes = columns.indexes();\n\t\t\t\tvar sortDirs = columns.orderable(true).flatten();\n\t\t\t\tvar orderedColumns = _pluck(sorting, 'col');\n\n\t\t\t\tcell\n\t\t\t\t\t.removeClass(\n\t\t\t\t\t\torderClasses.isAsc +' '+\n\t\t\t\t\t\torderClasses.isDesc\n\t\t\t\t\t)\n\t\t\t\t\t.toggleClass( orderClasses.none, ! orderable )\n\t\t\t\t\t.toggleClass( orderClasses.canAsc, orderable && sortDirs.includes('asc') )\n\t\t\t\t\t.toggleClass( orderClasses.canDesc, orderable && sortDirs.includes('desc') );\n\n\t\t\t\t// Determine if all of the columns that this cell covers are included in the\n\t\t\t\t// current ordering\n\t\t\t\tvar isOrdering = true;\n\t\t\t\t\n\t\t\t\tfor (i=0; i<indexes.length; i++) {\n\t\t\t\t\tif (! orderedColumns.includes(indexes[i])) {\n\t\t\t\t\t\tisOrdering = false;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif ( isOrdering ) {\n\t\t\t\t\t// Get the ordering direction for the columns under this cell\n\t\t\t\t\t// Note that it is possible for a cell to be asc and desc sorting\n\t\t\t\t\t// (column spanning cells)\n\t\t\t\t\tvar orderDirs = columns.order();\n\n\t\t\t\t\tcell.addClass(\n\t\t\t\t\t\torderDirs.includes('asc') ? orderClasses.isAsc : '' +\n\t\t\t\t\t\torderDirs.includes('desc') ? orderClasses.isDesc : ''\n\t\t\t\t\t);\n\t\t\t\t}\n\n\t\t\t\t// Find the first visible column that has ordering applied to it - it get's\n\t\t\t\t// the aria information, as the ARIA spec says that only one column should\n\t\t\t\t// be marked with aria-sort\n\t\t\t\tvar firstVis = -1; // column index\n\n\t\t\t\tfor (i=0; i<orderedColumns.length; i++) {\n\t\t\t\t\tif (settings.aoColumns[orderedColumns[i]].bVisible) {\n\t\t\t\t\t\tfirstVis = orderedColumns[i];\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (indexes[0] == firstVis) {\n\t\t\t\t\tvar firstSort = sorting[0];\n\t\t\t\t\tvar sortOrder = col.asSorting;\n\n\t\t\t\t\tcell.attr('aria-sort', firstSort.dir === 'asc' ? 'ascending' : 'descending');\n\n\t\t\t\t\t// Determine if the next click will remove sorting or change the sort\n\t\t\t\t\tariaType = ! sortOrder[firstSort.index + 1] ? 'Remove' : 'Reverse';\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tcell.removeAttr('aria-sort');\n\t\t\t\t}\n\n\t\t\t\tcell.attr('aria-label', orderable\n\t\t\t\t\t? col.ariaTitle + ctx.api.i18n('oAria.orderable' + ariaType)\n\t\t\t\t\t: col.ariaTitle\n\t\t\t\t);\n\n\t\t\t\t// Make the headers tab-able for keyboard navigation\n\t\t\t\tif (orderable) {\n\t\t\t\t\tcell.find('.dt-column-title').attr('role', 'button');\n\t\t\t\t\tcell.attr('tabindex', 0)\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t},\n\n\tlayout: {\n\t\t_: function ( settings, container, items ) {\n\t\t\tvar classes = settings.oClasses.layout;\n\t\t\tvar row = $('<div/>')\n\t\t\t\t.attr('id', items.id || null)\n\t\t\t\t.addClass(items.className || classes.row)\n\t\t\t\t.appendTo( container );\n\n\t\t\t$.each( items, function (key, val) {\n\t\t\t\tif (key === 'id' || key === 'className') {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tvar klass = '';\n\n\t\t\t\tif (val.table) {\n\t\t\t\t\trow.addClass(classes.tableRow);\n\t\t\t\t\tklass += classes.tableCell + ' ';\n\t\t\t\t}\n\n\t\t\t\tif (key === 'start') {\n\t\t\t\t\tklass += classes.start;\n\t\t\t\t}\n\t\t\t\telse if (key === 'end') {\n\t\t\t\t\tklass += classes.end;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tklass += classes.full;\n\t\t\t\t}\n\n\t\t\t\t$('<div/>')\n\t\t\t\t\t.attr({\n\t\t\t\t\t\tid: val.id || null,\n\t\t\t\t\t\t\"class\": val.className\n\t\t\t\t\t\t\t? val.className\n\t\t\t\t\t\t\t: classes.cell + ' ' + klass\n\t\t\t\t\t})\n\t\t\t\t\t.append( val.contents )\n\t\t\t\t\t.appendTo( row );\n\t\t\t} );\n\t\t}\n\t}\n} );\n\n\nDataTable.feature = {};\n\n// Third parameter is internal only!\nDataTable.feature.register = function ( name, cb, legacy ) {\n\tDataTable.ext.features[ name ] = cb;\n\n\tif (legacy) {\n\t\t_ext.feature.push({\n\t\t\tcFeature: legacy,\n\t\t\tfnInit: cb\n\t\t});\n\t}\n};\n\nfunction _divProp(el, prop, val) {\n\tif (val) {\n\t\tel[prop] = val;\n\t}\n}\n\nDataTable.feature.register( 'div', function ( settings, opts ) {\n\tvar n = $('<div>')[0];\n\n\tif (opts) {\n\t\t_divProp(n, 'className', opts.className);\n\t\t_divProp(n, 'id', opts.id);\n\t\t_divProp(n, 'innerHTML', opts.html);\n\t\t_divProp(n, 'textContent', opts.text);\n\t}\n\n\treturn n;\n} );\n\nDataTable.feature.register( 'info', function ( settings, opts ) {\n\t// For compatibility with the legacy `info` top level option\n\tif (! settings.oFeatures.bInfo) {\n\t\treturn null;\n\t}\n\n\tvar\n\t\tlang  = settings.oLanguage,\n\t\ttid = settings.sTableId,\n\t\tn = $('<div/>', {\n\t\t\t'class': settings.oClasses.info.container,\n\t\t} );\n\n\topts = $.extend({\n\t\tcallback: lang.fnInfoCallback,\n\t\tempty: lang.sInfoEmpty,\n\t\tpostfix: lang.sInfoPostFix,\n\t\tsearch: lang.sInfoFiltered,\n\t\ttext: lang.sInfo,\n\t}, opts);\n\n\n\t// Update display on each draw\n\tsettings.aoDrawCallback.push(function (s) {\n\t\t_fnUpdateInfo(s, opts, n);\n\t});\n\n\t// For the first info display in the table, we add a callback and aria information.\n\tif (! settings._infoEl) {\n\t\tn.attr({\n\t\t\t'aria-live': 'polite',\n\t\t\tid: tid+'_info',\n\t\t\trole: 'status'\n\t\t});\n\n\t\t// Table is described by our info div\n\t\t$(settings.nTable).attr( 'aria-describedby', tid+'_info' );\n\n\t\tsettings._infoEl = n;\n\t}\n\n\treturn n;\n}, 'i' );\n\n/**\n * Update the information elements in the display\n *  @param {object} settings dataTables settings object\n *  @memberof DataTable#oApi\n */\nfunction _fnUpdateInfo ( settings, opts, node )\n{\n\tvar\n\t\tstart = settings._iDisplayStart+1,\n\t\tend   = settings.fnDisplayEnd(),\n\t\tmax   = settings.fnRecordsTotal(),\n\t\ttotal = settings.fnRecordsDisplay(),\n\t\tout   = total\n\t\t\t? opts.text\n\t\t\t: opts.empty;\n\n\tif ( total !== max ) {\n\t\t// Record set after filtering\n\t\tout += ' ' + opts.search;\n\t}\n\n\t// Convert the macros\n\tout += opts.postfix;\n\tout = _fnMacros( settings, out );\n\n\tif ( opts.callback ) {\n\t\tout = opts.callback.call( settings.oInstance,\n\t\t\tsettings, start, end, max, total, out\n\t\t);\n\t}\n\n\tnode.html( out );\n\n\t_fnCallbackFire(settings, null, 'info', [settings, node[0], out]);\n}\n\nvar __searchCounter = 0;\n\n// opts\n// - text\n// - placeholder\nDataTable.feature.register( 'search', function ( settings, opts ) {\n\t// Don't show the input if filtering isn't available on the table\n\tif (! settings.oFeatures.bFilter) {\n\t\treturn null;\n\t}\n\n\tvar classes = settings.oClasses.search;\n\tvar tableId = settings.sTableId;\n\tvar language = settings.oLanguage;\n\tvar previousSearch = settings.oPreviousSearch;\n\tvar input = '<input type=\"search\" class=\"'+classes.input+'\"/>';\n\n\topts = $.extend({\n\t\tplaceholder: language.sSearchPlaceholder,\n\t\tprocessing: false,\n\t\ttext: language.sSearch\n\t}, opts);\n\n\t// The _INPUT_ is optional - is appended if not present\n\tif (opts.text.indexOf('_INPUT_') === -1) {\n\t\topts.text += '_INPUT_';\n\t}\n\n\topts.text = _fnMacros(settings, opts.text);\n\n\t// We can put the <input> outside of the label if it is at the start or end\n\t// which helps improve accessability (not all screen readers like implicit\n\t// for elements).\n\tvar end = opts.text.match(/_INPUT_$/);\n\tvar start = opts.text.match(/^_INPUT_/);\n\tvar removed = opts.text.replace(/_INPUT_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_INPUT_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_INPUT_';\n\t}\n\n\tvar filter = $('<div>')\n\t\t.addClass(classes.container)\n\t\t.append(str.replace(/_INPUT_/, input));\n\n\t// add for and id to label and input\n\tfilter.find('label').attr('for', 'dt-search-' + __searchCounter);\n\tfilter.find('input').attr('id', 'dt-search-' + __searchCounter);\n\t__searchCounter++;\n\n\tvar searchFn = function(event) {\n\t\tvar val = this.value;\n\n\t\tif(previousSearch.return && event.key !== \"Enter\") {\n\t\t\treturn;\n\t\t}\n\n\t\t/* Now do the filter */\n\t\tif ( val != previousSearch.search ) {\n\t\t\t_fnProcessingRun(settings, opts.processing, function () {\n\t\t\t\tpreviousSearch.search = val;\n\t\t\n\t\t\t\t_fnFilterComplete( settings, previousSearch );\n\t\t\n\t\t\t\t// Need to redraw, without resorting\n\t\t\t\tsettings._iDisplayStart = 0;\n\t\t\t\t_fnDraw( settings );\n\t\t\t});\n\t\t}\n\t};\n\n\tvar searchDelay = settings.searchDelay !== null ?\n\t\tsettings.searchDelay :\n\t\t0;\n\n\tvar jqFilter = $('input', filter)\n\t\t.val( previousSearch.search )\n\t\t.attr( 'placeholder', opts.placeholder )\n\t\t.on(\n\t\t\t'keyup.DT search.DT input.DT paste.DT cut.DT',\n\t\t\tsearchDelay ?\n\t\t\t\tDataTable.util.debounce( searchFn, searchDelay ) :\n\t\t\t\tsearchFn\n\t\t)\n\t\t.on( 'mouseup.DT', function(e) {\n\t\t\t// Edge fix! Edge 17 does not trigger anything other than mouse events when clicking\n\t\t\t// on the clear icon (Edge bug 17584515). This is safe in other browsers as `searchFn`\n\t\t\t// checks the value to see if it has changed. In other browsers it won't have.\n\t\t\tsetTimeout( function () {\n\t\t\t\tsearchFn.call(jqFilter[0], e);\n\t\t\t}, 10);\n\t\t} )\n\t\t.on( 'keypress.DT', function(e) {\n\t\t\t/* Prevent form submission */\n\t\t\tif ( e.keyCode == 13 ) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t} )\n\t\t.attr('aria-controls', tableId);\n\n\t// Update the input elements whenever the table is filtered\n\t$(settings.nTable).on( 'search.dt.DT', function ( ev, s ) {\n\t\tif ( settings === s && jqFilter[0] !== document.activeElement ) {\n\t\t\tjqFilter.val( typeof previousSearch.search !== 'function'\n\t\t\t\t? previousSearch.search\n\t\t\t\t: ''\n\t\t\t);\n\t\t}\n\t} );\n\n\treturn filter;\n}, 'f' );\n\n// opts\n// - type - button configuration\n// - buttons - number of buttons to show - must be odd\nDataTable.feature.register( 'paging', function ( settings, opts ) {\n\t// Don't show the paging input if the table doesn't have paging enabled\n\tif (! settings.oFeatures.bPaginate) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tbuttons: DataTable.ext.pager.numbers_length,\n\t\ttype: settings.sPaginationType,\n\t\tboundaryNumbers: true,\n\t\tfirstLast: true,\n\t\tpreviousNext: true,\n\t\tnumbers: true\n\t}, opts);\n\n\tvar host = $('<div/>')\n\t\t.addClass(settings.oClasses.paging.container + (opts.type ? ' paging_' + opts.type : ''))\n\t\t.append(\n\t\t\t$('<nav>')\n\t\t\t\t.attr('aria-label', 'pagination')\n\t\t\t\t.addClass(settings.oClasses.paging.nav)\n\t\t);\n\tvar draw = function () {\n\t\t_pagingDraw(settings, host.children(), opts);\n\t};\n\n\tsettings.aoDrawCallback.push(draw);\n\n\t// Responsive redraw of paging control\n\t$(settings.nTable).on('column-sizing.dt.DT', draw);\n\n\treturn host;\n}, 'p' );\n\n/**\n * Dynamically create the button type array based on the configuration options.\n * This will only happen if the paging type is not defined.\n */\nfunction _pagingDynamic(opts) {\n\tvar out = [];\n\n\tif (opts.numbers) {\n\t\tout.push('numbers');\n\t}\n\n\tif (opts.previousNext) {\n\t\tout.unshift('previous');\n\t\tout.push('next');\n\t}\n\n\tif (opts.firstLast) {\n\t\tout.unshift('first');\n\t\tout.push('last');\n\t}\n\n\treturn out;\n}\n\nfunction _pagingDraw(settings, host, opts) {\n\tif (! settings._bInitComplete) {\n\t\treturn;\n\t}\n\n\tvar\n\t\tplugin = opts.type\n\t\t\t? DataTable.ext.pager[ opts.type ]\n\t\t\t: _pagingDynamic,\n\t\taria = settings.oLanguage.oAria.paginate || {},\n\t\tstart      = settings._iDisplayStart,\n\t\tlen        = settings._iDisplayLength,\n\t\tvisRecords = settings.fnRecordsDisplay(),\n\t\tall        = len === -1,\n\t\tpage = all ? 0 : Math.ceil( start / len ),\n\t\tpages = all ? 1 : Math.ceil( visRecords / len ),\n\t\tbuttons = [],\n\t\tbuttonEls = [],\n\t\tbuttonsNested = plugin(opts)\n\t\t\t.map(function (val) {\n\t\t\t\treturn val === 'numbers'\n\t\t\t\t\t? _pagingNumbers(page, pages, opts.buttons, opts.boundaryNumbers)\n\t\t\t\t\t: val;\n\t\t\t});\n\n\t// .flat() would be better, but not supported in old Safari\n\tbuttons = buttons.concat.apply(buttons, buttonsNested);\n\n\tfor (var i=0 ; i<buttons.length ; i++) {\n\t\tvar button = buttons[i];\n\n\t\tvar btnInfo = _pagingButtonInfo(settings, button, page, pages);\n\t\tvar btn = _fnRenderer( settings, 'pagingButton' )(\n\t\t\tsettings,\n\t\t\tbutton,\n\t\t\tbtnInfo.display,\n\t\t\tbtnInfo.active,\n\t\t\tbtnInfo.disabled\n\t\t);\n\n\t\tvar ariaLabel = typeof button === 'string'\n\t\t\t? aria[ button ]\n\t\t\t: aria.number\n\t\t\t\t? aria.number + (button+1)\n\t\t\t\t: null;\n\n\t\t// Common attributes\n\t\t$(btn.clicker).attr({\n\t\t\t'aria-controls': settings.sTableId,\n\t\t\t'aria-disabled': btnInfo.disabled ? 'true' : null,\n\t\t\t'aria-current': btnInfo.active ? 'page' : null,\n\t\t\t'aria-label': ariaLabel,\n\t\t\t'data-dt-idx': button,\n\t\t\t'tabIndex': btnInfo.disabled\n\t\t\t\t? -1\n\t\t\t\t: settings.iTabIndex\n\t\t\t\t\t? settings.iTabIndex\n\t\t\t\t\t: null, // `0` doesn't need a tabIndex since it is the default\n\t\t});\n\n\t\tif (typeof button !== 'number') {\n\t\t\t$(btn.clicker).addClass(button);\n\t\t}\n\n\t\t_fnBindAction(\n\t\t\tbtn.clicker, {action: button}, function(e) {\n\t\t\t\te.preventDefault();\n\n\t\t\t\t_fnPageChange( settings, e.data.action, true );\n\t\t\t}\n\t\t);\n\n\t\tbuttonEls.push(btn.display);\n\t}\n\n\tvar wrapped = _fnRenderer(settings, 'pagingContainer')(\n\t\tsettings, buttonEls\n\t);\n\n\tvar activeEl = host.find(document.activeElement).data('dt-idx');\n\n\thost.empty().append(wrapped);\n\n\tif ( activeEl !== undefined ) {\n\t\thost.find( '[data-dt-idx='+activeEl+']' ).trigger('focus');\n\t}\n\n\t// Responsive - check if the buttons are over two lines based on the\n\t// height of the buttons and the container.\n\tif (\n\t\tbuttonEls.length && // any buttons\n\t\topts.buttons > 1 && // prevent infinite\n\t\t$(host).height() >= ($(buttonEls[0]).outerHeight() * 2) - 10\n\t) {\n\t\t_pagingDraw(settings, host, $.extend({}, opts, { buttons: opts.buttons - 2 }));\n\t}\n}\n\n/**\n * Get properties for a button based on the current paging state of the table\n *\n * @param {*} settings DT settings object\n * @param {*} button The button type in question\n * @param {*} page Table's current page\n * @param {*} pages Number of pages\n * @returns Info object\n */\nfunction _pagingButtonInfo(settings, button, page, pages) {\n\tvar lang = settings.oLanguage.oPaginate;\n\tvar o = {\n\t\tdisplay: '',\n\t\tactive: false,\n\t\tdisabled: false\n\t};\n\n\tswitch ( button ) {\n\t\tcase 'ellipsis':\n\t\t\to.display = '&#x2026;';\n\t\t\to.disabled = true;\n\t\t\tbreak;\n\n\t\tcase 'first':\n\t\t\to.display = lang.sFirst;\n\n\t\t\tif (page === 0) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'previous':\n\t\t\to.display = lang.sPrevious;\n\n\t\t\tif ( page === 0 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'next':\n\t\t\to.display = lang.sNext;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tcase 'last':\n\t\t\to.display = lang.sLast;\n\n\t\t\tif ( pages === 0 || page === pages-1 ) {\n\t\t\t\to.disabled = true;\n\t\t\t}\n\t\t\tbreak;\n\n\t\tdefault:\n\t\t\tif ( typeof button === 'number' ) {\n\t\t\t\to.display = settings.fnFormatNumber( button + 1 );\n\t\t\t\t\n\t\t\t\tif (page === button) {\n\t\t\t\t\to.active = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\tbreak;\n\t}\n\n\treturn o;\n}\n\n/**\n * Compute what number buttons to show in the paging control\n *\n * @param {*} page Current page\n * @param {*} pages Total number of pages\n * @param {*} buttons Target number of number buttons\n * @param {boolean} addFirstLast Indicate if page 1 and end should be included\n * @returns Buttons to show\n */\nfunction _pagingNumbers ( page, pages, buttons, addFirstLast ) {\n\tvar\n\t\tnumbers = [],\n\t\thalf = Math.floor(buttons / 2),\n\t\tbefore = addFirstLast ? 2 : 1,\n\t\tafter = addFirstLast ? 1 : 0;\n\n\tif ( pages <= buttons ) {\n\t\tnumbers = _range(0, pages);\n\t}\n\telse if (buttons === 1) {\n\t\t// Single button - current page only\n\t\tnumbers = [page];\n\t}\n\telse if (buttons === 3) {\n\t\t// Special logic for just three buttons\n\t\tif (page <= 1) {\n\t\t\tnumbers = [0, 1, 'ellipsis'];\n\t\t}\n\t\telse if (page >= pages - 2) {\n\t\t\tnumbers = _range(pages-2, pages);\n\t\t\tnumbers.unshift('ellipsis');\n\t\t}\n\t\telse {\n\t\t\tnumbers = ['ellipsis', page, 'ellipsis'];\n\t\t}\n\t}\n\telse if ( page <= half ) {\n\t\tnumbers = _range(0, buttons-before);\n\t\tnumbers.push('ellipsis');\n\n\t\tif (addFirstLast) {\n\t\t\tnumbers.push(pages-1);\n\t\t}\n\t}\n\telse if ( page >= pages - 1 - half ) {\n\t\tnumbers = _range(pages-(buttons-before), pages);\n\t\tnumbers.unshift('ellipsis');\n\n\t\tif (addFirstLast) {\n\t\t\tnumbers.unshift(0);\n\t\t}\n\t}\n\telse {\n\t\tnumbers = _range(page-half+before, page+half-after);\n\t\tnumbers.push('ellipsis');\n\t\tnumbers.unshift('ellipsis');\n\n\t\tif (addFirstLast) {\n\t\t\tnumbers.push(pages-1);\n\t\t\tnumbers.unshift(0);\n\t\t}\n\t}\n\n\treturn numbers;\n}\n\nvar __lengthCounter = 0;\n\n// opts\n// - menu\n// - text\nDataTable.feature.register( 'pageLength', function ( settings, opts ) {\n\tvar features = settings.oFeatures;\n\n\t// For compatibility with the legacy `pageLength` top level option\n\tif (! features.bPaginate || ! features.bLengthChange) {\n\t\treturn null;\n\t}\n\n\topts = $.extend({\n\t\tmenu: settings.aLengthMenu,\n\t\ttext: settings.oLanguage.sLengthMenu\n\t}, opts);\n\n\tvar\n\t\tclasses  = settings.oClasses.length,\n\t\ttableId  = settings.sTableId,\n\t\tmenu     = opts.menu,\n\t\tlengths  = [],\n\t\tlanguage = [],\n\t\ti;\n\n\t// Options can be given in a number of ways\n\tif (Array.isArray( menu[0] )) {\n\t\t// Old 1.x style - 2D array\n\t\tlengths = menu[0];\n\t\tlanguage = menu[1];\n\t}\n\telse {\n\t\tfor ( i=0 ; i<menu.length ; i++ ) {\n\t\t\t// An object with different label and value\n\t\t\tif ($.isPlainObject(menu[i])) {\n\t\t\t\tlengths.push(menu[i].value);\n\t\t\t\tlanguage.push(menu[i].label);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// Or just a number to display and use\n\t\t\t\tlengths.push(menu[i]);\n\t\t\t\tlanguage.push(menu[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\t// We can put the <select> outside of the label if it is at the start or\n\t// end which helps improve accessability (not all screen readers like\n\t// implicit for elements).\n\tvar end = opts.text.match(/_MENU_$/);\n\tvar start = opts.text.match(/^_MENU_/);\n\tvar removed = opts.text.replace(/_MENU_/, '');\n\tvar str = '<label>' + opts.text + '</label>';\n\n\tif (start) {\n\t\tstr = '_MENU_<label>' + removed + '</label>';\n\t}\n\telse if (end) {\n\t\tstr = '<label>' + removed + '</label>_MENU_';\n\t}\n\n\t// Wrapper element - use a span as a holder for where the select will go\n\tvar tmpId = 'tmp-' + (+new Date())\n\tvar div = $('<div/>')\n\t\t.addClass( classes.container )\n\t\t.append(\n\t\t\tstr.replace( '_MENU_', '<span id=\"'+tmpId+'\"></span>' )\n\t\t);\n\n\t// Save text node content for macro updating\n\tvar textNodes = [];\n\tArray.from(div.find('label')[0].childNodes).forEach(function (el) {\n\t\tif (el.nodeType === Node.TEXT_NODE) {\n\t\t\ttextNodes.push({\n\t\t\t\tel: el,\n\t\t\t\ttext: el.textContent\n\t\t\t});\n\t\t}\n\t});\n\n\t// Update the label text in case it has an entries value\n\tvar updateEntries = function (len) {\n\t\ttextNodes.forEach(function (node) {\n\t\t\tnode.el.textContent = _fnMacros(settings, node.text, len);\n\t\t});\n\t}\n\n\t// Next, the select itself, along with the options\n\tvar select = $('<select/>', {\n\t\t'name':          tableId+'_length',\n\t\t'aria-controls': tableId,\n\t\t'class':         classes.select\n\t} );\n\n\tfor ( i=0 ; i<lengths.length ; i++ ) {\n\t\tselect[0][ i ] = new Option(\n\t\t\ttypeof language[i] === 'number' ?\n\t\t\t\tsettings.fnFormatNumber( language[i] ) :\n\t\t\t\tlanguage[i],\n\t\t\tlengths[i]\n\t\t);\n\t}\n\n\t// add for and id to label and input\n\tdiv.find('label').attr('for', 'dt-length-' + __lengthCounter);\n\tselect.attr('id', 'dt-length-' + __lengthCounter);\n\t__lengthCounter++;\n\n\t// Swap in the select list\n\tdiv.find('#' + tmpId).replaceWith(select);\n\n\t// Can't use `select` variable as user might provide their own and the\n\t// reference is broken by the use of outerHTML\n\t$('select', div)\n\t\t.val( settings._iDisplayLength )\n\t\t.on( 'change.DT', function() {\n\t\t\t_fnLengthChange( settings, $(this).val() );\n\t\t\t_fnDraw( settings );\n\t\t} );\n\n\t// Update node value whenever anything changes the table's length\n\t$(settings.nTable).on( 'length.dt.DT', function (e, s, len) {\n\t\tif ( settings === s ) {\n\t\t\t$('select', div).val( len );\n\n\t\t\t// Resolve plurals in the text for the new length\n\t\t\tupdateEntries(len);\n\t\t}\n\t} );\n\n\tupdateEntries(settings._iDisplayLength);\n\n\treturn div;\n}, 'l' );\n\n// jQuery access\n$.fn.dataTable = DataTable;\n\n// Provide access to the host jQuery object (circular reference)\nDataTable.$ = $;\n\n// Legacy aliases\n$.fn.dataTableSettings = DataTable.settings;\n$.fn.dataTableExt = DataTable.ext;\n\n// With a capital `D` we return a DataTables API instance rather than a\n// jQuery object\n$.fn.DataTable = function ( opts ) {\n\treturn $(this).dataTable( opts ).api();\n};\n\n// All properties that are available to $.fn.dataTable should also be\n// available on $.fn.DataTable\n$.each( DataTable, function ( prop, val ) {\n\t$.fn.DataTable[ prop ] = val;\n} );\n\nexport default DataTable;\n"],"mappings":"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ACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCqC,MAAM,EAAE,EAAE;EAGV;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCjK,QAAQ,EAAE;IACTmH,IAAI,EAAE,EAAE;IACRzF,MAAM,EAAE,EAAE;IACV4B,GAAG,EAAE;EACN,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;EACC4G,MAAM,EAAE;IACP;AACF;AACA;AACA;AACA;AACA;AACA;IACEd,IAAI,EAAE;EACP,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCe,KAAK,EAAE,CAAC,CAAC;EAGTC,QAAQ,EAAE;IACTC,UAAU,EAAE,CAAC,CAAC;IACdC,MAAM,EAAE,CAAC;EACV,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACCC,KAAK,EAAE,CAAC,CAAC;EAGT;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACChH,IAAI,EAAE;IACL;AACF;AACA;IACEiH,SAAS,EAAE,CAAC,CAAC;IAEb;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEC,MAAM,EAAE,EAAE;IAEV;AACF;AACA;IACEC,MAAM,EAAE,CAAC,CAAC;IAGV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACET,MAAM,EAAE,CAAC,CAAC;IAGV;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACEM,KAAK,EAAE,CAAC;EACT,CAAC;EAED;AACD;AACA;AACA;AACA;AACA;EACCzH,OAAO,EAAE,CAAC;EAGV;EACA;EACA;EACA;EACA;EACA;;EAEA;AACD;AACA;AACA;AACA;EACC6H,cAAc,EAAE5K,SAAS,CAAC4K,cAAc;EAGxC;AACD;AACA;AACA;AACA;EACCC,SAAS,EAAE,CAAC;EAGZ;AACD;AACA;AACA;AACA;EACCC,QAAQ,EAAE9K,SAAS,CAAC+K;AACrB,CAAC;;AAGD;AACA;AACA;AACAhL,CAAC,CAAC8B,MAAM,CAAEgI,IAAI,EAAE;EACfmB,YAAY,EAAEnB,IAAI,CAACK,MAAM;EACzBe,MAAM,EAAQpB,IAAI,CAACrG,IAAI,CAACkH,MAAM;EAC9BQ,SAAS,EAAKrB,IAAI,CAACrG,IA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;EAElB;AACD;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;AACA;EACC,KAAK,EAAE,IAAI;EAEX;AACD;AACA;AACA;EACC,KAAK,EAAE,CAAC,CAAC;EAET;AACD;AACA;EACC7B,WAAW,EAAE;AACd,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAlb,SAAS,CAACiD,MAAM,CAAC2T,OAAO,GAAG;EAC1B;AACD;AACA;EACC,KAAK,EAAE,IAAI;EAEX;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;EACC,UAAU,EAAE,IAAI;EAEhB;AACD;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;AACA;EACC,WAAW,EAAE,KAAK;EAElB;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAEf;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAEvB;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAEvB;AACD;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAEtB;AACD;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,YAAY,EAAE,IAAI;EAElB;EACA6H,YAAY,EAAE,IAAI;EAElB;AACD;AACA;EACC3H,WAAW,EAAE;AACd,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA9W,SAAS,CAACmB,QAAQ,GAAG;EACpB;AACD;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE,IAAI;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAC,KAAK,CAAC,CAAC;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,MAAM,EAAE,IAAI;EAGZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,CAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,CAAE;EAGlC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,EAAE;EAGlB;AACD;AACA;AACA;AACA;EACC,YAAY,EAAE,IAAI;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,KAAK;EAGjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAEf;AACD;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;EACC,WAAW,EAAE,IAAI;EAGjB;AACD;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,KAAK;EAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,KAAK;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,KAAK;EAGxB;AACD;AACA;AACA;AACA;EACC,aAAa,EAAE,KAAK;EAGpB;AACD;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAGb;AACD;AACA;AACA;EACC,YAAY,EAAE,IAAI;EAGlB;AACD;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;AACA;AACA;EACC,YAAY,EAAE,KAAK;EAGnB;AACD;AACA;AACA;AACA;EACC,cAAc,EAAE,IAAI;EAGpB;AACD;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;EACC,kBAAkB,EAAE,IAAI;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,SAAAq1B,CAAW8J,QAAQ,EAAG;IACvC,OAAOA,QAAQ,CAACvX,QAAQ,CAAC,CAAC,CAACna,OAAO,CACjC,uBAAuB,EACvB,IAAI,CAACvK,SAAS,CAACk8B,UAChB,CAAC;EACF,CAAC;EAGD;AACD;AACA;AACA;AACA;EACC,kBAAkB,EAAE,IAAI;EAGxB;AACD;AACA;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;EACC,mBAAmB,EAAE,IAAI;EAGzB;AACD;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;EACC,qBAAqB,EAAE,SAAA/L,CAAWxyB,QAAQ,EAAG;IAC5C,IAAI;MACH,OAAO2lB,IAAI,CAACC,KAAK,CAChB,CAAC5lB,QAAQ,CAAC0yB,cAAc,KAAK,CAAC,CAAC,GAAG8L,cAAc,GAAGC,YAAY,EAAEC,OAAO,CACvE,aAAa,GAAC1+B,QAAQ,CAAC6uB,SAAS,GAAC,GAAG,GAAC8P,QAAQ,CAACC,QAC/C,CACD,CAAC;IACF,CAAC,CAAC,OAAO/Y,CAAC,EAAE;MACX,OAAO,CAAC,CAAC;IACV;EACD,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,IAAI;EAGzB;AACD;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;EACC,qBAAqB,EAAE,SAAAwM,CAAWryB,QAAQ,EAAEF,IAAI,EAAG;IAClD,IAAI;MACH,CAACE,QAAQ,CAAC0yB,cAAc,KAAK,CAAC,CAAC,GAAG8L,cAAc,GAAGC,YAAY,EAAEI,OAAO,CACvE,aAAa,GAAC7+B,QAAQ,CAAC6uB,SAAS,GAAC,GAAG,GAAC8P,QAAQ,CAACC,QAAQ,EACtDjZ,IAAI,CAACmZ,SAAS,CAAEh/B,IAAK,CACtB,CAAC;IACF,CAAC,CAAC,OAAO+lB,CAAC,EAAE;MACX;IAAA;EAEF,CAAC;EAGD;AACD;AACA;AACA;AACA;AACA;AACA;EACC,mBAAmB,EAAE,IAAI;EAGzB;AACD;AACA;AACA;AACA;EACC,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAGpB;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,CAAC;EAGlB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,CAAC;EAGd;AACD;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,CAAC,CAAC;EAGd;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE;IACZ;AACF;AACA;AACA;AACA;IACE,OAAO,EAAE;MACR;AACH;AACA;MACG,WAAW,EAAE,oBAAoB;MAEjC;AACH;AACA;MACG,kBAAkB,EAAE,8BAA8B;MAElD;AACH;AACA;AACA;MACG,iBAAiB,EAAE,8BAA8B;MAEjDkZ,QAAQ,EAAE;QACTC,KAAK,EAAE,OAAO;QACdvwB,IAAI,EAAE,MAAM;QACZ2V,IAAI,EAAE,MAAM;QACZrW,QAAQ,EAAE,UAAU;QACpBkxB,MAAM,EAAE;MACT;IACD,CAAC;IAED;AACF;AACA;AACA;IACE,WAAW,EAAE;MACZ;AACH;AACA;MACG,QAAQ,EAAE,QAAQ;MAElB;AACH;AACA;MACG,OAAO,EAAE,QAAQ;MAEjB;AACH;AACA;MACG,OAAO,EAAE,QAAQ;MAEjB;AACH;AACA;MACG,WAAW,EAAE;IACd,CAAC;IAED;AACF;AACA;IACE1K,OAAO,EAAE;MACR7uB,CAAC,EAAE,SAAS;MACZ,CAAC,EAAE;IACJ,CAAC;IAED;AACF;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,4BAA4B;IAG3C;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,OAAO,EAAE,qDAAqD;IAG9D;AACF;AACA;AACA;IACE,YAAY,EAAE,qCAAqC;IAGnD;AACF;AACA;AACA;AACA;IACE,eAAe,EAAE,2CAA2C;IAG5D;AACF;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,EAAE;IAGlB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;IACE,UAAU,EAAE,EAAE;IAGd;AACF;AACA;AACA;AACA;AACA;IACE,YAAY,EAAE,GAAG;IAGjB;AACF;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,2BAA2B;IAG1C;AACF;AACA;AACA;AACA;AACA;AACA;IACE,iBAAiB,EAAE,YAAY;IAG/B;AACF;AACA;AACA;IACE,aAAa,EAAE,EAAE;IAGjB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE,SAAS;IAGpB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,oBAAoB,EAAE,EAAE;IAGxB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,MAAM,EAAE,EAAE;IAGV;AACF;AACA;AACA;AACA;IACE,cAAc,EAAE;EACjB,CAAC;EAGD;EACAsrB,gBAAgB,EAAE,IAAI;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAEjzB,CAAC,CAAC8B,MAAM,CAAE,CAAC,CAAC,EAAE7B,SAAS,CAACiD,MAAM,CAACiS,OAAQ,CAAC;EAGnD;AACD;AACA;EACCvJ,MAAM,EAAE;IACPu1B,QAAQ,EAAE,YAAY;IACtBC,MAAM,EAAE,QAAQ;IAChBC,WAAW,EAAE,MAAM;IACnBC,SAAS,EAAE;EACZ,CAAC;EAGD;AACD;AACA;EACC,MAAM,EAAE,IAAI;EAGZ;AACD;AACA;AACA;AACA;EACC,aAAa,EAAE,IAAI;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,EAAE;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,EAAE;EAGnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,EAAE;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAGtB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,UAAU,EAAE,IAAI;EAGhB;AACD;AACA;AACA;EACC,OAAO,EAAE,UAAU;EAGnB;AACD;AACA;EACC,SAAS,EAAE,IAAI;EAGf;AACD;AACA;EACCv7B,aAAa,EAAE;AAChB,CAAC;AAEDmO,eAAe,CAAEjU,SAAS,CAACmB,QAAS,CAAC;;AAIrC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACAnB,SAAS,CAACmB,QAAQ,CAACQ,MAAM,GAAG;EAC3B;AACD;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EACjB,WAAW,EAAE,CAAC,CAAC;EAEfolB,SAAS,EAAE,EAAE;EAGb;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE,CAAE,KAAK,EAAE,MAAM,EAAE,EAAE,CAAE;EAGlC;AACD;AACA;EACC,aAAa,EAAE,IAAI;EAGnB;AACD;AACA;EACC,WAAW,EAAE,IAAI;EAGjB;AACD;AACA;EACC,UAAU,EAAE,IAAI;EAGhB;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,IAAI;EAGrB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAGb;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,SAAS,EAAE,IAAI;EAGf;AACD;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAGjB;AACD;AACA;EACC,QAAQ,EAAE,EAAE;EAEZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAGrB;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,IAAI;EAGvB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,EAAE;EAGX;AACD;AACA;AACA;AACA;AACA;EACC,eAAe,EAAE,KAAK;EAGtB;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAGd;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAGb;AACD;AACA;AACA;AACA;AACA;EACC,QAAQ,EAAE;AACX,CAAC;AAED9S,eAAe,CAAEjU,SAAS,CAACmB,QAAQ,CAACQ,MAAO,CAAC;;AAI5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA3B,SAAS,CAACiD,MAAM,CAACD,SAAS,GAAG;EAC5B;AACD;AACA;EACC,WAAW,EAAE;IAEZ;AACF;AACA;AACA;AACA;AACA;IACE,YAAY,EAAE,IAAI;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,IAAI;IAEpB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE,IAAI;IAEf;AACF;AACA;AACA;IACE,OAAO,EAAE,IAAI;IAEb;AACF;AACA;AACA;IACE,eAAe,EAAE,IAAI;IAErB;AACF;AACA;AACA;AACA;AACA;IACE,WAAW,EAAE,IAAI;IAEjB;AACF;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,IAAI;IAEnB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,aAAa,EAAE,IAAI;IAEnB;AACF;AACA;AACA;AACA;IACE,OAAO,EAAE,IAAI;IAEb;AACF;AACA;AACA;AACA;IACE,YAAY,EAAE,IAAI;IAElB;AACF;AACA;AACA;AACA;AACA;AACA;IACE,cAAc,EAAE,IAAI;IAEpB;AACF;AACA;AACA;AACA;IACE,YAAY,EAAE;EACf,CAAC;EAGD;AACD;AACA;EACC,SAAS,EAAE;IACV;AACF;AACA;AACA;AACA;AACA;IACE,WAAW,EAAE,IAAI;IAEjB;AACF;AACA;AACA;IACE,WAAW,EAAE,CAAC;IAEd;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,EAAE,IAAI;IAEV;AACF;AACA;AACA;AACA;AACA;AACA;IACE,SAAS,EAAE,IAAI;IAEf;AACF;AACA;AACA;AACA;AACA;IACE,IAAI,EAAE;EACP,CAAC;EAED;AACD;AACA;EACC,WAAW,EAAE;IACZ;AACF;AACA;AACA;IACE,gBAAgB,EAAE;EACnB,CAAC;EAED;AACD;AACA;EACC,UAAU,EAAE;IACX;AACF;AACA;AACA;AACA;IACE,gBAAgB,EAAE,KAAK;IAEvB;AACF;AACA;IACE,UAAU,EAAE;EACb,CAAC;EAGD,MAAM,EAAE,IAAI;EAGZ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;AACA;EACC,QAAQ,EAAE,EAAE;EAEZ;AACD;AACA;EACC,WAAW,EAAE,EAAE;EAEf;AACD;AACA;EACC,iBAAiB,EAAE,EAAE;EAErB;AACD;AACA;EACC,MAAM,EAAE,CAAC,CAAC;EAEV;AACD;AACA;EACC,WAAW,EAAE,EAAE;EAEf;AACD;AACA;EACC,UAAU,EAAE,EAAE;EAEd;AACD;AACA;EACC,UAAU,EAAE,EAAE;EAEd;AACD;AACA;AACA;AACA;AACA;EACC,iBAAiB,EAAE,CAAC,CAAC;EAErB;AACD;AACA;EACC8T,WAAW,EAAE,CAAC,CAAC;EAEf;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,EAAE;EAErB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,WAAW,EAAE,IAAI;EAEjB;AACD;AACA;AACA;AACA;AACA;EACC,gBAAgB,EAAE,EAAE;EAEpB;AACD;AACA;EACC,eAAe,EAAE,CAAC;EAElB;AACD;AACA;EACC,eAAe,EAAE,EAAE;EAEnB;AACD;AACA;EACC,kBAAkB,EAAE,EAAE;EAEtB;AACD;AACA;EACC,kBAAkB,EAAE,EAAE;EAEtB;AACD;AACA;EACC,gBAAgB,EAAE,EAAE;EAEpB;AACD;AACA;EACC,sBAAsB,EAAE,EAAE;EAE1B;AACD;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAEvB;AACD;AACA;EACC,gBAAgB,EAAE,EAAE;EAGpB;AACD;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAEvB;AACD;AACA;AACA;EACC,mBAAmB,EAAE,EAAE;EAEvB;AACD;AACA;AACA;EACC,eAAe,EAAE,EAAE;EAEnB;AACD;AACA;EACC,UAAU,EAAE,EAAE;EAEd;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,QAAQ,EAAE,IAAI;EAEd;AACD;AACA;EACC,eAAe,EAAE,IAAI;EAErB;AACD;AACA;EACC,cAAc,EAAE,KAAK;EAErB;AACD;AACA;AACA;EACC,YAAY,EAAE,EAAE;EAEhB;AACD;AACA;AACA;AACA;AACA;EACC,MAAM,EAAE,IAAI;EAEZ;AACD;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;AACA;AACA;EACC,iBAAiB,EAAE,YAAY;EAE/B;AACD;AACA;EACCwqB,cAAc,EAAE,CAAC;EAEjB;AACD;AACA;AACA;AACA;EACC,gBAAgB,EAAE,CAAC;EAEnB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACC,aAAa,EAAE,EAAE;EAEjB;AACD;AACA;EACC,aAAa,EAAE,IAAI;EAEnB;AACD;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;EACC,cAAc,EAAE,IAAI;EAEpB;AACD;AACA;AACA;AACA;EACC,OAAO,EAAE,IAAI;EAEb;AACD;AACA;EACC,MAAM,EAAEhhC,SAAS;EAEjB;AACD;AACA;EACC,WAAW,EAAEA,SAAS;EAEtB;AACD;AACA;AACA;AACA;AACA;EACC,eAA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}